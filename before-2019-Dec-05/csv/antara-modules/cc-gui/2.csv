AuthorID;Author;Date;Content;Attachments;Reactions;
"371114647052615681";"Mylo#8306";"10-Oct-18 07:24 AM";"923am - not wasting time.  the komodo-rpc-lib in js needs writing and dev-testing anyway...dev docs. and cc need guis.  we'll have one my lunchtime working, maybe afternoon tea.";"";"";
"232679450301431808";"blackjok3r#3181";"10-Oct-18 07:24 AM";"Do you have link to your TUI so i can have a look at it please? I am about to start on a chat program for STAKEDTROLL maybe that wil give me son inspiration";"";"";
"371114647052615681";"Mylo#8306";"10-Oct-18 07:24 AM";"go away with your STAKEDTROLL :trollface:";"";"";
"272003866906722306";"TonyL#3577";"10-Oct-18 07:25 AM";"@blackjok3r https://github.com/tonymorony/cryptoconditions_tui";"";"";
"272003866906722306";"TonyL#3577";"10-Oct-18 07:26 AM";"Here also some methods in `tui_modules.py` which not using in `gateways_cc_cli.py` but I've used them before for oracles and tokens";"";"";
"272003866906722306";"TonyL#3577";"10-Oct-18 07:26 AM";"https://github.com/esotericnonsense/bitcoind-ncurses2 btw I found this one few days ago";"";"";
"272003866906722306";"TonyL#3577";"10-Oct-18 07:27 AM";"Learning now how to build really good TUIs üòÇ";"";"";
"232679450301431808";"blackjok3r#3181";"10-Oct-18 07:29 AM";"awesome ... yeah really want to get some skills in these aswell. I think they will really make people want to join in on STAKED more..";"";"";
"272003866906722306";"TonyL#3577";"10-Oct-18 07:31 AM";"Thats was my goal beside of functionality demonstration - to show that CC logic is so crystal and awesome that even 0 programming skills guy can make some dAPP on top";"";"";
"272003866906722306";"TonyL#3577";"10-Oct-18 07:32 AM";"@blackjok3r If it'll be on Python I will be happy to contribute";"";"üëå (1)";
"232679450301431808";"blackjok3r#3181";"10-Oct-18 07:32 AM";"I have mostly been using bash, but I think python is definatly a better way to go.";"";"";
"232679450301431808";"blackjok3r#3181";"10-Oct-18 07:33 AM";"whiich is why I wanted to have a look at yours before I start making anything";"";"";
"272003866906722306";"TonyL#3577";"10-Oct-18 07:33 AM";"Please note that I'm almost not handling exceptions atm üòÉ";"";"";
"232679450301431808";"blackjok3r#3181";"10-Oct-18 07:34 AM";"thats fine, so far on staked stuff because of Alrights wish to use automation, I have been busy writing hundreds of lines of error checks. üòÇ  fun fun";"";"trollface (1)";
"232679450301431808";"blackjok3r#3181";"10-Oct-18 07:35 AM";"run though in head anything that has ever gone wrong  when working on notary node, and scripting it to handle the situation, very hard to test it works...";"";"";
"272003866906722306";"TonyL#3577";"10-Oct-18 07:36 AM";"Yeah, if error somewhere in the middle of flow troubleshooting can eat tons of time";"";"";
"232679450301431808";"blackjok3r#3181";"10-Oct-18 07:40 AM";"oh yeah... spent the last few days debugging hre, getting much better at it.";"";"";
"456226577798135808";"Deleted User#0000";"11-Oct-18 11:54 PM";"Will look at it too. Only bash scripting here but I really want to learn python.";"";"";
"232679450301431808";"blackjok3r#3181";"12-Oct-18 03:05 AM";"python definatly seems easier over all.";"";"";
"232679450301431808";"blackjok3r#3181";"12-Oct-18 03:05 AM";"but bash is much better at some things... for staked, I used a combination of both, it looks messy but its very simple.";"";"";
"272003866906722306";"TonyL#3577";"12-Oct-18 05:30 AM";"";"https://cdn.discordapp.com/attachments/491327477558542336/500178436623564821/12-30-17-3c27dcbaeb5b7823f0d52b42718f3e84b684893f9072067c450ca546ccbc1001.jpg";"üêç (1),üòÇ (1)";
"371114647052615681";"Mylo#8306";"12-Oct-18 09:30 AM";"@TonyL suggestion for your TUI
Convert `subprocess from check_output` to xmlrpc client and your TUI will be available to remote servers
https://docs.python.org/3/library/xmlrpc.client.html";"";"";
"272003866906722306";"TonyL#3577";"12-Oct-18 09:31 AM";"@Mylo Thanks! Will have a look";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 09:32 AM";"This even better, does all the work for you https://pypi.org/project/json-rpc/";"";"ü§î (1)";
"272003866906722306";"TonyL#3577";"12-Oct-18 09:33 AM";"I usually rape check_output() by decode() and rstrip() and then do json.loads() to work as with dictionary";"";"";
"272003866906722306";"TonyL#3577";"12-Oct-18 09:35 AM";"@Mylo So if I'll implement this my TUI will make RPC calls to komodod and remote servers will able to make RPC calls to my TUI? Like a interlayer";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 09:52 AM";"Yes.  Like TUI will be useful from host -> docker as well.
Further, in the case of @blackjok3r TROLL chat chain, if you were to have a config TUI section (e.g. press 1 to configure, enter host, enter port, enter user, enter pass) he could run XX TUI processes in his tmux fantasy land and chat to himself to his hearts content across nodes üòõ";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 09:55 AM";"By removing the need to be ‚Äúon localhost‚Äù calling sub-process stuff and making it all within your py process and json network comms, you can then also think about making stuff with https://kivy.org/#home

I would create a small test.py script, use a json-rpc library with `getinfo` to make sure you can do it to localhost.   Then try from localhost -> docker.   Then convert TUI to that method, maybe in a new branch.  `git checkout -b networkcomms` whilst in dev";"";"shexy (2)";
"272003866906722306";"TonyL#3577";"12-Oct-18 10:02 AM";"Cool, all new functions for my ""library"" I wrote to be not demand on from where input coming (TUI actually just implementation of this ""library"" with keyboard args input). So it should be scalable and easy to change for needed args receiving by RPC, or somewhere else). Can go ahead with RPC integration as soon as finish with gatewaysCC multisig testing process";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 10:15 AM";"Yes best way to make stuff you probably know MVC pattern (model view controller).  As a GUI, one of the kivy featured projects looks like this.   I would guess they have a good separation-of-concerns making GUI separate from any logic being an academic application for researchers - it looks good from the menu, it may give you an easy head start to making TUI a GUI - even with sub-process if you didn‚Äôt want to do the network comms part.  https://trifusion.readthedocs.io/en/latest/limitations.html";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 10:15 AM";"If anything it might give you hints";"";"";
"272003866906722306";"TonyL#3577";"12-Oct-18 10:16 AM";"I've played with Yii framework few years ago, can imagine what MVC is but it's need full time concentration to make usable product ohh";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 10:22 AM";"Only need to get the ball rolling, komodo just needs to get balls rolling - more balls rolling and better versions of pretty balls rolling will happen.";"";"";
"272003866906722306";"TonyL#3577";"12-Oct-18 10:23 AM";"This is basically what I am capable of since I'm not a developer üòÉ";"";"";
"272003866906722306";"TonyL#3577";"12-Oct-18 10:23 AM";"Rolling balls, scratching balls... üòÇ";"";"";
"232679450301431808";"blackjok3r#3181";"12-Oct-18 10:25 AM";"Guessing u til it works üòÇ";"";"üòÇ (1)";
"371114647052615681";"Mylo#8306";"12-Oct-18 10:29 AM";"Hehe yes.  But it‚Äôs a very necessary part in the development cycle, quick iterations.
MVC,
Model = database
View = GUI
Controller = your library

Blockchain, View, Tony‚Äôs Library.   Same application architecture, your library is what komodo-rpc-lib is in JavaScript when done with json-rpc.

At the moment python in the browser is not popular but it looks like steps in making python->WASM (web assembly) is already happening.

The more generalized rpc-libs in different languages the more availability to developers to make applications.  Js, python.   Splitting python workload across a few community members and the 200+ komodo RPC methods will be done.";"";"üôå (1)";
"371114647052615681";"Mylo#8306";"12-Oct-18 10:38 AM";"Also the beauty is with a komodo-rpc-lib-js & komodo-rpc-lib-py they are compatible with VRSC.  Taking to the next step, because kmd rpc has more than other coins, the libraries can be used for other coins (with some configuration modification).  And re-using james‚Äô bitmask calculations, where:
KMD = 1
VRSC = 2
ZEC= 4
HUSH = 8
EMC2 = 16

A method in the rpc library with a compatibility value of ‚Äú3‚Äù could be called for a KMD/VRSC application.   If a different method (say MoMoM) has a value of 27, then all but ZEC supports this method call for a GUI application to use.
```
0001 1011 <‚Äî from R to L (right to left), KMD, VRSC, ZEC, HUSH, EMC2 
```";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 10:39 AM";"Use the bits as switches (on/off) for support.  Assign each bit to a coin.  Whether it can be used with the method.";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 10:41 AM";"!kmdtip @TonyL 0.01 test";"";"";
"499325474128920597";"KMD TipBot#0077";"12-Oct-18 10:41 AM";"";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 10:41 AM";"Lol";"";"";
"272003866906722306";"TonyL#3577";"12-Oct-18 10:42 AM";"@Mylo üçª";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:06 PM";"@Bryan_Beus read up a bit and that's the gist of what we are doing in both js and python.  fill in the gaps where you want/can - the js code has stubbed out methods waiting for implementation.  the python stuff needs porting from sub-process (spawning an external command) to network commands.   and we're off to the races!";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:07 PM";"from tony's penguin meme onwards.";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:09 PM";"this part needs to be swapped out for network comms https://github.com/tonymorony/cryptoconditions_tui/blob/master/tui_modules.py#L6";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:09 PM";"e.g. on line 20 https://github.com/tonymorony/cryptoconditions_tui/blob/master/tui_modules.py#L20";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:10 PM";"this calls ""check_output"" where instead it could be rpc.sendrawtransaction()";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:10 PM";"passing in the details";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:11 PM";"and the equivalent js one in es6.   https://github.com/imylomylo/komodo-rpc-lib/blob/master/src/rawtransactions/index.js#L68";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:13 PM";"`getinfo` is already done...no arguments to pass in as an example https://github.com/imylomylo/komodo-rpc-lib/blob/master/src/control/index.js#L59";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:13 PM";"that's the pattern repeated for stuff that doesn't have any arguments.   for stuff that does, just a matter of passing it in, and `resolve(resp)` it.";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:14 PM";"the same thing will happen with tony's python lib.   stub out the entire set of commands, then implement them.";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 02:15 PM";"all the @api annotations in the getinfo file are the things that get compiled for apidocs";"";"";
"369608312955731968";"Bryan_Beus#6442";"12-Oct-18 02:24 PM";"reading through";"";"üëç (1)";
"371114647052615681";"Mylo#8306";"12-Oct-18 03:27 PM";"@TonyL working python3 json rpc with authentication.  will save you a bit of mucking around

https://gist.github.com/imylomylo/7bfcd4a44082386421da0082b9ebc77a";"";"";
"371114647052615681";"Mylo#8306";"12-Oct-18 03:30 PM";"@Deleted User or @patchkez can you help tony if he has some questions on python code organisation pls";"";"üëç (2)";
"272003866906722306";"TonyL#3577";"12-Oct-18 03:49 PM";"Thanks @Mylo ! Will go ahead tomorrow";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 07:31 AM";"Hi @Mylo ! Your gist worked for me with some additional dependencies before execute ` pip3 install ""jsonrpcclient[requests]""`
 ```sudo apt-get install python3-setuptools 
pip3 install wheel```

Have same error with schema validation. Looks like it's not python problem but validation when matching with this schema http://json-schema.org/draft-04/schema

As I understand Komodo RPC uses JSON-RPC 1.0 interface while this lib works only with JSON-RPC 2.0 and matching with this schema 

Tried to disable schema verification:
`response = client.send('{""jsonrpc"": ""1.0"", ""method"": ""getinfo"", ""id"": 1, ""params"": []}', verify=False,  headers={""content-type"": ""application/json-rpc""})` but same error

Gonna search for another rpc lib";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 07:48 AM";"https://github.com/jgarzik/python-bitcoinrpc
https://gist.github.com/tonymorony/886d411663b8612f0ae4077e73ad6e94
Found this lib working for me";"";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:20 AM";"```
rpc_connection = AuthServiceProxy(""http://%s:%s@127.0.0.1:56212""%(""user3150903419"", ""passe8fe2d8aa38c4e6faca129c6f3a6261a605e72a76eff36f2a5897dc7a03c2878b9""))
get_info = rpc_connection.getinfo()
```
that's awesome.  ok, have a test with one of the methods that you need to pass in variables as well, then i think you can go to the races üèá";"";"üèé (1)";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:34 AM";"```
oracleinfo = rpc_connection.oraclesinfo(""b4a8df531ebcbca78669a0a13ce4eb109276172a0c5df6e53c36ee9b527bd221"")```
```print(oracleinfo)
{'result': 'success', 'txid': 'b4a8df531ebcbca78669a0a13ce4eb109276172a0c5df6e53c36ee9b527bd221', 'name': 'Alright', 'description': 'test', 'format': 'S', 'marker': 'RCHrEcMk8SZCYejwTzjrMiPh9AoUmgZgMP', 'registered': [{'publisher': '02648d4edd56fd12b09bf9483e7b40407cce83ecdeb3ebd26b480ff5f5e8493baf', 'baton': 'RBYorBDPZjUjym59qmK3pt56peBfyCqGTC', 'batontxid': 'e7e2160b811b1f656aa80ed7e0d2a18c7e0598b8b14a2c51889763493113da57', 'lifetime': '0.00000000', 'funds': '10198.90000000', 'datafee': '0.00010000'}, {'publisher': '02648d4edd56fd12b09bf9483e7b40407cce83ecdeb3ebd26b480ff5f5e8493baf', 'baton': 'RBYorBDPZjUjym59qmK3pt56peBfyCqGTC', 'batontxid': 'e7e2160b811b1f656aa80ed7e0d2a18c7e0598b8b14a2c51889763493113da57', 'lifetime': '0.00000000', 'funds': '10198.90000000', 'datafee': '1.00000000'}]}```
Seems I'm in a game üòÉ";"";"üéâ (1)";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:39 AM";"try !localhost";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:41 AM";"@Mylo I have to allow client IP in .conf in `rpcallowip` param ?";"";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:41 AM";"yes";"";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:42 AM";"`rpcallowip=0.0.0.0/0` that for now, uncomplicated";"";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:42 AM";"totally insecure";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:42 AM";"Yeah, doors are open for anyone )";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:43 AM";"Anyway it's testnet";"";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:43 AM";"this is how the docker network testing started";"";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:43 AM";"at least it was local";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:48 AM";"Connected from one node to another by external IP - can execute calls no prob";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:49 AM";"For security reasons will not spoil calls here üòÇ";"";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:50 AM";"cool - i best get back to coding the js libs sometime this week now that there is a some python stuff floating about üòõ";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:52 AM";"I'll try to make some python CC desktop GUI next week with this lib usage ( I remember you've shared cool framework for it). For Dice CC probably";"";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:55 AM";"yeah dice will be my first target in the cakeshop demo.   dice samples CC usage of RNG, challenge response.   having py & js accessibility for tech tuesday updates in the future will allow devs to play around with it through nov/dec/jan til launch on the different CCs.  we want more dev activity at the application level.  these libs will allow better exposure üòÉ";"";"üöÄ (1)";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:55 AM";"thanks for playing along with your TUI and beyond!";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:56 AM";"Thanks for supporting of my enthusiasm! üôå";"";"Komodo (1)";
"371114647052615681";"Mylo#8306";"14-Oct-18 11:56 AM";"same can be re-done with iguana/marketmaker too üòÑ";"";"ü§ï (1)";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:58 AM";"Iguana and marketmaker are blackboxes for me for now üòÉ";"";"";
"272003866906722306";"TonyL#3577";"14-Oct-18 11:59 AM";"";"https://cdn.discordapp.com/attachments/491327477558542336/501001071620128773/unknown.png";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 12:00 PM";"I prefer CC stuff, more innovative thinking for me rather than fintech focus.";"";"";
"371114647052615681";"Mylo#8306";"14-Oct-18 12:01 PM";"But for creating a library, might be useful for making better trading apps for ppl that like that üí©";"";"üòÉ (1)";
"439780323497082880";"CMaurice#1685";"15-Oct-18 09:47 PM";"Just an idea that the .rst rpc doc files could be parsed to create a UI";"";"";
"439780323497082880";"CMaurice#1685";"15-Oct-18 09:48 PM";"also could be the basis for a fuzzing tool for testing CC";"";"";
"371114647052615681";"Mylo#8306";"16-Oct-18 07:58 AM";"Link?";"";"";
"439780323497082880";"CMaurice#1685";"16-Oct-18 09:22 AM";"Unsure if that's a request for me @Mylo  but a .rst file (e.g. https://raw.githubusercontent.com/KomodoPlatform/Documentation/master/docs/source/cc/contracts/tokens/rpc/tokencancelask.rst ) can be parsed with docutils in Python";"";"";
"272003866906722306";"TonyL#3577";"16-Oct-18 02:21 PM";"@Mylo Kivy framework seems supercool 
Also connected RPC lib, but have to think now about auth part since I've just hardcoded RPC connection details for now";"https://cdn.discordapp.com/attachments/491327477558542336/501761715973783574/unknown.png";"üëè (1)";
"272003866906722306";"TonyL#3577";"16-Oct-18 02:24 PM";"If there will be some SPV mode it would be powerful -  this framework allows to build app for Android, MacOS, Windows and Linux with fully compatible code";"";"";
"347922216429813760";"grewalsatinder#9653";"16-Oct-18 03:05 PM";"Nice start mate! üôÇ üëç";"";"üôå (1)";
"272003866906722306";"TonyL#3577";"16-Oct-18 03:06 PM";"Thanks @grewalsatinder Kinda Hello World :))";"";"";
"347922216429813760";"grewalsatinder#9653";"16-Oct-18 03:08 PM";"yep, a first step is important one.... glad to see you progressing ahead üôÇ";"";"üëç (1)";
"272003866906722306";"TonyL#3577";"17-Oct-18 07:20 AM";"@Deleted User @patchkez 
I want to make Python RPC library similar to this https://github.com/imylomylo/komodo-rpc-lib on top of this one https://github.com/jgarzik/python-bitcoinrpc
And thinking now regards code organisation to make it really usable.
What is the best practice to include this  https://github.com/jgarzik/python-bitcoinrpc library to mine and how better place my modules for different stuff?
I wonder maybe there is some PEP recommendations for such stuff.
Thank you in advance!";"";"";
"406037988850794496";"patchkez#5349";"17-Oct-18 07:52 AM";"@TonyL Have a look on https://github.com/petertodd/python-bitcoinlib which does not support only rpc but also other tools, e.g. for wallet, signing messages...";"";"";
"272003866906722306";"TonyL#3577";"17-Oct-18 07:58 AM";"Thanks @patchkez will try this one";"";"";
"406037988850794496";"patchkez#5349";"17-Oct-18 07:59 AM";"@TonyL I am not so good in object programming, but I would try to import python-bitcoinlib as a module into your project and override classes with changes specific for KMD";"";"";
"406037988850794496";"patchkez#5349";"17-Oct-18 08:00 AM";"that way, you can consume python-bitcoinlib with all new improvements he introduces and do not have to cherry pick his commits into your repo";"";"";
"406037988850794496";"patchkez#5349";"17-Oct-18 08:00 AM";"maybe @Deleted User has other ideas";"";"";
"371114647052615681";"Mylo#8306";"17-Oct-18 08:03 AM";"Looks like I might learn some python this year!";"";"üíØ (2),üêç (2)";
"272003866906722306";"TonyL#3577";"17-Oct-18 08:04 AM";"https://github.com/jgarzik/python-bitcoinlib/blob/master/bitcoin/rpc.py#L83 @patchkez yeah, looks like there is a wide amount of places which should be adopted for Komodo";"";"";
