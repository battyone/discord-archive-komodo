AuthorID;Author;Date;Content;Attachments;Reactions;
"272003866906722306";"TonyL#3577";"21-Dec-18 11:30 PM";"https://docs.google.com/spreadsheets/d/1l0dWEPcrv9zE11_TD-XrX_HIYV0VLpadCJN6hvaZERc/edit#gid=55258823 New `channelslist` call was added 
`channelsinfo` not displaying list of channels anymore. Changes are reflected in document above on `channels` page";"";"";
"424224648889106444";"Mihailo#5902";"22-Dec-18 05:59 PM";"@TonyL Sorry that I did not notify anybody, I found a bug in channels and fixed it and also changed channelsinfo to be JSON format, and moved list of channels to channellist!";"";"";
"272003866906722306";"TonyL#3577";"22-Dec-18 06:00 PM";"@Mihailo Sure, no problem üëç  I've found it as soon as continued to work on ChannelsCC GUI üòÉ";"";"";
"424224648889106444";"Mihailo#5902";"22-Dec-18 06:03 PM";"üëç";"";"";
"272003866906722306";"TonyL#3577";"19-Jan-19 12:52 PM";"@Mihailo I'm making a channel between nodes A and B. Then broadcasting  one `channelspayment` transaction but not mine it to reveal secret of this transaction.
After it I'm stopping daemon on node A, waiting for some time and then trying to generate channelspayment transaction on node B using a secret from channelsinfo for not mined payment but getting: ```invalid secret supplied
 {""result"": ""error"", ""error"": ""couldnt create channelspayment transaction""}```
Am I missing something?";"";"";
"455741312273219595";"jl777c#5810";"19-Jan-19 12:53 PM";"that should work...";"";"";
"455741312273219595";"jl777c#5810";"19-Jan-19 12:53 PM";"seems a bug!";"";"";
"272003866906722306";"TonyL#3577";"19-Jan-19 01:03 PM";"I've ensured that node B see this transaction from node A in mempool, also ensured that node B see a secret in channelsinfo. Mining was disabled on both nodes (only nodes in chain).
After Node A stopping Node B still see this channelspayment in mempool";"";"";
"272003866906722306";"TonyL#3577";"19-Jan-19 01:03 PM";"```./komodo-cli -ac_name=TONY10 channelsinfo bdc11caed9b119885142e79a06c6f00b1bc65b21d378bd4707bc12c0564233ab
{
  ""result"": ""success"",
  ""Channel CC address"": ""RSLwFb2Sg137zNGZBiRQqXqqdmioEJvNhY"",
  ""Destination address"": ""REGx42d3QriW89Q2c7fT4dDydz1qfE2cNA"",
  ""Number of payments"": 10,
  ""Denomination (satoshi)"": ""1000000"",
  ""Amount (satoshi)"": ""10000000"",
  ""Transactions"": [
    {
      ""Open"": ""bdc11caed9b119885142e79a06c6f00b1bc65b21d378bd4707bc12c0564233ab""
    },
    {
      ""Payment"": ""b18242e8865e3547f63d90e5a01b6d3914e096eccc0a73ecadc8f892395dd8bc"",
      ""Number of payments"": 1,
      ""Amount"": 1000000,
      ""Destination"": ""REGx42d3QriW89Q2c7fT4dDydz1qfE2cNA"",
      ""Secret"": ""453d5561f901589ae03dcd1a9710bf41659f0d33202fbecf2bc9a4e15072403a"",
      ""Payments left"": 9
    }
  ]
}```";"";"";
"272003866906722306";"TonyL#3577";"19-Jan-19 01:03 PM";"```./komodo-cli -ac_name=TONY10 getrawmempool
[
  ""b18242e8865e3547f63d90e5a01b6d3914e096eccc0a73ecadc8f892395dd8bc""
]
```";"";"";
"272003866906722306";"TonyL#3577";"19-Jan-19 01:03 PM";"```./komodo-cli -ac_name=TONY10 channelspayment bdc11caed9b119885142e79a06c6f00b1bc65b21d378bd4707bc12c0564233ab 1000000 453d5561f901589ae03dcd1a9710bf41659f0d33202fbecf2bc9a4e15072403a
invalid secret supplied
{
  ""result"": ""error"",
  ""error"": ""couldnt create channelspayment transaction""
}
```";"";"";
"455741312273219595";"jl777c#5810";"19-Jan-19 01:04 PM";"is there a different rpc for receiver to make a payment?";"";"";
"455741312273219595";"jl777c#5810";"19-Jan-19 01:04 PM";"once in the local mempool, the external node going offline better not be able to affect your local mempool";"";"";
"272003866906722306";"TonyL#3577";"19-Jan-19 01:06 PM";"There is only one RPC call for channel payment as I know
Seems I've missed at least one commit which has changes for channels.cpp, let me rebuild and check again";"";"";
"272003866906722306";"TonyL#3577";"19-Jan-19 01:33 PM";"Same behaviour on very latest FSM commit ```git log -1
commit d13264a169cb6a22d94008ba966ec6ea453b1950 (HEAD -> FSM, origin/FSM)
Merge: bfccd586f 5a4fd8b15
Author: jl777 <jl777@users.noreply.github.com>
Date:   Fri Jan 18 00:02:41 2019 -1100

    Merge pull request #1185 from tonymorony/FSM
    
    fixed existing token tests```";"";"";
"272003866906722306";"TonyL#3577";"20-Jan-19 08:20 AM";"Also seems `channelsclose` is not work on this version:
```./komodo-cli -ac_name=TONY10 channelsinfo f08e8e1bd5f0f43b58ad1bb25400082586a5379827a79f0c9c9f7ebfa57b3230
{
  ""result"": ""success"",
  ""Channel CC address"": ""RXnotNMC9pLcvXvaPg5zjjcg4gNJf8Hw1C"",
  ""Destination address"": ""REGx42d3QriW89Q2c7fT4dDydz1qfE2cNA"",
  ""Number of payments"": 10,
  ""Denomination (satoshi)"": ""1000000"",
  ""Amount (satoshi)"": ""10000000"",
  ""Transactions"": [
    {
      ""Open"": ""f08e8e1bd5f0f43b58ad1bb25400082586a5379827a79f0c9c9f7ebfa57b3230""
    },
    {
      ""Payment"": ""8c6cb28bee0ef16001749b07f2a53c3c626d25de4921b0073875f3ac50b12030"",
      ""Number of payments"": 1,
      ""Amount"": 1000000,
      ""Destination"": ""REGx42d3QriW89Q2c7fT4dDydz1qfE2cNA"",
      ""Secret"": ""62931dd8e118a4e79df345c7ae2113b69865b2ae3aa03c7854d10915b135b9ab"",
      ""Payments left"": 9
    }
  ]
}
```";"";"";
"272003866906722306";"TonyL#3577";"20-Jan-19 08:20 AM";"```./komodo-cli -ac_name=TONY10 channelsclose f08e8e1bd5f0f43b58ad1bb25400082586a5379827a79f0c9c9f7ebfa57b3230
{
  ""result"": ""success"",
  ""hex"": ""0400008085202f8903040448a56c31bb7e4d05650eb40e7ec159e0425ae8cd758264e58d4edd55a659000000004847304402207bf2fb5dbd2f586337766ab43348d4880130f2566e61154e334f582d4f79050102205b8a4bb0022724597dfb391cccd95af3dabc1a05f81fcb9311209872904d956101ffffffff3020b150acf3753807b02149de256d623c3ca5f2079b740160f10eee8bb26c8c00000000a74ca5a281a1a0819ca28194a067a56580210287fb1878a131ec908088d703dd654144b5017c5cf30b5c9ba7b7f150342d10ad814003d46c89d2ea41c18568304701624e50f41f3ff0828d0e94e915148d14dc601b30472ce7576e10171da8a1602d146124eaab8ace252ea558f990a36eb98a0612a129a527802060296c301dc359dda3af358b40fbfbec4405c6f35a3a4151bab2c54d3f77ec608103020000af038001eba10001ffffffff3020b150acf3753807b02149de256d623c3ca5f2079b740160f10eee8bb26c8c010000007b4c79a276a072a26ba067a56580210287fb1878a131ec908088d703dd654144b5017c5cf30b5c9ba7b7f150342d10ad814066483ce6b094993f4b443d397a445b324fae80471799e381f4b67b0b8a9d19f6188de54fcd281fd384287a943455a0106ae2a2b6b9724450eee0a97b1734922ca100af038001eba10001ffffffff05302d890000000000302ea22c8020fc207461303543d37647e26ead37952d3a302c81fe1ad806fa831d0c11d8eea281031210008203000401cc1027000000000000302ea22c8020ff15b12dd6e8de39a97e0d199c46a2c64d639de58883f1c21477f56044c2f4f08103120c008203000401cc1027000000000000302ea22c802055c9c4271c5a8387f6b747af92a59d8a7e4cd60ec834fb558737e27fe7a6e9928103120c008203000401ccf078724e1809000023210287fb1878a131ec908088d703dd654144b5017c5cf30b5c9ba7b7f150342d10adac0000000000000000956a4c92eb4330327ba5bf7e9f9c0c9fa7279837a58625080054b21bad583bf4f0d51b8e8ef0210287fb1878a131ec908088d703dd654144b5017c5cf30b5c9ba7b7f150342d10ad21032b6702a8a83b64962e6aee1c0c47751564ca4620ca469c925c19bd1cb451c5aa0800000040420f0000000000000000000000000000000000000000000000000000000000000000000000000000000000a80100000000000000000000000000""
}
```";"";"";
"272003866906722306";"TonyL#3577";"20-Jan-19 08:20 AM";"On broadcast:
```inputs 9000000 vs outputs 8990000
CC Eval EVAL_CHANNELS Invalid: invalid channel inputs vs. outputs! spending tx 8c6cb28bee0ef16001749b07f2a53c3c626d25de4921b0073875f3ac50b12030
error code: -26
error message:
16: mandatory-script-verify-flag-failed (Script evaluated without error but finished with a false/empty top stack element)```";"";"";
"272003866906722306";"TonyL#3577";"20-Jan-19 08:21 AM";"Detected by auto-tests which passed before and re-checked manually";"";"";
"424224648889106444";"Mihailo#5902";"21-Jan-19 09:47 AM";"@TonyL The problem is that you made node B see the payment in meme pool. You must create a payment on node A that is totaly disconnected from the network, then when you see the secret you stop node A, start node B and make a payment. If the payment from node A is in mempool on node B then it is a existing payment and you won't be able to make it again, it must be a new payment.";"";"";
"424224648889106444";"Mihailo#5902";"21-Jan-19 09:49 AM";"The case when you see the payment in your mempool and see the secret is when the chain reorgs and the payment is gone. But you are trying to test it without chain reorg so you must make it that the payment does not exist in node B!";"";"";
"424224648889106444";"Mihailo#5902";"21-Jan-19 09:50 AM";"For the channelclose, it hsould work. I had some fix regarding this I think. Let me check.";"";"";
"272003866906722306";"TonyL#3577";"21-Jan-19 09:53 AM";"Oh, It's clear now - will try this way, thanksüëç";"";"";
"424224648889106444";"Mihailo#5902";"21-Jan-19 09:53 AM";"Ok, my bad for channelsclose. Will fix it now.";"";"üëç (1)";
"424224648889106444";"Mihailo#5902";"21-Jan-19 10:29 AM";"@TonyL https://github.com/jl777/komodo/pull/1192";"";"üôå (1)";
"424224648889106444";"Mihailo#5902";"21-Jan-19 10:29 AM";"Now you will have all errors in RPC for channels üòâ";"";"";
"272003866906722306";"TonyL#3577";"21-Jan-19 10:40 AM";"Great! Will go ahead with re-test üòÉ";"";"";
"455741312273219595";"jl777c#5810";"21-Jan-19 12:53 PM";"merged";"";"üëå (1)";
"272003866906722306";"TonyL#3577";"21-Jan-19 01:44 PM";"`channelsclose` is fine now";"";"";
"272003866906722306";"TonyL#3577";"21-Jan-19 01:44 PM";"Making more tests for channels";"";"";
"272003866906722306";"TonyL#3577";"21-Jan-19 02:53 PM";"Disconnected node A from network (banned node B and ensured that both nodes A and B have connections: 0)
Then revealed secret by transaction initiation on node A (ensured that secret is not available for node B), then initiated `channelspayment` from node B and it's worked fine üëç";"";"üëå (1)";
"272003866906722306";"TonyL#3577";"21-Jan-19 03:40 PM";"```komodod: txmempool.cpp:619: void CTxMemPool::check(const CCoinsViewCache*) const: Assertion `coins && coins->IsAvailable(txin.prevout.n)' failed.```
Have problems with nodes syncing back after such case in tests";"";"";
"272003866906722306";"TonyL#3577";"21-Jan-19 03:40 PM";"Gonna try on non-regtest chain now";"";"";
"424224648889106444";"Mihailo#5902";"21-Jan-19 03:41 PM";"I also had some wierd problem when testing, when I issued a payment on one node it added input from a tx that seems to be non-existent when I tried to broadcast it... Something strange is going on üòâ";"";"PeepoThink (1)";
"272003866906722306";"TonyL#3577";"21-Jan-19 03:43 PM";"In test framework daemon just crashed with this error above after I connected node A back to the network.
Will try to collect better backtrace If it's repeatable on non-regtest chain";"";"";
"272003866906722306";"TonyL#3577";"21-Jan-19 07:49 PM";"Seems my problem actual in the `regtest` mode only - in usual mode cant reproduce it so far.
 In `regtest` getting ```komodod: txmempool.cpp:619: void CTxMemPool::check(const CCoinsViewCache*) const: Assertion `coins && coins->IsAvailable(txin.prevout.n)' failed.
``` as soon as both nodes with different `channelspayment` transactions in mempool are online and I'm trying to generate a new block";"";"";
"424224648889106444";"Mihailo#5902";"22-Jan-19 10:23 AM";"Well, this should be investigated... Did you try this witout regtest mode, and what happenes when both nodes are online?";"";"";
"272003866906722306";"TonyL#3577";"22-Jan-19 10:49 AM";"Yes I've tried this without regtest mode - in such case payment succeed.
Transaction from node B (transaction which created with revealed secret as an argument) mine as actual and transaction from node A mempool (secret revealing transaction) disappear";"";"";
"424224648889106444";"Mihailo#5902";"22-Jan-19 11:14 AM";"Ok, never tried this if it happens that both sender and receiver some how publish payment - what would happen.";"";"";
"272003866906722306";"TonyL#3577";"22-Jan-19 11:22 AM";"Node A is offline and publish `channelspayment` transaction to mempool for secret revealing
Node B publishing transaction with `channelspayment` to mempool  with secret usage
And then I'm not generating any blocks on node B and put node A back online";"";"";
"424224648889106444";"Mihailo#5902";"22-Jan-19 11:26 AM";"üëç";"";"";
"548272654407434240";"criptolady#5350";"01-Mar-19 05:44 PM";"Hiii!!!! I need admin";"";"";
"272003866906722306";"TonyL#3577";"03-Mar-19 03:59 PM";"@smk762 -  dracocanis ominator Started to repair CCs auto-tests and it detected problem with `channelslist` call, which reproducing on usual non-regtest FSM daemon as well:
```./komodo-cli -ac_name=GWTEST3 channelslist
error code: -1
error message:
to use CC contracts, you need to launch daemon with valid -pubkey= for an address in your wallet```
other channels calls seems to work correct
@Mihailo";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 04:04 PM";"Hmmm, I'll check it out but it shouldn't give this error if it is ran with -pubkey...";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:18 PM";"@TonyL Sombody set eval code in channelslist RPC to EVAL_MARMARA so it entered iin some if like the CC is disabled. Fixed!";"";"üëç (1)";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:18 PM";"https://github.com/jl777/komodo/pull/1309";"";"";
"455741312273219595";"jl777c#5810";"03-Mar-19 07:19 PM";"ooops! that somebody i am sure was me. I put in eval codes into all those function calls and must have gotten that one wrong";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:19 PM";"Np üòâ";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:20 PM";"BTW, I see that you had a big merge in FSM recently. I know I'm boring, but could you merge it with squash commit, so that we can track changes and read git log easier? üòâ";"";"";
"455741312273219595";"jl777c#5810";"03-Mar-19 07:22 PM";"no idea how to do that";"";"";
"455741312273219595";"jl777c#5810";"03-Mar-19 07:23 PM";"I just use a git GUI with basic functionality and whenever i do anything else, i totally mess things up and create a days worth of cleanup work";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:24 PM";"just make a PR on your branch first (and choose squash and merge), you can do it all in github, and then you make PR on FSM with just one comit now. So basically you add one additional step when merging.";"";"";
"455741312273219595";"jl777c#5810";"03-Mar-19 07:25 PM";"it did come from jl777";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:26 PM";"Ok, then you can just do squash merge to FSM.
https://user-images.githubusercontent.com/1924134/31062559-73849c00-a6f9-11e7-8853-bfa7c9f52e4a.png";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:27 PM";"So when you make PR and you click merge, just select Squash and merge. This way this will enter in FSM as one commit.";"";"";
"455741312273219595";"jl777c#5810";"03-Mar-19 07:30 PM";"I dont get that option";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:39 PM";"Really...";"";"";
"455741312273219595";"jl777c#5810";"03-Mar-19 07:39 PM";"aha! there is a dropdown to select it";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:39 PM";"Yes";"";"";
"455741312273219595";"jl777c#5810";"03-Mar-19 07:40 PM";"so just squash and merge from jl777 into FSM?";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:40 PM";"Yep üòõ";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:40 PM";"I have another step because I don't have permission to push to your repo so I need to PR from my branch to FSM, and than FSM to your FSM.";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:40 PM";"But you can do it in one step üòâ";"";"";
"455741312273219595";"jl777c#5810";"03-Mar-19 07:41 PM";"i will try to remember this next time";"";"";
"424224648889106444";"Mihailo#5902";"03-Mar-19 07:41 PM";"üëç";"";"üòÑ (1)";
"232679450301431808";"blackjok3r#3181";"04-Mar-19 04:21 AM";"That merge I tink may have been mine aswell... I thaught that by just doing it in a single PR it had all changes in once place. Thanks for showing me this too. I will make sure to use it next time I need to push a large merge up.";"";"üëç (1)";
"424224648889106444";"Mihailo#5902";"04-Mar-19 11:08 AM";"For small (few commit merges) it is ok to not sqaush it, especially if they have reasonable commit message, but for a lot of small ones changing only few lines it is better to squash";"";"";
"272003866906722306";"TonyL#3577";"06-Mar-19 07:15 AM";"ChannelsCC returns now two keys witt same values:
``` ""myaddress"": ""RWPg8B91kfK5UtUN7z6s6TeV9cHSGtVY8D"", ""myAddress"": 
""RWPg8B91kfK5UtUN7z6s6TeV9cHSGtVY8D""```
Hmm  TokenCC too";"";"";
"272003866906722306";"TonyL#3577";"06-Mar-19 07:16 AM";"I'll left in tests myAddress üòÉ";"";"";
"424224648889106444";"Mihailo#5902";"06-Mar-19 12:39 PM";"is this from channelsaddres and tokensaddress rpcs?";"";"";
"424224648889106444";"Mihailo#5902";"06-Mar-19 12:39 PM";"Because they all call the same function, so I think someone modified the function and maybe added some redundant data";"";"";
"272003866906722306";"TonyL#3577";"06-Mar-19 12:42 PM";"Yes, from these calls";"";"";
"424224648889106444";"Mihailo#5902";"06-Mar-19 12:42 PM";"Let me check";"";"";
"424224648889106444";"Mihailo#5902";"06-Mar-19 12:45 PM";"It just redundant data, maybe @jl777c can remove it in a commit directly to FSM so that I dont need to make PR... rpcwallet.cpp line 5396";"";"";
"272003866906722306";"TonyL#3577";"06-Mar-19 12:47 PM";"Oh ok, just reporting about suspicious things to not miss something scary üòÉ";"";"";
"424224648889106444";"Mihailo#5902";"06-Mar-19 12:48 PM";"üëç";"";"";
"455741312273219595";"jl777c#5810";"06-Mar-19 01:13 PM";"removed";"";"üëå (1)";
"423176312354635779";"gcharang#6833";"13-Mar-19 04:04 PM";"Command:

```bash
./komodo-cli -ac_name=HELLOWORLD channelsaddress 0225f1cbbda1a0c406bb8f6dc7a589d88b2f9e28cd4fdb3f59139f8aff1f5d270a
```

Response:

```json
{
  ""result"": ""success"",
  ""ChannelsCCAddress"": ""RQy3rwX8sP9oDm3c39vGKA6H315cgtPLfr"",
  ""CCbalance"": 0.0,
  ""ChannelsNormalAddress"": ""RQUuT8zmkvDfXqECH4m3VD3SsHZAfnoh1v"",
  ""ChannelsCC1of2Address"": ""RW5qo7cPFuap1cifuFWMHurvmBU7drn9cv"",
  ""ChannelsCC1of2TokensAddress"": ""RNjxnUR9QScLiRzo841DjCG5w5FbVbATMy"",
  ""myAddress"": ""RJYiWn3FRCSSLf9Pe5RJcbrKQYosaMburP"",
  ""myCCAddress(Channels)"": ""R9coADhfQwsbF8V1HVskZoYCuSw5FH8RsS"",
  ""PubkeyCCaddress(Channels)"": ""RFiRURHbjQNDunGC3SmiNcpt89BRbqvBQb"",
  ""myCCaddress"": ""R9coADhfQwsbF8V1HVskZoYCuSw5FH8RsS"",
  ""myCCbalance"": 0.0,
  ""myaddress"": ""RJYiWn3FRCSSLf9Pe5RJcbrKQYosaMburP"",
  ""mybalance"": 9.9387
}
```";"";"";
"423176312354635779";"gcharang#6833";"13-Mar-19 04:09 PM";"|CCbalance                   | (numeric) | the unspent amount in the ChannelsCCaddress

| myCCAddress(Channels)       | (string)  | taking the contract's EVAL code as a modifier, this is the CC address from the `pubkey` supplied as the argument  

@Mihailo can you tell me if these descriptions are correct? specifically  ``pubkey` supplied as the argument ` part in  myCCAddress(Channels)";"";"";
"423176312354635779";"gcharang#6833";"13-Mar-19 04:13 PM";"Also
what are the descriptions for:
1) PubkeyCCaddress(Channels)
2) ChannelsCC1of2Address
3) ChannelsCC1of2TokensAddress";"";"";
"424224648889106444";"Mihailo#5902";"13-Mar-19 04:28 PM";"myCCAddress(Channels) is just a duplicate of myCCaddress. I think it was removed recently.

1) is the CC address of the pubkey supplied in channelsaddress command
2) This is the channel address where funds are stored when channel is opened (if using coins)
3) This is the channel address where funds are stored when channel is opened (if using tokens)";"";"";
"424224648889106444";"Mihailo#5902";"13-Mar-19 04:30 PM";"And the ChannlesNormalAddress is the global address of Channel CC, but regular address - not CC. Every CC has one global CC address and one global normal address, and many used them but in cas of channels as it is between two pubkeys the global address is not used.";"";"";
"423176312354635779";"gcharang#6833";"13-Mar-19 04:31 PM";"thanks, I am using the KMDLabs daemon, it might not be uptodate with jl777";"";"";
"423176312354635779";"gcharang#6833";"13-Mar-19 04:32 PM";"myCCAddress is the CC address of the pubkey used to start the daemon correct? @Mihailo";"";"";
"424224648889106444";"Mihailo#5902";"13-Mar-19 04:33 PM";"@gcharang Yes";"";"üëç (1)";
"424224648889106444";"Mihailo#5902";"13-Mar-19 04:34 PM";"It seems it is not removed. I will fix it";"";"";
"423176312354635779";"gcharang#6833";"14-Mar-19 05:51 AM";"@Mihailo as I understand it, the pubkey supplied in the `channelsaddress` method should be a destination pubkey. If a user supplies the same pubkey that was used to start the daemon, then the keys 
 ChannelsCC1of2Address
 ChannelsCC1of2TokensAddress
will be meaningless right?";"";"";
"424224648889106444";"Mihailo#5902";"14-Mar-19 09:48 AM";"Yes, you usually supply destination pubkey as the Channel address is made from 2 pubkeys so you need the other one. But you can supply any pubkey you want, you will get the 1of2 address between the pubkey used to start the daemon and the given pubkey";"";"";
"423176312354635779";"gcharang#6833";"14-Mar-19 10:03 AM";"Thanks. 
What happens to the 1of2 addresses when the pubkey in the argument is same as the node's pubkey, can a channel be opened from a pubkey to itself ?";"";"";
"424224648889106444";"Mihailo#5902";"14-Mar-19 10:16 AM";"I haven't tried but I think it can be used. Basically, CC address will be created from two same pubkeys, and only you will be able to spend it üòâ You can try it for fun üòõ";"";"üëç (1)";
"424224648889106444";"Mihailo#5902";"28-Mar-19 03:00 PM";"@TonyL I have improved ChannelsCC validation so quick pass of the test would be good üòâ (if you need to check daemon log for channels start with -debug=channelscc-2)
https://github.com/jl777/komodo/pull/1360";"";"üëå (1)";
"272003866906722306";"TonyL#3577";"28-Mar-19 03:22 PM";"Tests falied on `channelspayment`  https://paste.ubuntu.com/p/tBkpzGt6wX/
```constrain vout error nValue 0.00800000 vs 0.00700000
CC Eval EVAL_CHANNELS Invalid: vout.0 is CC or invalid CC change amount for channelpayment! spending tx 0a47c5287169f1544ee545a7d5b8cb6d4869bf259f9202c5cee6e0c216e6f7b6
DEBUG:BitcoinRPC:<-- {""result"":null,""error"":{""code"":-26,""message"":""16: mandatory-script-verify-flag-failed (Script evaluated without error but finished with a false/empty top stack element)""},""id"":34}

JSONRPC error: 16: mandatory-script-verify-flag-failed (Script evaluated without error but finished with a false/empty top stack element)
```
Will investigate now and try to reproduce manually";"";"";
"272003866906722306";"TonyL#3577";"28-Mar-19 04:01 PM";"Reproduced manually: https://paste.ubuntu.com/p/4fzpjgj7Jd/
Issue is that not possible to send second channel payment after first one (in same channel)";"";"";
"272003866906722306";"TonyL#3577";"28-Mar-19 04:03 PM";"```constrain vout error nValue 0.00800000 vs 0.00700000
CC Eval EVAL_CHANNELS Invalid: vout.0 is CC or invalid CC change amount for channelpayment! spending tx 4ecf84cea40edad4cf69adccb9474e503e37e83cc638ff59531b37d2e50aea9e
error code: -26
error message:
16: mandatory-script-verify-flag-failed (Script evaluated without error but finished with a false/empty top stack element```

It's misscalculating vouts - like a caclulating from full channel capacity on second payment instead of calculation of capacity minus first payment amount";"";"";
"424224648889106444";"Mihailo#5902";"28-Mar-19 04:11 PM";"@TonyL Great, I did only one payment when testing and then close. This is what the tests are for ;)";"";"üëç (1)";
"272003866906722306";"TonyL#3577";"28-Mar-19 04:13 PM";"Oh yes, tests quite helpful thing üòÉ Hope soon we will have it in CI/CD so will see if something is wrong right after commit to FSM";"";"";
"424224648889106444";"Mihailo#5902";"28-Mar-19 04:42 PM";"Fix ;)
https://github.com/jl777/komodo/pull/1361";"";"üëç (1)";
"272003866906722306";"TonyL#3577";"28-Mar-19 04:51 PM";"Will re-test now üòÉ";"";"";
"272003866906722306";"TonyL#3577";"28-Mar-19 05:09 PM";":3040_kingpeepo: 
```Tests successful
--- Success: cryptoconditions_channels.py ---```";"";"";
"272003866906722306";"TonyL#3577";"28-Mar-19 05:10 PM";"ChannelsCC covered tests best from all CCs imo so I assume that it should work fine now";"";"";
