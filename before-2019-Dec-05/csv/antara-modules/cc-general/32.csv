AuthorID;Author;Date;Content;Attachments;Reactions;
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:22 AM";"every cc rpc i try gives this same error. and i tried my NN pubkey, still no bueno";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:23 AM";"the code doesn't even check that the pubkey is valid really, just if it exists";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:23 AM";"or that addressindex has been enabled. But perhaps -regtest disables addressindex. just a guess";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:26 AM";"my docker image with pubkey=033aceKMDPIONEERS -regtest -cc=1 could return faucetinfo last week.
not sure if it does what you're after though, but it did return ""success"" from cli";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:26 AM";"as in real NN pubkey";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:27 AM";"where is that repo again?";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:28 AM";"https://github.com/imylomylo/docker-komodo-smartcontracts";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:28 AM";"üëç";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:30 AM";"```/komodo/src/komodod  -ac_cc=1 -ac_name=ATEST -addressindex=1 -spentindex=1 -ac_supply=1000 -ac_reward=10000000000000 -pubkey=033ace50aedf8df70035b962a805431363a61cc4e69d99d90726a2d48fb195f68c -regtest &

komodo-cli -ac_name=ATEST -regtest faucetinfo```
üëÜ is what i used last friday";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:30 AM";"bunch of jibber in #dev-general";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:30 AM";"i just copy+pasted your exact command from docker";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:30 AM";"and I still get that damn error";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:31 AM";"in docker or on your build?";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:31 AM";"on my build, it's a branch forked from the latest `jl777` branch as of a few hours ago";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:32 AM";"i'll rebuild the docker now-ish but it'll take 20mins 8 core atom cpu in paris.  let you know";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:35 AM";"cool, that will at least give us another data point";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:37 AM";"i have this branch going with various fixes to the test suite: https://github.com/letolabs/komodo/tree/cctests";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:39 AM";"the new test file needs to learn how to create an asset chain in the test suite, where the python tests can interact with it. then we can start to add various unit tests and more complex tests to make sure all the RPCs work as expected. Just a bit more plumbing is needed";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:39 AM";"and then we can hook this up to travis CI too";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:41 AM";"yeah that's 'very efficient' testing - not just rpc calls in a bash script üòÉ";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:43 AM";"we can test very complex stuff with the Python test framework. There is also C++ unit tests, but those are kind of annoying to write and annoying to run and therefore less pragmatic for us. We will get more ROI from Python tests";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:44 AM";"for instance, in the framework, there is already functions to call so you can spin up N nodes and mine certain amounts of blocks on each and have them be in a very particular state, just before your test runs, things like that";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:46 AM";"that's handy.  probably easier for someone to pick up python tests than cpp tests just because of language selection as well (hence why ppl have bothered to do handier stuff with py perhaps?)";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:47 AM";"C++ are ""unit tests"" where Python are called ""QA"" tests which some people would call ""integration"" tests";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:48 AM";"because they test multiple things at once, not just individual functions. the line is blurry";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:49 AM";"blurry yes but makes sense if higher level stuff has been done in python i guess";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:49 AM";"it's easy to describe complex stuff in Python, it's flexible, and easy to write + maintain tests in it. It's considered an additional layer on the c++ unit tests. The c++ unit tests would be like ""let's test the foo RPC function with 99 different kinds of function arguments to do the right thing every time""";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:49 AM";"where Python is like ""make sure this bug doesn't happen when this complex situation arises""";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:49 AM";"yep gotcha";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:50 AM";"we inherited the Zec test suite but many things never got changed that should have been, so now they are üòÉ";"";"üöÄ (1)";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:51 AM";"holy crap i actually just made the test suite happy";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:51 AM";"in the ""it actually ran"" kind of way";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:51 AM";"üçª";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:52 AM";"it's noisy but i have a test file starting up 4 nodes (that is the default): https://gist.github.com/leto/fbe91e6d95ba0a8c35941115a3d65c96";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:52 AM";"i still need to modify it to add kmd specific arguments to the regtest kmd";"";"";
"455741312273219595";"jl777c#5810";"06-Aug-18 07:52 AM";"CC test suite is bounty worthy";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:53 AM";"@jl777c good to know üòÉ";"";"";
"455741312273219595";"jl777c#5810";"06-Aug-18 07:53 AM";"a complete test suite for all 4 of the reference CC would be 5000 KMD";"";"üî• (3)";
"455741312273219595";"jl777c#5810";"06-Aug-18 07:54 AM";"assets especially will be hard to do";"";"";
"455741312273219595";"jl777c#5810";"06-Aug-18 07:55 AM";"but if it can spin up nodes, issue asset, etc. it would be possible";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:55 AM";"yes, i have the test suite spinning up nodes already, which is nice";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:56 AM";"i am willing to try to do the complete test suite and/or share the bounty. i strangely enjoy writing tests";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:56 AM";"yeah - how does it 'spin up 4 nodes'?";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 07:57 AM";"haha ya weirdo üòõ";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:57 AM";"the Python test suite does stuff by default, or you can override";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:58 AM";"this is the stub test file i am using: https://github.com/letolabs/komodo/commit/752791ae3dc1c0b1c9f6d6c5179acda189d4d5cb";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:58 AM";"self.nodes[0,1,2,3] are regtest komodo nodes running under the test suite";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:58 AM";"and you can run RPC functions on them like `self.nodes[0].getnewaddress()`";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 07:59 AM";"you can override `setup_network` to create your own kinds/numbers of nodes, like the wallet.py test : https://github.com/letolabs/komodo/blob/752791ae3dc1c0b1c9f6d6c5179acda189d4d5cb/qa/rpc-tests/wallet.py#L22";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 08:02 AM";"what i still need to do in my `cctests` branch is teach the test framework about kmd-specific things, like -ac_* params, and a way to control them easily so you can easily create AC's for tests. Right now the test suite only knows how to create regtest `komodod` nodes";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 08:04 AM";"i am going to sleep soon, hopefully tomorrow I can sort out why I get the annoying `to use CC contracts, you need to launch daemon with valid -pubkey= for an address in your wallet` error and get some actual cc tests running";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 08:05 AM";"`./qa/pull-tester/rpc-tests.sh cryptoconditions` is how to run the test in my branch if anybody wants to play with it";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 08:06 AM";"validateaddress and stuff works as expected.  regtest mining 150+ blocks to test sending to faucet and stuff.";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 08:06 AM";"""to test"" <--- like a neanderthal, not an integration test üòÉ";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 08:07 AM";"@Mylo something is weird with my setup, and/or OS X hates me (i had to fix 3 os x bugs in my branch just to compile)";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 08:08 AM";"well.... that's why i'm gunning for docker first.  I can't stand installing brew.  and Xcode is unnecessary for my type of deving";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 08:08 AM";"komodo doesn't compile on bsd does it?";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 08:08 AM";"zcash doesn't";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 08:08 AM";"and dependencies of it don't";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 08:08 AM";"perhaps grand-dependencies too";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 08:08 AM";"it's a scary world";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 08:10 AM";"yeah, i never stuck with anything bsd related 10 years ago.";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 08:10 AM";"doesn't surprise me.  back in telephony, bsd was last to get anything";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 08:13 AM";"maybe i have to regtest with proper kmd params like 100m supply.  my ATEST chain didn't generate any mining rewards";"";"";
"455741312273219595";"jl777c#5810";"06-Aug-18 10:49 AM";"I added smart utxo selection to the CC tx creation for normal utxos. the CC utxos are usually limited in what they can be so not sure it is worth adding to all the CC specific CCutxo selection";"";"";
"455741312273219595";"jl777c#5810";"06-Aug-18 10:50 AM";"this change should result in smaller rawtx,but there is a chance maybe I broke some things";"";"";
"455741312273219595";"jl777c#5810";"06-Aug-18 10:50 AM";"hopefully not as I want to restrict changes to bug fixes for the 1 million hardfork";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 11:07 AM";"```komodod -regtest -ac_supply=100000000 -ac_cc=1 -pubkey=033ace50aedf8df70035b962a805431363a61cc4e69d99d90726a2d48fb195f68c``` seems to break getting a balance after 101 blocks and mining rewards after that.
```
komodod -regtest -ac_supply=100000000
```
has mature 100m coins at block 100+ and mining rewards from 101 onwards no probs.

So i can't fund a faucet on kmd-regtest, nor any other regtest-ACs";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 11:12 AM";"addressindex=1 & spentindex=1 when included in that first `komodod` command also have same result.";"";"";
"455741312273219595";"jl777c#5810";"06-Aug-18 11:19 AM";"-regtest mode is needed?";"";"";
"455741312273219595";"jl777c#5810";"06-Aug-18 11:19 AM";"and what does "" seems to break "" mean?";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 12:32 PM";"-regtest is very much needed.  it uses the ~/.komodo/regtest data.  without `-regtest` it doesn't know it's in regtest mode.  regtest mode is handy for app developers because app/front-end developers are not sys.admins or backend architect-types.

yes regtest mode is needed for the python integration testing duke is working on and also for enabling app developers & students to ""start kmd and call rpc from their apps in less than 10 minutes without needing to install a full blockchain node on their workstation AND most importantly being able to generate blocks at their own devleopment pace""

`s/seems to break/breaks`.  it breaks the generation of coins in regtest mode - so being broken cannot test AC smart contracts like CCfaucet because no coins to transfer to faucet.

to quote @dukeleto  from about 5 hours earlier
```
we can test very complex stuff with the Python test framework. There is also C++ unit tests, but those are kind of annoying to write and annoying to run and therefore less pragmatic for us. We will get more ROI from Python tests
for instance, in the framework, there is already functions to call so you can spin up N nodes and mine certain amounts of blocks on each and have them be in a very particular state, just before your test runs, things like that
```
and
```
C++ are ""unit tests"" where Python are called ""QA"" tests which some people would call ""integration"" tests
because they test multiple things at once, not just individual functions. the line is blurry

it's easy to describe complex stuff in Python, it's flexible, and easy to write + maintain tests in it. It's considered an additional layer on the c++ unit tests. The c++ unit tests would be like ""let's test the foo RPC function with 99 different kinds of function arguments to do the right thing every time""
where Python is like ""make sure this bug doesn't happen when this complex situation arises""
```
hope that helps a bit why regtest mode is needed for other type of dev";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 12:33 PM";"hopefully duke can clear up any gaps or misinterpretations i may have";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 02:12 PM";"that will require some ‚òï first but I will be around soon to chat";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 02:44 PM";"i am reading the new reddit AMA: ```
ETH has the truffle framework for building contracts, komodo has in built contracts for common use cases. ETH has the ganache tool for test mode so a developer can run their own node in isolation on their computer running at their own pace (e.g. generate a block every second if they want to emulate)

I‚Äôm testing an equivalent for komodo. Further, I‚Äôm testing packaging it up so a new dev at any skill level can be up and running in <10 minutes in their own self contained environment.‚Ää‚Äî‚ÄäMylo Mylo```";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 02:44 PM";"from https://www.reddit.com/r/komodoplatform/comments/93yyqc/ama_on_monday_6th_august_with_our_quality/";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 02:45 PM";"that helps me understand what Mylo is trying to do, you want a way to start up a ""personal blockchain"" on one computer, for development/QA/testing";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:01 PM";"Yes.  For app developers to not have to muck around with systems ‚úÖ";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:01 PM";"When they have most of their app working in private, they can move to a live blockchain.";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:02 PM";"Give a webdev linux and some install scripts, see you later won't see them again.";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:02 PM";"lol";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:03 PM";"@Mylo i think we can get some stuff done, where I focus on low level test suite/infrastructure/plumbing and you focus more on the ""porcelain""";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:04 PM";"Yep, sounds good.  All i want is RPC regtest for https://github.com/imylomylo/komodo-cakeshop";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:04 PM";"Should be able to fund a faucet quick enough üò¨";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:04 PM";"@mylo tell me your current issue/problem";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:05 PM";"```komodod -regtest -ac_supply=100000000```
works great past block 150, coins available for spending.
```komodod -regtest -ac_supply=100000000 -ac_cc=1 -pubkey=033ace50aedf8df70035b962a805431363a61cc4e69d99d90726a2d48fb195f68c``` no coins";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:06 PM";"after you generate 100+ blocks.";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:07 PM";"`addressindex=1   spentindex=1` makes no difference either.";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:07 PM";"ok, good description";"";"üëå (1)";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:07 PM";"so when you enable CC, you can't get coins to mature";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:07 PM";"can you show me outputs of `getwalletinfo` ?";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:09 PM";"all zeros.  hold on. give you real output";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:10 PM";"in theory you should only need to mine 101 blocks to get 1 mature block (100 block maturity rule)";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:11 PM";"yep, but put a few extra in (120) this time cos it only costs me 10 seconds and i'm just hoping to hit a mining reward /s";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:12 PM";"every block you get the mining reward, you are the only miner on your regtest chain üòÉ";"";"";
"371114647052615681";"Mylo#8306";"06-Aug-18 03:12 PM";"yeah i'm being facetious and peculiar.  it's 1am and i've been awake since 6am, waiting for a 2am meeting";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:13 PM";"oh gosh. I just got up and having lots of ‚òï üòÉ";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:13 PM";"SO";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:13 PM";"here are some idea";"";"";
"365714438864633856";"dukeleto#7326";"06-Aug-18 03:13 PM";"are you using -ac_name=FOO ?";"";"";
