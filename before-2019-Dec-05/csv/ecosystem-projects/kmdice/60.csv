AuthorID;Author;Date;Content;Attachments;Reactions;
"232679450301431808";"blackjok3r#3181";"29-Oct-18 04:05 AM";"Well it turns out my *fix* all it was doing was skipping a check that was causing the fork...";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 04:05 AM";"I think I found a better solution";"";"";
"363810960475160577";"Dr Debt#0891";"29-Oct-18 05:25 AM";"Pool info for mining?";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 05:52 AM";"Please use a pool that mines transactions... dont mine onf forkwitch";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 08:08 AM";"I think I got this working jsut about as good as we will get.";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 09:51 AM";"pull request?";"";"";
"136534544470900736";"benohanlon#1119";"29-Oct-18 09:55 AM";"@blackjok3r what's best pool to mine from?";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 09:57 AM";"Not yet";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 09:57 AM";"I think its close to working";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 09:58 AM";"I cannot work out how to fix it properly";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 09:58 AM";"The issue is that myGetTransaction just randonly and only a very very small percentage of the time, does not return a tx when it in fact does exist.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 09:59 AM";"To get around this, I have changed the utxo selection everywhere to random loops";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 09:59 AM";"and if that check fails, i just skip it and any code that segfaults later because it was skipped";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 09:59 AM";"this stops the node going on a fork and lets it keep betting, but I have no idea what the rammifications are...";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:00 AM";"The amin issue stil seems to be the main pool, not actually minign transactions... Someone needs to either DDoS htat pool down until they fix it, or people need to stop mining there.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:02 AM";"Also if there was a way to call CC_EVAL during processing blocks, where it ignores mempool tx's that would likely fix the underlying cause also.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:03 AM";"It currently some how thinks a mempool tx invalidets a received block, which is very backwards lol";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:09 AM";"whether the tx are being mined or not should not affect the consensus bug. the problem with doing CC eval for the acceptmempool tx is that it will reject valid tx when dependent ones arrive out of order";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:09 AM";"yes. When I first started looking at it I was just going to try and add a boolean to CC_EVAL where it was called in connect block, but it does not work like that";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:09 AM";"the CC eval happens on accept to mempool and also on block validation";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:10 AM";"issue seems to only occur when you are betting";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:10 AM";"and the more bets you can amke on a single node te more likely it is to happen.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:10 AM";"your local txs in mempool make the received block invalid";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:10 AM";"i dont see how that can happen";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:11 AM";"oh, wait";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:11 AM";"the onyl way to let the block connect is to skip the Unconformed TX call, or at least dont return a fail when it fails";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:11 AM";"my fix yesterday was that by accident...";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:11 AM";"chain seems to sync and doesnt fork so maybe it doesnt matter";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:12 AM";"on validating a block, all the tx in the block are put in to the mempool to remove any order dependent validation requirements";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:12 AM";"but if in the mempool there are already some conflicting tx, it wouldnt be able to put some that are in the block into the mempool!";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:12 AM";"this makes sense as its random txs and never the same ones.. they just disappear";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:12 AM";"requiring resync to get them back";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:13 AM";"so we need to remove from the mempool any conflicting tx to the one coming from the block";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:13 AM";"no wonder it is hard to fix";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:13 AM";"this one is very hard to fix";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:13 AM";"this is been the most annoying thing ive ever tried to fix";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:13 AM";"It seeems to work, then just braks again... very random";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:13 AM";"yes the local mempool could prevent the mined block from being mined";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:14 AM";"i mean confirmed";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:14 AM";"thats what happens yes";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:14 AM";"and then it ends up with tx in the mempool that are now orphaned, but the local node wont see that as it rejects the block that contradicts it";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:14 AM";"aha!";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:15 AM";"so now we understand the causal factor for all the strange behavior!!";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:15 AM";"in main.cpp there is a loop adding to the mempool in block validation";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:15 AM";"it actually does it iteratively as the tx in the block can be in any order";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:16 AM";"ok, a quick test idea!";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:16 AM";"before that loop, just clear the local mempool entirely";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:16 AM";"then there cant be anything conflicting in the mempool, the block confirms, node will not go on a fork or get stuck";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:17 AM";"ok sounds like a good idea, and probalbly wont cause anything bad either";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:18 AM";"do you want PR of what I have now ?";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:18 AM";"I have 2 nodes betting constantly for about an hour with no crash";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:18 AM";"but not sure what happens with more nodes";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:19 AM";"if ( ASSETCHAINS_CC != 0 ) // CC contracts might refer to transactions in the current block, from a CC spend within the same block and out of order
4246 main.cpp, inside that if , clear the mempool before it does the loop";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:19 AM";"your method of randomly selecting utxo is a workaround, it reduces the chance from happening, but doesnt prevent things";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:20 AM";"i think just adding the clearmempool might just stabilize things a lot as without it, the local mempool will cause properly mined blocks to be rejected";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:20 AM";"yes, it helps, I think that will be needed aswell though.. as once more than 2-3 people bet no bets work";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:20 AM";"as they all use the same entropy";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:20 AM";"the contract is over 15k entropy now";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:20 AM";"very low chance of collision randomly choosing one";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:20 AM";"ok, then yes we do need to randomly choose";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:21 AM";"and your prior fix of GetBlock, does it deal with orphaned blocks?";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:21 AM";"and why not to use CCduration";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:21 AM";"cool... I wil remove the random choose fro local wallet though, that will cause peopleissues, just did that so i could bet faster.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:21 AM";"Getblcok didnt do anything";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:21 AM";"ok, so that can be removed?";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:21 AM";"it wsa out order";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:21 AM";"lets remove things that didnt help";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:22 AM";"and meant that fi the tx wasnt found, it just kept going like it was";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:22 AM";"yes I have a branch I am doing that on right now";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:22 AM";"will PR to fix what I did yesteray soon";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:23 AM";"good. i am happy about this realization. very tricky that local mempool can cause a valid block to be invalid";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:23 AM";"but this also means that the mempool will be cleared with each block....";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:23 AM";"Yes well I hope thats exactly what it is, all things point to that.. will do tick to clear and retest";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:24 AM";"for a single node to test if it fixes it";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:24 AM";"its is ok. but caannot be used on all nodes";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:24 AM";"lets put a check for KMDICE for this drastic mempool clearing";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:24 AM";"oh, actually better.";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:24 AM";"make a copy of the mempool";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:24 AM";"reset the mempool";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:24 AM";"validate the block then send it again?";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:24 AM";"and at the end of the loop, try to add back all the saved mempool tx";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:25 AM";"will do..";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:25 AM";"this will end up removing the conflicting local mempool tx from the mempool!";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:26 AM";"yes this will cause other issues with dice app, where a tx it thinks was sent disapears, but at least the chain will work.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:26 AM";"should be a way of detecting that";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:26 AM";"tx do get orphaned, but as long as only the truly orphaned tx disappear";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 10:26 AM";"and yes, this can be detected locally";"";"👌 (1)";
"232679450301431808";"blackjok3r#3181";"29-Oct-18 10:27 AM";"I think my dice loop script already handles such conditions, as it resends raw transaction until confirmed.. and if the tx becomes invalid, it would fail to send triggering error";"";"";
"422858760898215937";"siu - Chainmakers#3920";"29-Oct-18 12:37 PM";"hi guys, whats up?";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 12:39 PM";"we think we figured out the cause of all the wonkiness";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 12:39 PM";"a likely solution was defined";"";"";
"422858760898215937";"siu - Chainmakers#3920";"29-Oct-18 12:47 PM";"ok, but not yet available in the main repo?";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 12:50 PM";"not yet";"";"";
"422858760898215937";"siu - Chainmakers#3920";"29-Oct-18 12:51 PM";"ok";"";"";
"455741312273219595";"jl777c#5810";"29-Oct-18 12:51 PM";"i just merged a more stable version but not with the real fix";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"29-Oct-18 12:52 PM";"fsm branch?";"";"";
"422858760898215937";"siu - Chainmakers#3920";"29-Oct-18 12:53 PM";"ok, will test";"";"";
"422858760898215937";"siu - Chainmakers#3920";"29-Oct-18 12:53 PM";"btw, i just tested the `coinsupply` rpc call in KMD and it didnt work";"";"";
"422858760898215937";"siu - Chainmakers#3920";"29-Oct-18 12:53 PM";"just hanged";"";"";
"412323938782150658";"SHossain#0007";"29-Oct-18 12:54 PM";"@siu - Chainmakers the coinsupply call works better if you increase the blocks step by step. start with 100000, then 200000... until the last blocks";"";"";
