AuthorID;Author;Date;Content;Attachments;Reactions;
"498812134398885908";"D.rabbani#9094";"11-Feb-19 03:44 PM";"i cant post a link its on my local host";"";"";
"498812134398885908";"D.rabbani#9094";"11-Feb-19 03:45 PM";"just about a minute ago";"";"";
"420119978138664961";"CHMEX#0686";"11-Feb-19 03:49 PM";"Do you have all the indexes set?";"";"";
"420119978138664961";"CHMEX#0686";"11-Feb-19 03:49 PM";"I have seen that when they are not set";"";"";
"420119978138664961";"CHMEX#0686";"11-Feb-19 03:50 PM";"txindex,¬†addressindex,¬†timestampindex,¬†spentindex all to 1";"";"";
"420119978138664961";"CHMEX#0686";"11-Feb-19 03:52 PM";"Set it manualy in your .conf remove blocks and chainstate and resynch";"";"‚òù (1)";
"232679450301431808";"blackjok3r#3181";"11-Feb-19 04:17 PM";"explorer bug easy fix. After you start it all the first time.. use pkill to kill all aemons the n delete everything apart form conf file. and start all daemons again üëç";"";"üëå (1)";
"498812134398885908";"D.rabbani#9094";"11-Feb-19 07:53 PM";"Wow";"";"";
"498812134398885908";"D.rabbani#9094";"11-Feb-19 07:53 PM";"Awesome";"";"";
"498812134398885908";"D.rabbani#9094";"11-Feb-19 07:53 PM";"Will do tha";"";"";
"405011811511828481";"Alright#0419";"11-Feb-19 10:00 PM";"is there anyway to set `-blocknotify` without restarting the daemon?";"";"";
"474206298427097099";"ComputerGenie üë¥üèºüì¢#7004";"11-Feb-19 10:03 PM";"iirc it's early in the init, so likely not";"";"";
"405011811511828481";"Alright#0419";"11-Feb-19 10:12 PM";"I want to make the pos64staker as simple as possible, so I don't want the user to have to restart the daemon manually. Any suggestions? I know I could do it with subprocess in python for linux, but I'm not sure how to make it OS agnostic";"";"";
"474206298427097099";"ComputerGenie üë¥üèºüì¢#7004";"11-Feb-19 10:13 PM";"short of py already being in nix, it should already be 'OS agnostic' by being py";"";"";
"474206298427097099";"ComputerGenie üë¥üèºüì¢#7004";"11-Feb-19 10:14 PM";"they'd just have to install py";"";"";
"365714438864633856";"dukeleto#7326";"11-Feb-19 10:53 PM";"https://twitter.com/taoeffect/status/1094701778765983744";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:40 AM";"@dukeleto tried compiling `dev` branch of komodo. Just sharing what I did to fix my issues";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:40 AM";"```
/Library/Developer/CommandLineTools/usr/bin/ranlib libbitcoin_wallet.a
make[2]: *** No rule to make target `libcc.so', needed by `komodod'.  Stop.
make[1]: *** [all-recursive] Error 1
make: *** [all-recursive] Error 1
```";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:41 AM";"This is the end result after git clone and executing `./zcutil/build-mac.sh `";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:41 AM";"```# changed `CC = gcc` in src/cc/Makefile
CC = gcc-6
```";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:42 AM";"I was not sure if `CC=gcc-6 ./zcutil/build-mac.sh` will just set `gcc-6` to all, because it's the `libcc` which needs this change, so I just changed the `Makefile` of `cc`, and tried again.";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:42 AM";"This was the result after that";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:42 AM";"```/Library/Developer/CommandLineTools/usr/bin/ranlib: file: libbitcoin_util.a(libbitcoin_util_a-strnlen.o) has no symbols
/Library/Developer/CommandLineTools/usr/bin/ranlib libbitcoin_util.a
/Library/Developer/CommandLineTools/usr/bin/ranlib: file: libbitcoin_util.a(libbitcoin_util_a-strnlen.o) has no symbols
/Library/Developer/CommandLineTools/usr/bin/make  -C secp256k1 libsecp256k1.la OPTFLAGS=""-O2 -march=x86-64 -g ""
/Library/Developer/CommandLineTools/usr/bin/make  -C cryptoconditions libcryptoconditions_core.la OPTFLAGS=""-O2 -march=x86-64 -g ""
make[3]: `libcryptoconditions_core.la' is up to date.
make[2]: *** No rule to make target `libcc.so', needed by `komodod'.  Stop.
make[1]: *** [all-recursive] Error 1
make: *** [all-recursive] Error 1```";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:43 AM";"more errors üòÑ";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:43 AM";"anyway I saw the `dev` branch did not hat the makecclib script, so I just executed the command from my earlier tests";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:44 AM";"```satinders-MacBook-Pro-2:komodo_test satinder$ cd src/
satinders-MacBook-Pro-2:src satinder$ cd cc

satinders-MacBook-Pro-2:cc satinder$ gcc-6 -std=c++11 -I../univalue/include -I../cryptoconditions/include -I../cryptoconditions/src -I../cryptoconditions/src/asn -I.. -I. -fPIC -shared -c -o ../libcc.so cclib.cpp -L/usr/local/Cellar/boost/1.68.0_1/lib -I/usr/local/Cellar/boost/1.68.0_1/include -L/usr/local/Cellar/libsodium/1.0.17/lib -I/usr/local/Cellar/libsodium/1.0.17/include -L/usr/local/opt/berkeley-db@4/lib -I/usr/local/opt/berkeley-db@4/include

satinders-MacBook-Pro-2:cc satinder$ ls -lh ../libcc.so 
-rw-r--r--  1 satinder  staff   297K 12 Feb 13:34 ../libcc.so
```";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:44 AM";"Now that it created the `libcc.so` I just executed the build mac command again";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:44 AM";"```make[1]: Nothing to be done for `all'.
Makefile:1129: warning: overriding commands for target `Agama.dmg'
Makefile:1119: warning: ignoring old commands for target `Agama.dmg'
make[1]: Nothing to be done for `all-am'.
satinders-MacBook-Pro-2:komodo_test satinder$ ls -lh src/komodod
-rwxr-xr-x  1 satinder  staff    18M 12 Feb 13:37 src/komodod
satinders-MacBook-Pro-2:komodo_test satinder$ ls -lh src/komodo-cli
-rwxr-xr-x  1 satinder  staff   1.2M 12 Feb 13:37 src/komodo-cli
satinders-MacBook-Pro-2:komodo_test satinder$ ```";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:44 AM";"got the `komodod` and `komodo-cli` built from `dev` branch.";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:44 AM";"üôÇ";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 12:46 AM";"@ComputerGenie üë¥üèºüì¢ your komodod build issues solved on mac mate?";"";"";
"474206298427097099";"ComputerGenie üë¥üèºüì¢#7004";"12-Feb-19 01:53 AM";"@grewalsatinder yes, it was the qt that I was building, but the issue was the same since they use the same make setup, and I didn't even think about the fact that they did use the same";"";"";
"474206298427097099";"ComputerGenie üë¥üèºüì¢#7004";"12-Feb-19 01:55 AM";"Out of curiosity, why does your komodod make file have agama bits?";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 02:50 AM";"I have no idea üòÑ";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 02:50 AM";"It just says that, I noticed ealier too";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 02:50 AM";"Must be CI process in Makefile... not sure";"";"";
"347922216429813760";"grewalsatinder#9653";"12-Feb-19 02:51 AM";"@ca333 might know";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 03:55 AM";"Hi all, I am quite new to the blockchain world, and I am reading some articles about KMD, and I glanced into this.

```First, UTXO-based smart contracts can be written in C, C++, or any other compiled programming language that can create a linkable library capable of calling and being called by C/C++ functions. In that sense, Komodo‚Äôs UTXO-based smart contracts are language agnostic. This also means Komodo‚Äôs smart contracts are Turing complete and can be programmed to do just about anything.```

I just want to make sure that the one referred to above is the Smart Contract language `Crypto Conditions`";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 03:55 AM";"Thanks";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 03:58 AM";"It is not exactly a language. It is a specification: https://datatracker.ietf.org/doc/draft-thomas-crypto-conditions/
It can be implemented in any programing language. there are js,python,C,C++ versions of it available
The one we use is: https://github.com/libscott/libcryptoconditions";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:02 AM";"@gcharang thanks for the information, so the information above is like a draft of Crypto Conditions where on the time the info was written, it was C/C++ as language of choice, and now it has JS and Python as additions.";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:02 AM";"correct?";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:05 AM";"Yes. It is a specification. We are using its implementation in C";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:16 AM";"Thanks @gcharang";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:16 AM";"Another question, is it okay?";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:17 AM";"Sure. if not me, someone else will answer";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:17 AM";"So VerusCoin is an Asset Chain right?";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:19 AM";"All Assetchains are runtime forks of komodo. But Verus coin forked our project and added new assetchain options to it to start their chain. Now those options are available for anyother assetchain created through Komodo. In a way, it is a fork. In another way it is an assetchain. But there are many other features that are in development there that are not in Komodo. So it is not a pure assetchain";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:24 AM";"Okay, it makes sense, so VerusCoin by itself is a Komodo fork, but it has Asset chains from Komodo and it also has a different PoW algorithm right?

So, I asked this question because, I was thinking that, when you create an asset chain, and since asset chains inherit Komodo's technology, will that asset chain be also able to create its own asset chain?";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:24 AM";"just curious";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:27 AM";"It depends on how they are doing it.
It is entirely possible for a project to fork Komodo, add new features and it will have assetchain creation available.";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:28 AM";"See: https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html
To see what assetchains enable a developer to have out of the box.";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:30 AM";"https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html#ac-cc
https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html#ac-ccenable
These are the options that dictate the smartcontract availability on an assetchain.";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:31 AM";"Thank you very much.";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:33 AM";"One thing also, I see 2 source repos for Komodo, the `komodo` and `KomodoPlatform`? Is komodo the cryptocurrency and the latter the platform that implements the Smart Contracts and putting the snapshots in the Bitcoin block?";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 04:34 AM";"I am really confused on the part where Komodo is protected by Bitcoin's Hash power, so how is KMD inheriting that hash power? and how are the snapshots placed in the bitcoin blocks by the notary nodes?";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:34 AM";"> will that asset chain be also able to create its own asset chain?
This mostly doesn't make sense. There are two distinct things: 1)The coin daemon
2) The blockchain
The daemon has the rules the chain needs to follow but, the same coin daemon can allow different blockchains to exist.
i.e., ex: the BTC daemon controls the BTC blockchain, but using the same daemon, I can create a new chain that will be mined from block 1 but it is not BTC eventhough it has the same rules";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:36 AM";"komodo repo: Is the Komodo blockchain repo
Komodoplatform repo: has the dPOW (BTC hashrate security) and marketmaker which is a DEX";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:36 AM";"dPOW part is called iguana. It is a completely different program seperate from the standard daemon and our notaries run it to backup Komodo hashes to BTC";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 04:41 AM";"https://github.com/KomodoPlatform/KomodoPlatform/tree/master/iguana the dPOW code
Explanation from whitepaper: https://docs.komodoplatform.com/whitepaper/section-1.html
https://docs.komodoplatform.com/whitepaper/chapter3.html";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 05:51 AM";"Thank you very much for the information, looking forward on learning more on this awesome project.";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 06:47 AM";"Hi all, may I ask what is theory behind having 2 blockchains linked together to increase performance? How does that work on asset chains? I understand the part where asset chains are created but how do we create another one and link the 2 together?";"";"";
"242635006516658197";"jorian#4555";"12-Feb-19 06:57 AM";"i think @blackjok3r might be able to answer that";"";"";
"242635006516658197";"jorian#4555";"12-Feb-19 06:57 AM";"also try #cc-general";"";"";
"232679450301431808";"blackjok3r#3181";"12-Feb-19 06:58 AM";"You need notary nodes that place block hashes onto both chains and also a full KMD node.. #kmdlabs  has had many fungible clusters...";"";"";
"232679450301431808";"blackjok3r#3181";"12-Feb-19 06:58 AM";"There is one live right now I think.. although we just broke one of the chains. The other 2 work lol";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 06:59 AM";"https://komodoplatform.com/komodo-platforms-new-scalability-tech/ has a general overview";"";"";
"232679450301431808";"blackjok3r#3181";"12-Feb-19 06:59 AM";"ha thats what I was trying to link he too, thanks üòÉ";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:01 AM";"Thanks @blackjok3r  and @gcharang so I don't know if my question was answered before, but how does SuperNET get Bitcoin's HASH Power? Since this is part of Komodo's star feature.";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:02 AM";"So the Notary nodes run on `iguana` -> `SuperNET`?";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:03 AM";"The notary nodes themselves will be the one to put the snapshots to Bitcoin Blocks right?";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:03 AM";"How does the backup work?";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 07:04 AM";"https://blog.komodoplatform.com/delayed-proof-of-work-explained-9a74250dbb86";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 07:04 AM";"It's a long article but It should explain it well";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:09 AM";"@CHMEX Thanks, hope I can really digest all of this, was just really curious on how you write backups on Bitcoin blocks, I mean since you are writing on BTC blocks would it mean, it is affecting Bitcoin's block sizes?";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 07:11 AM";"That it does is writing the latest KMD blockhash into a BTC transaction. That Transaction gets mined into a BTC Block by BTC miners ( not notary nodes )
This is a very simple explenation";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 07:13 AM";"blockchain.com/de/btc/tx/3c096c86577156b60d45fd097fda70a0732f60ab4048add17fe4799dc58bf236 this is a notarization on BTC
it's 1580 (Bytes)  so not that large";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 07:15 AM";"1P3rU1Nk1pmc2BiWC8dEy9bZa1ZbMp5jfg  is the address where the notarization fee ( excl. miners fee ) is sent to.";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:19 AM";"(Scratches head!)
> That it does is writing the latest KMD blockhash into a BTC transaction. That Transaction gets mined into a BTC Block by BTC miners ( not notary nodes )

So you are writing it into the BTC Transaction? I thought the transaction's were non-editable?";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 07:20 AM";"Each transaction has a optional data part called OP_RETURN";"";"";
"423176312354635779";"gcharang#6833";"12-Feb-19 07:20 AM";"https://en.bitcoin.it/wiki/OP_RETURN";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:27 AM";"Ok got it, so yo add it on the bitcoin vout--scriptPubKey--asm/hex part of the transaction? Like in here? https://insight.bitpay.com/api/tx/c1213daba694b3ecbc0ef4ff506b46af4b3fd3843c78614bbd02e4eaea7bd088";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:29 AM";"Or is it just like creating a simple bitcoin transaction and just adding the KMD latest hash on the script part?";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:37 AM";"okY maybe I am making progress now.";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:37 AM";"```json
{
value: ""0.00000000"",
n: 1,
scriptPubKey: {
hex: ""6a28a9a0086a2a381637cf54e4d1ef075fac50c8105314be7b58e6230c29000000008cb112004b4d4400"",
asm: ""OP_RETURN a9a0086a2a381637cf54e4d1ef075fac50c8105314be7b58e6230c29000000008cb112004b4d4400""
},
spentTxId: null,
spentIndex: null,
spentHeight: null
}
],```";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:46 AM";"Block size of KOMODO is still 1MB right?";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 07:46 AM";"no it's 4MB and was 2MB before";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 07:57 AM";"@CHMEX is there a documentation on that?";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 07:58 AM";"https://komodoplatform.com/komodos-sapling-upgrade-success/";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 07:58 AM";"The recent Komodo update included the Sapling upgrade, originally developed by zCash, which greatly reduces the amount of processing power needed to complete a private z-transaction; a number of technologies upstreamed from Verus Coin that provide new options in the customization of independent blockchains launched with Komodo‚Äôs technology; and an increase in block size from 2 MB to 4 MB.";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 08:00 AM";"Thank you @CHMEX and also Komodo is already supporting Segwit right?";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 08:02 AM";"I don't think we do that no";"";"";
"242635006516658197";"jorian#4555";"12-Feb-19 08:06 AM";"no segwit in komodo";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 08:36 AM";"Ok thanks @CHMEX and @jorian";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 08:39 AM";"How do I get the current Komodo stats? Including the Notary node counts as well as number of asset chains?";"";"";
"420119978138664961";"CHMEX#0686";"12-Feb-19 08:43 AM";"https://komodostats.com/";"";"";
"242635006516658197";"jorian#4555";"12-Feb-19 08:44 AM";"those are the notarized ones. and i think all assetchains within the platform are notarized";"";"";
"242635006516658197";"jorian#4555";"12-Feb-19 08:44 AM";"https://dexstats.info is also a nice place";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 08:48 AM";"So there aren't alot of nodes right?";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"12-Feb-19 08:48 AM";"Compared to others?";"";"";
