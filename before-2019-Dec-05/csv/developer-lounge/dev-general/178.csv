AuthorID;Author;Date;Content;Attachments;Reactions;
"423176312354635779";"gcharang#6833";"27-May-19 06:24 AM";"https://docs.komodoplatform.com/assetchains/checklist-new-coin.html
these are the steps @NutellaLicka 

there are efforts to automate/streamline most of them but that's under development

> Also, are notarisation costs pay per notarisation?
yes but you pay the yearly amount 

all the currently dPoWed chains: https://github.com/jl777/SuperNET/blob/dev/iguana/dpowassets
different format: https://github.com/jl777/komodo/blob/dev/src/assetchains.json";"";"";
"202999072519356416";"NutellaLicka#4241";"27-May-19 06:24 AM";"Perfect, thanks @gcharang I hadn't dug deep enough it turns out";"";"";
"202999072519356416";"NutellaLicka#4241";"27-May-19 06:25 AM";"Is there a guide cost/notarisation at all?";"";"";
"365714438864633856";"dukeleto#7326";"27-May-19 06:26 AM";"New z_createrawtransaction RPC coming down the line. Let me know if the API makes sense to you and/or if you want it to work differently";"https://cdn.discordapp.com/attachments/463445317136809984/582454629888032778/z_createrawtransaction-docs.png";"";
"365714438864633856";"dukeleto#7326";"27-May-19 06:27 AM";"""you"" being anybody that might want to create raw transactions with shielded inputs and/or outputs";"";"";
"365714438864633856";"dukeleto#7326";"27-May-19 06:29 AM";"@NutellaLicka each coin pays differently based on their min xtn amounts, for instance GAME spends a lot more on notarization because they are unable to make 0.0001 utxos";"";"";
"202999072519356416";"NutellaLicka#4241";"27-May-19 06:30 AM";"Ah right. So do KMD charge a fee on top of those per notarisation costs?";"";"";
"365714438864633856";"dukeleto#7326";"27-May-19 06:31 AM";"yes, each project negotiates some kind of yearly service fee, in addition to the raw transaction costs";"";"";
"365714438864633856";"dukeleto#7326";"27-May-19 06:32 AM";"otherwise, all the work notary nodes do to secure all those 3rd party coins, would be for free. That is not sustainable";"";"";
"365714438864633856";"dukeleto#7326";"27-May-19 06:33 AM";"additionally, some coins integrate dpow themselves or I have been contracted to add dpow to various coins. That is a one time fee that is negotiated based on complexity";"";"";
"365714438864633856";"dukeleto#7326";"27-May-19 06:33 AM";"if you haven't read this, it goes over a lot of this stuff: `https://github.com/leto/mastering_komodo_dpow/blob/master/mastering_komodo_dpow.md`";"";"";
"202999072519356416";"NutellaLicka#4241";"27-May-19 06:39 AM";"Thanks, that also looks like a must read. Is the actual cost to each coin ""in confidence"", or are these open figures?";"";"";
"365714438864633856";"dukeleto#7326";"27-May-19 01:06 PM";"@NutellaLicka every coin makes a custom deal, there is no standard price, as far as I know";"";"ü§ô (1)";
"365714438864633856";"dukeleto#7326";"28-May-19 04:36 AM";"https://github.com/jl777/komodo/pull/1506";"";"üëè (1)";
"365714438864633856";"dukeleto#7326";"28-May-19 01:20 PM";"@Decker do you have any potential use cases where you would make raw zxtns ? I want to make sure z_createrawtransaction can do things that you might want to do with it, and that the API makes sense";"";"";
"474206298427097099";"ComputerGenie üë¥üèºüì¢#7004";"28-May-19 01:21 PM";"one would assume the use cases would be the exact same as for ""normal"" raws";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:35 PM";"@ComputerGenie üë¥üèºüì¢ sure, i am looking for specific use cases like ""3 zaddr inputs with 1 taddr and 1 zaddr output"", things I can actually use as test data to make sure they work";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:36 PM";"z_sendmany does not allow something like that";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:36 PM";"just wondering if there is a specific use case I can test with";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:36 PM";"or I will just make up some junk";"";"";
"474206298427097099";"ComputerGenie üë¥üèºüì¢#7004";"28-May-19 01:36 PM";"that z_sendmany is backwards to sendmany has always been odd to me";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:37 PM";"z_createrawtransaction is meant to be dead simple to use if you know createrawtransaction";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:37 PM";"it's almost the same, but might need some slight tweaks";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:37 PM";"right now, I make it so you give the `address` of the sapling note (zutxo) you are spending";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:37 PM";"it might be possible to look up, but it's hella annoying";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:37 PM";"so that is one additional bit of data you give for inputs";"";"";
"474206298427097099";"ComputerGenie üë¥üèºüì¢#7004";"28-May-19 01:43 PM";"losing the ""no duplicates"" constraints of sendmany is the main reason I use raws, if that helps";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:45 PM";"@ComputerGenie üë¥üèºüì¢ i removed that duplicate thing in z_sendmany in kmd a while ago but it seems a recent merge brought it back.";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:45 PM";"if somebody wants to send to a duplicate address, my philosophy is ""let them""";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 01:47 PM";"The difference between what RPCs will let you do and consensus rules is very interesting. Some things I see a reason for (protect a user from setting a fee > amount), but others just seem lame (like duplicate receivers). In theory, this protects against ""spam"" but any real attacker will just use raw xtns. It doesn't actually help anything and makes it annoying to do certain things";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 02:53 PM";"@jl777c I am merging latest FSM into hush and just kind of wondering: is this the latest verushash v2 I am seeing? or a bug fix to the older version of verushash that kmd has?";"";"";
"455741312273219595";"jl777c#5810";"28-May-19 02:53 PM";"not it is verushash 1.1";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 02:54 PM";"ok, thanks";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 03:05 PM";"Kind of interesting, ZEC is probably going to move to 1minute blocks: https://github.com/zcash/zcash/pull/4025";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 03:05 PM";"normally that would mess up FR stuff, but they plan to enable that with ""Blossom"", when the FR ends";"";"";
"455741312273219595";"jl777c#5810";"28-May-19 03:08 PM";"so they are trying to morphing gradually into PIRATE, just without forced privacy";"";"";
"574954625891827722";"barnum#1699";"28-May-19 04:04 PM";"https://tenor.com/view/hi-everybody-simpsons-wave-gif-12144219";"";"üëã (3)";
"365714438864633856";"dukeleto#7326";"28-May-19 04:17 PM";"@jl777c FSM branch has some compile issues with build-mac.sh it seems, some warnings become errors: `https://gist.github.com/leto/d8c3bfc169520768424ae22e034eb10c`";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 04:19 PM";"https://github.com/jl777/komodo/issues/1508";"";"";
"455741312273219595";"jl777c#5810";"28-May-19 04:19 PM";"@Decker";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 04:19 PM";"i tried a trivial fix but it didn't work";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 04:19 PM";"gotta run but I can help decker look at it later";"";"";
"455741312273219595";"jl777c#5810";"28-May-19 04:19 PM";"ca333 made a comment on the pull request which maybe would fix it?";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 04:20 PM";"this error is bizarre to me: ```
In file included from main.cpp:625:
komodo.h: In function 'int32_t komodo_connectblock(bool, CBlockIndex*, CBlock&)':
komodo.h:811:26: error: control reaches end of non-void function [-Werror=return-type]
     std::vector<int32_t> notarisations;
                          ^~~~~~~~~~~~~
cc1plus: all warnings being treated as errors
```";"";"";
"272003866906722306";"TonyL#3577";"28-May-19 04:27 PM";"@dukeleto By latest Decker's PR we switched from gcc-6 to gcc-8 on OSX because of linkage errors on gcc@6. In case if you have not gcc@8 on your Mac - could you please `brew install gcc@8` and try to compile again?";"";"";
"365714438864633856";"dukeleto#7326";"28-May-19 06:43 PM";"@TonyL i have been using clang 9.1, i will see what I can do. At this point i want to never dev from os x again, lol";"";"üëç (1),üòÇ (1)";
"272003866906722306";"TonyL#3577";"29-May-19 12:18 AM";"I've tested OSX build before this PR and it was fine with gcc@8 on High Sierra and Mojave. For order answered in GH issue too üòÉ";"";"";
"371114647052615681";"Mylo#8306";"29-May-19 06:15 AM";"My Mac charger stopped working, but I  mistakenly didn‚Äôt check the charger - bought a low end Acer with a FHD screen.
Best mistake I‚Äôve made in the last 1000 days";"";"üôÇ (1),üëç (1),üí© (1),üá≠ (1),üá¶ (1),üáµ (1),üá≥ (1),üá∏ (1)";
"365714438864633856";"dukeleto#7326";"29-May-19 12:48 PM";"@TonyL `https://gist.github.com/leto/19b6c09c68e559d6acb1c4e0daf40b9c`";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:48 PM";"pretty bad compile error about missing libisl, which i have never heard of before. i will try a full clean compile but that takes a while";"";"";
"272003866906722306";"TonyL#3577";"29-May-19 12:49 PM";"https://github.com/Homebrew/homebrew-core/issues/25293 looks similar to this one";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:50 PM";"hmm, yeah it seems that having multiple gcc versions installed via homebrew is not as simple as I thought";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:50 PM";"might have to do `brew link` as well";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:50 PM";"i didn't do that after switching";"";"";
"272003866906722306";"TonyL#3577";"29-May-19 12:50 PM";"last time I wanted to throw macbook from window when messed with brew deps üòÇ";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:51 PM";"@TonyL oh, i am very close to that, but then i would have no dev machine, lol";"";"üòÇ (1)";
"365714438864633856";"dukeleto#7326";"29-May-19 12:51 PM";"i am so sick of every time I pull in KMD upstream, it doesn't work on a mac. I am not blaming anybody, it's just so infruriating";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:51 PM";"all i want to do is hack on the code i want to hack on";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:52 PM";"and instead, i am deep in the bowels of compiler/linker issues";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:52 PM";"it's getting old really fast. This was a free laptop from an old $job, a 2015 MBP (the last good ones). My next dev laptop is pure linux only, gosh";"";"";
"272003866906722306";"TonyL#3577";"29-May-19 12:52 PM";"As far as I understand it was a necessary fix to make pirate work with OSX";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:52 PM";"no more hipster hardware";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:53 PM";"```
$ brew link gcc@8
Linking /usr/local/Cellar/gcc@8/8.3.0...
Error: Could not symlink bin/c++-8
Target /usr/local/bin/c++-8
is a symlink belonging to gcc. You can unlink it:
  brew unlink gcc

To force the link and overwrite all conflicting files:
  brew link --overwrite gcc@8

To list all files that would be deleted:
  brew link --overwrite --dry-run gcc@8
```";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:53 PM";"so i am going to try some of that";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:53 PM";"let's see if i break my entire compiler chain";"";"ü§û (1)";
"365714438864633856";"dukeleto#7326";"29-May-19 12:54 PM";"at least i am learning more about `brew`, tho i don't want to";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:54 PM";"Thing I learned: if you don't `make clean` in between changing compiler versions, you can find some weird bugs!";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:54 PM";"so i am compiling from scratch now, with gcc 8";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 12:55 PM";"not unlinking and relinking probably caused many issues in the past when I tried this trick";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:00 PM";"well, i feel lucky at least, i got `error 77`";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:01 PM";"```
hecking build system type... i386-apple-darwin17.5.0
checking host system type... x86_64-apple-darwin17.5.0
checking for x86_64-apple-darwin17.5.0-gcc... gcc-6
checking whether the C compiler works... no
configure: error: in `/Users/jonathanleto/git/hush3/depends/work/build/x86_64-apple-darwin17.5.0/native_ccache/3.3.1-032cfa649fd':
configure: error: C compiler cannot create executables
See `config.log' for more details
make: *** [/Users/jonathanleto/git/hush3/depends/work/build/x86_64-apple-darwin17.5.0/native_ccache/3.3.1-032cfa649fd/./.stamp_configured] Error 77
```";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:01 PM";"i broke shit pretty bad. This has happened before";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:01 PM";"and is why i never change a working compiler, lol";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:01 PM";"oh oh";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:01 PM";"I didn't set the correct env var for build.sh it seems, it found gcc-6";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:01 PM";"i thought that was the whole point of `brew link`";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:02 PM";"running `CC=gcc-8 ./zcutil/build-mac.sh -j3` and saying a prayer";"";"üôè (1)";
"365714438864633856";"dukeleto#7326";"29-May-19 01:02 PM";"@Deleted User yes, i have used docker locally for that exact reason";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:03 PM";"i have old vagrants, too. but docker is better than vagrant";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:03 PM";"docker-compose was pretty cool for a while, i learned about that at an old $job";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:03 PM";"and yeah, doing all my dev in a local docker container is looking really fucking good right now";"";"";
"272003866906722306";"TonyL#3577";"29-May-19 01:03 PM";"I feel awkward because for me just `brew install gcc@8` did a trick";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:03 PM";"also smashing some stuff";"";"";
"272003866906722306";"TonyL#3577";"29-May-19 01:03 PM";"Let me re-test on merged version just in case";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:04 PM";"@TonyL it's all good, i have (ab)used this machine so long, done unthinkable things";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:04 PM";"it's amazing it works at all";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:04 PM";"@TonyL build-mac.sh seems to ignore $CC";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:04 PM";"and no matter what, finds gcc-6";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:04 PM";"this is why we can't have nice things";"";"";
"272003866906722306";"TonyL#3577";"29-May-19 01:09 PM";"Have you tried `brew upgrade gcc` ?";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:10 PM";"@TonyL just tried that and it's installing gcc-9 now";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:10 PM";":troll_lol:";"";"";
"272003866906722306";"TonyL#3577";"29-May-19 01:10 PM";"Ah, build-mac.sh have exports in the beginning";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:10 PM";"build-mac.sh is an abomination";"";"";
"272003866906722306";"TonyL#3577";"29-May-19 01:10 PM";"export CC=gcc-6 and so on (thats why it ignores $CC I think)";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:10 PM";"it should not exist";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:11 PM";"it existed briefly in ZEC upstream, KMD pulled it in, and then ZEC merged it into build.sh";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:11 PM";"so build-mac.sh should not exist";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:11 PM";"it has bugs constantly, because it's forgotten about. The best solution is to merge it back to build.sh. It's probably only a few lines different, but it's super annoying, I know";"";"";
"365714438864633856";"dukeleto#7326";"29-May-19 01:13 PM";"@TonyL huh";"";"";
