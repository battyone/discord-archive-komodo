AuthorID;Author;Date;Content;Attachments;Reactions;
"412482228359266328";"CrisF#3405";"18-Jan-19 10:05 AM";"@Mylo Hi, I don't quite follow this part, `bugs, small rewards from dev, bigger rewards from labs.` Does this mean rewards coming from the escrow?";"";"";
"232679450301431808";"blackjok3r#3181";"18-Jan-19 10:09 AM";"Bugs bointies were always supposed to be new coins created.  A lot of external people have sauid that devs should have to buy labs and put up bounties... But my proposal makes creating the chain cost LABS, and bug bounties cas still be new created coins. I liek a time lock though... maybe, half of it is time locked. Just prevents people claiming bug bounty then dumping all the LABS right away.";"";"parrot (1)";
"412482228359266328";"CrisF#3405";"18-Jan-19 10:13 AM";"Ahh, I see.";"";"";
"412482228359266328";"CrisF#3405";"18-Jan-19 10:13 AM";"That makes more sense.";"";"";
"412482228359266328";"CrisF#3405";"18-Jan-19 10:17 AM";"Trying to burn through the fog and run through the implications of the time lock.  Will take a bit, but see a few advantage to the LABS ecosystem.";"";"";
"232679450301431808";"blackjok3r#3181";"18-Jan-19 11:30 AM";"I think its a little hacky, but I have managed to compile VHT2 branch using VerusHashV2, from my understanding this is an unused Algo, so there are no GPU or FPGA miners for it. Only the Daemon CPU miner. For 0 Block reward chains  this will be perfect. To merge this to real KMD it needs to be done a diffrent way, because otherwise LUMBER wont sync. So for now I will just leave it in VHT2 branch and launch a test chain with it.";"";"üî• (1)";
"455741312273219595";"jl777c#5810";"18-Jan-19 11:31 AM";"would be good to have a VERUSHASH2 algo that we can add to the -ac options";"";"";
"232679450301431808";"blackjok3r#3181";"18-Jan-19 11:32 AM";"yes it will .. if this works as expected I will get mike to help me add it. HE did say he would help with this. It was his suggestion to use V2. üòÉ";"";"";
"232679450301431808";"blackjok3r#3181";"18-Jan-19 11:33 AM";"Wont be for a while though going to take a few days off after this.";"";"";
"455741312273219595";"jl777c#5810";"18-Jan-19 11:34 AM";"no giant rush just one of those cool things to have";"";"";
"455741312273219595";"jl777c#5810";"18-Jan-19 11:34 AM";"and should pave the way for adding more and more hashalgos";"";"üòé (3)";
"232679450301431808";"blackjok3r#3181";"18-Jan-19 11:37 AM";"This will also help with the difficulty problem, we can just set V2 to use a much higher min diff in the chain params.";"";"";
"455741312273219595";"jl777c#5810";"18-Jan-19 11:38 AM";"will we need custom miner functions for each algo?";"";"";
"455741312273219595";"jl777c#5810";"18-Jan-19 11:38 AM";"or just use one of the two existing ones, depending on details?";"";"";
"455741312273219595";"jl777c#5810";"18-Jan-19 11:39 AM";"mindiff, which mining function, name, #define value, maybe that is about all that is needed for each new algo";"";"";
"455741312273219595";"jl777c#5810";"18-Jan-19 11:41 AM";"so we should define a struct with all the algo specific strings and values, function name. then for a new algo, it is a matter to add a new structure element and link in a file with all the required code";"";"";
"232679450301431808";"blackjok3r#3181";"18-Jan-19 11:59 AM";"I think most algos can be added to the Verus Miner ... it seems like this was made that way from the start, the only proiblem is defining of the hash writer...";"";"";
"232679450301431808";"blackjok3r#3181";"18-Jan-19 12:02 PM";"V2 is working fine for me, the hash rate is the same too. Still crazy high.";"";"";
"474206298427097099";"ComputerGenie üë¥üèºüì¢#7004";"18-Jan-19 12:55 PM";"`people can also submit bug bounty claims if they can show a reproducible issue
I think bug bounty should only be paid once fixed
so the tester would have to work with the dev to fix it before they receive anything
that way if dev abandons it, we aren't making coins for bug fixes in their abandoned contract
also maybe time locks for the bounty`
@Alright If I'm reading that correct, I'd say that the timelock is a must; otherwise, what's to stop the dev from abandoning it just to not pay anything?";"";"ü§î (1)";
"232679450301431808";"blackjok3r#3181";"19-Jan-19 01:09 AM";"good point.";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 01:40 AM";"@ComputerGenie üë¥üèºüì¢ not sure I understand the question";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 01:41 AM";"maybe you're thinking it's the dev paying the bounty? That was never the intention. STAKED started as a way for devs to get testing for relatively cheap";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 01:41 AM";"bug bounties are meant to be baked into coin emissions";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 01:55 AM";"Hi, would it be possible to run through a couple of usecases for LABS?";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 01:56 AM";"(examples)";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 01:57 AM";"It might help to get a clearer understanding of how the system works.";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 01:57 AM";"(for me)";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 01:58 AM";"dev creates contract, isn't 100% confident it's ready for production use, we put it on the cluster and try to break it. Dev gets relatively cheap testing. We get a new contract.";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 01:58 AM";"that's really what it boils down to IMO";"";"üòé (1)";
"405011811511828481";"Alright#0419";"19-Jan-19 01:58 AM";"but of course plenty of other use cases";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 01:59 AM";"have an idea for something cool, but it's not worth creating it's own coin over?";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:00 AM";"An example. (Something easy to start with, like something we've already done.) Ahh...";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:03 AM";"Dice for example.
I have an idea to use the dice cc to make a chain.  Want to test a lot before going live.
First I contact Labs on Discord...";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:08 AM";"What steps would I take then?";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:10 AM";"( I would want bug hunting, user feedback, and possibly stats)";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:11 AM";"Do you recall all the testing that happened in #kmdice channel after launch?";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:12 AM";"Yes";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:12 AM";"I don't believe it's practical to create a brand new coin for each contract";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:12 AM";"So imagine what happened in #kmdice, all that testing, all those hard forks";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:14 AM";"Yes, that's what I'd like to avoid :abusedsmily:";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:16 AM";"In this case I'm wondering what steps I'd go through to iron that out on Labs before going live.";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:16 AM";"that's the point, we don't need to avoid that";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:17 AM";"it's a huge hassle for any other coin, but it's a slight nuisance for us";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:21 AM";"I'm missing something very basic, haha.  Will have a think üí°";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:23 AM";"@CrisF do you see what I'm saying here?";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:24 AM";"if a coin didn't have a fungible cluster, every hard forking change in any contract would require the entire network to hardfork";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:24 AM";"we segregate the contracts to specific chains, so only that chain has to hard fork";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:25 AM";"so if we were developing 5 contracts in parallel without a  fungible cluster, we'd be hard forking every week üòÇ";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:27 AM";"Yeah, I misunderstood.  You meant it's better to do that in Labs beforehand?";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:30 AM";"Yes";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:30 AM";"aiming to be a testnet for all assetchains pretty much";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:30 AM";"that is incentivized";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:30 AM";"That's what I was thinking originally.";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:31 AM";"I would like to understand the procedure for going about that better.";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:32 AM";"make a contract, PR it to stakedchain repo in it's own branch, launch a chain";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:34 AM";"the result of being a testnet for all assetchains is that users will be able to use the contract while it's still being developed as opposed to developing the contract fully then putting it into production";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:36 AM";"dice had been usable for months prior to it being properly tested by KMDice";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:37 AM";"I've got that part.
I read the steps from the posts and on github.  I was thinking and example run through of the steps to set up that pre-production testing might help me.  How to set up the testing on Labs.";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:37 AM";"I think we just need to do it then document the process";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:38 AM";"we can do it immediately after launch with some example";"";"";
"412482228359266328";"CrisF#3405";"19-Jan-19 02:38 AM";"Yes, that's where an example might help.";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:38 AM";"maybe just editing a contract slightly then launching a chain with that unique edit";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:39 AM";"We could start documenting it now, but I think it'd be best to wait until we've done it at least once";"";"üëç (1)";
"405011811511828481";"Alright#0419";"19-Jan-19 02:44 AM";"After launch, we can make a chain that has a faucet with no limit on how many times a pubkey can do it along with a larger amount per faucetget";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:45 AM";"that would be the simplest example I believe and likely get some people interested by letting them directly earn some coins";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 02:45 AM";"Can test the process of killing a chain with it as well";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:28 AM";"@LabsAssistant we're going to use this as the definitive place for proposals. Please make your own or respond to our's if you have anything to add. 
https://github.com/StakedChain/StakedNotary/issues/22";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:29 AM";"can't keep losing ideas to discord chats, need something we can look back at in a year";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:30 AM";"is there also a provision  for testing implementations of existing contracts?";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:31 AM";"Yes of course";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:31 AM";"maybe we should rip out contracts from main chain for the time being";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:31 AM";"put all the existing ones onto a single chain";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:32 AM";"cool, just confirming. might hold a `hack the hound` comp at some stage";"";"3040_kingpeepo (1)";
"405011811511828481";"Alright#0419";"19-Jan-19 03:32 AM";"üòÉ";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:33 AM";"Dragonhound has been a bit sidetracked lately while working on other stuff, but the other stuff is tangential and works towards the while label variation of dragonhound for other use cases.";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:34 AM";"hopefully the whiltelabelling will be the means to fund the hardware costs of dragonhound kits üòÉ";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:34 AM";"Will you launch a chain for it?";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:35 AM";"it's not reallly neccesarry, but probably will just to keep from spamming someone else's chain lol";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:36 AM";"I've been on the gui side of things lately, and a bit of legacy db backend. about to get back into oracles to link it all together";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:37 AM";"one thing I've been thinkning was how to make oracles readonly unless authorised";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:38 AM";"might mean creating a fork of the contract?";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:38 AM";"yep";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:38 AM";"not sure I understand what that means though";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:38 AM";"aren't they already read only?";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:39 AM";"you want to prevent other people from registering on an oracle?";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:39 AM";"not sure, I've registered more than once on the same oracle, bt on same node so maybe thats ok";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:39 AM";"but yeah. lock rego to auth users.";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:40 AM";"avoid non-pertinent oracles from being created";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:40 AM";"or existing oracles being written to with junk data by unauthed users";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:40 AM";"would be useful, creator of the oracle could register with the creator pubkey and be able to update who can register from that pubkey";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:40 AM";"possibly üòõ";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:41 AM";"although, you could also just ignore them";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:41 AM";"I'll have to go deep when I have some rabbit hole time spare...";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:41 AM";"concern is chain being spammed into oblivion";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:41 AM";"think you could implement something like that in a dapp with existing contract";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:42 AM";"so dapp checks creator pubkey oraclessamples for all pubkeys to check";"";"";
"405011811511828481";"Alright#0419";"19-Jan-19 03:42 AM";"ignores the rest";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:42 AM";"dapp already filters to what's pertinent, but if too many oracles on chain it might slow thiungs down";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:43 AM";"bit messy too, I like clean...";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"19-Jan-19 03:44 AM";"alternatively, a way to kill oracles ü¶å";"";"üèπ (2)";
