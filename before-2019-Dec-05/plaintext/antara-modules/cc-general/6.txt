==============================================================
Guild: Komodo
Channel: cc-general
Topic: Dev Docs: https://developers.komodoplatform.com | Test plan: https://docs.google.com/spreadsheets/d/1l0dWEPcrv9zE11_TD-XrX_HIYV0VLpadCJN6hvaZERc/edit#gid=211514340
https://medium.com/@jameslee777/how-to-implement-finite-state-machines-into-a-cc-8dfeadccbcad
https://github.com/dimxy/komodo/wiki/Designing-RPC-for-FSM-CC
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[24-Jul-18 12:35 PM] jl777c#5810
it is komodod that is doing all this... seems logical to extend komodod

[24-Jul-18 12:35 PM] grewalsatinder#9653
right....okay....

[24-Jul-18 12:36 PM] jl777c#5810
it is a native contract, directly accessing the DB and datastructures

[24-Jul-18 12:36 PM] grewalsatinder#9653
don't you think it will add a lot of help command outputs to the original komodod ?? üòÑ

[24-Jul-18 12:36 PM] jl777c#5810
not really anything I consider a problem

[24-Jul-18 12:37 PM] grewalsatinder#9653
I guess in that case we should add the help switch to `-ac_name=` too ü§î

[24-Jul-18 12:37 PM] grewalsatinder#9653
if need help for `ASSETS` chain, use `komodo-cli -ac_name=ASSETS help`

[24-Jul-18 12:37 PM] grewalsatinder#9653
something like this

[24-Jul-18 12:38 PM] jl777c#5810
I await pull request for such things

[24-Jul-18 12:38 PM] jl777c#5810
my task is to make a wide spectrum of example CC contracts

[24-Jul-18 12:38 PM] jl777c#5810
that will allow others to jump start their development from the closest fit

[24-Jul-18 12:39 PM] jl777c#5810
the hard part about the utxo based CC contracts is that it is utxo based and very unconstrained

[24-Jul-18 12:47 PM] grewalsatinder#9653
@jl777c made issue for this. https://github.com/jl777/komodo/issues/783

{Embed}
https://github.com/jl777/komodo/issues/783
[Enhancement] Isolating cryptocondition applications help to speci...
As per current development of demo smart contracts/cryptoconditions, the help for these demo smart contracts are showing in komodo-cli help. like for faucet demo (https://github.com/jl777/komodo/bl...
https://avatars3.githubusercontent.com/u/12998093?s=400&v=4

[24-Jul-18 12:47 PM] grewalsatinder#9653
so that it can be referenced to some other devs if need to get help.

[24-Jul-18 12:48 PM] jl777c#5810
wait, i think you are misunderstanding

[24-Jul-18 12:48 PM] grewalsatinder#9653
ü§î

[24-Jul-18 12:48 PM] jl777c#5810
the token, faucet, rewards, these contracts are part of all komodod -ac_cc=1 chains

[24-Jul-18 12:49 PM] SHossain#0007
started an faq doc on this as well https://github.com/himu007/KMD-CC-Token-Test-Guide/blob/master/faq.md

{Embed}
https://github.com/himu007/KMD-CC-Token-Test-Guide/blob/master/faq.md
himu007/KMD-CC-Token-Test-Guide
KMD-CC-Token-Test-Guide - Komodo CC Token testing description, setup & how-to
https://avatars2.githubusercontent.com/u/8881040?s=400&v=4

[24-Jul-18 12:49 PM] jl777c#5810
it is just something that any chain can do. you dont need to make a special FAUCET chain to use the faucet CC rpc

[24-Jul-18 12:49 PM] SHossain#0007
will post the questions jl777 gets asked and the answers.

[24-Jul-18 12:49 PM] SHossain#0007
please correct me if i'm wrong

[24-Jul-18 12:50 PM] jl777c#5810
I extended the type of vouts that exist. before we had p2pk, p2pkh and p2sh. basically with very few exceptions all scriptPubKey were one of those three types

[24-Jul-18 12:50 PM] jl777c#5810
now there is a cryptoconditions type of vout

[24-Jul-18 12:50 PM] jl777c#5810
but additionally, each CC output has an evalcode

[24-Jul-18 12:51 PM] grewalsatinder#9653
yes, I understand so far that I don't have to create a FAUCET chain to use `faucet` commands from `komodo-cli`. I was just using faucet as example. may be I need to update the example chain name... ü§î

[24-Jul-18 12:51 PM] jl777c#5810
so there is a customizable and identifiable CC outputs

[24-Jul-18 12:51 PM] jl777c#5810
each new CC contract added, creates effectively a new type of vout

[24-Jul-18 12:52 PM] jl777c#5810
and these new types of vouts are basically living in their own universe of utxo

[24-Jul-18 12:52 PM] jl777c#5810
but it is easy to have it go from normal coin to CC utxo and back

[24-Jul-18 12:52 PM] jl777c#5810
just a matter of allowing it

[24-Jul-18 12:53 PM] jl777c#5810
which means all chains with CC enabled will be able to use all of the CC contracts

[24-Jul-18 12:54 PM] grewalsatinder#9653
let's say I made a smart contract of `cat_ping`, and it's help command is `komodo-cli cat_ping <string>` which outputs as `meaw`. 
so I expect as of now it's help will show in `komodo-cli help` as well as in `komodo-cli -ac_name=<ANYASSETCHIN/ALLASSETCHAINS> help`
but I wish to show this help only in `komodo-cli -ac_name=KITTYCAT help`.

[24-Jul-18 01:03 PM] grewalsatinder#9653
re-read the last comments again....
so I guess my request doesn't make sense if all the commands in the CC assetchain also has to be supported in the Komodo main blockchain too ü§î

[24-Jul-18 01:11 PM] grewalsatinder#9653
have another question:
What is the importance of these new EVAL like this: https://github.com/jl777/komodo/blob/jl777/src/cc/eval.h#L43
what should I search to read more on it?

{Embed}
https://github.com/jl777/komodo/blob/jl777/src/cc/eval.h
jl777/komodo
komodo - Komodo
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[24-Jul-18 01:45 PM] Mylo#8306
EVAL codes in eval.h are the CC contract types i believe.
"`rewards contract`" ID is 0xe5, `faucet contract` is 0xe4.

The goal is to have building blocks of smart contracts.
It's important to ignore for 1 moment that assets/tokens exist and can be exchanged.  This is a huge smart contract.

Imagine faucet was the first contract made.
It includes `CCinclude.h` which has all the core komodo stuff (wallet, signing, etc.) and eval.h so that somewhere i can spit out the ID of the contract type it is.

The smart contract "library" or "catalogue" is available to all of komodo.  You pick what you need to use for your use of blockchain.

That's how i'm reading it.

[24-Jul-18 01:46 PM] Mylo#8306
If you need something different, you pick the "smart contract of closest fit" and make your changes.  If you want, you PR it upstream back to komodo and it is included in the komodo "catalogue of smart contracts"

[24-Jul-18 01:49 PM] Mylo#8306
If you wanted to write contracts in go....as long as the data structures are the same, you're only encoding/decoding bytes of signed transactions - so as long as go can use the cpp libs - yeah why not!?

[24-Jul-18 01:59 PM] grewalsatinder#9653
thanks for clearing a bit on it Mylo üôÇ  üëç

{Reactions}
ü§û 

[24-Jul-18 02:44 PM] Mylo#8306
my question is, can you chain smart contract conditions together like IF statements.

[24-Jul-18 03:17 PM] jl777c#5810
The demo contracts I am doing use the absolute simplest possible CC condition

[24-Jul-18 03:17 PM] jl777c#5810
and with that I am able to do assets, rewards, faucet and more

[24-Jul-18 03:18 PM] jl777c#5810
there is no reason you cant make a contract that knows about other contracts

[24-Jul-18 03:18 PM] jl777c#5810
if you can describe what the contract does in terms of utxo, likely it can be done as long as you dont require the mindreading api. that is where it somehow magically needs to know what the user is thinking. too many bugs with that one so far

[24-Jul-18 04:39 PM] tolken#2655
üòâ  hah

[24-Jul-18 05:42 PM] Alright#0419
@jl777c can you explain what exactly the purpose of these addresses are? 
https://github.com/jl777/komodo/blob/da8b0b333653ce2539fd61c3d1fc6f27a9944fe2/src/cc/CCcustom.cpp#L45

{Embed}
https://github.com/jl777/komodo/blob/da8b0b333653ce2539fd61c3d1fc6f27a9944fe2/src/cc/CCcustom.cpp
jl777/komodo
komodo - Komodo
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[24-Jul-18 05:43 PM] Alright#0419
I just imported RFYE2yL3KknWdHK6uNhvWacYsCUtwzjY3u on ATEST and spent the .0001 that was in it

[24-Jul-18 05:43 PM] Alright#0419
going to try the other addresses

[24-Jul-18 05:48 PM] Alright#0419
https://github.com/jl777/komodo/blob/da8b0b333653ce2539fd61c3d1fc6f27a9944fe2/src/cc/CCcustom.cpp#L67
this one isn't the correct privkey for that commented address

{Embed}
https://github.com/jl777/komodo/blob/da8b0b333653ce2539fd61c3d1fc6f27a9944fe2/src/cc/CCcustom.cpp
jl777/komodo
komodo - Komodo
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[24-Jul-18 05:58 PM] jl777c#5810
you can only spend the normal funds in those addresses, CC outputs are protected

[24-Jul-18 05:58 PM] jl777c#5810
CC addresses map the CC scriptPubKey to an address, not the pubkey

[24-Jul-18 06:00 PM] jl777c#5810
the purpose of the addresses are to have special addresses that all nodes have the privkey for and are able to sign the CC transaction to released otherwise locked funds

[24-Jul-18 06:01 PM] Alright#0419
and what's the purpose of sending coins to them?

[24-Jul-18 06:01 PM] jl777c#5810
depends on the CC contract

[24-Jul-18 06:01 PM] jl777c#5810
for the faucet contract, the purpose is to have funds for the faucet

[24-Jul-18 06:02 PM] jl777c#5810
for the assets contract, the purpose is to create colored coins

[24-Jul-18 06:02 PM] jl777c#5810
for the rewards contract, the purpose is to have funds for the rewards

[24-Jul-18 06:02 PM] jl777c#5810
etc

[24-Jul-18 06:03 PM] jl777c#5810
contracts usually needs to have funds to operate.

[24-Jul-18 06:07 PM] Alright#0419
Should the colored coins be going to RGKRjeTBw4LYFotSDLT6RWzMHbhXri6BG6 instead of RFYE2yL3KknWdHK6uNhvWacYsCUtwzjY3u?

[24-Jul-18 06:07 PM] Alright#0419
The faucetfund coins go to the non-commented address

[24-Jul-18 06:07 PM] Alright#0419
whereas the tokens go to the commented address

[24-Jul-18 06:08 PM] jl777c#5810
yes, the commented address is the normal address

[24-Jul-18 06:09 PM] jl777c#5810
what do you mean tokens goes to commented address?

[24-Jul-18 06:09 PM] jl777c#5810
tokens go to RGKRjeTBw4LYFotSDLT6RWzMHbhXri6BG6

[24-Jul-18 06:09 PM] Alright#0419
I just mean that the tokencreate tx has vouts going to the commented address

[24-Jul-18 06:09 PM] Alright#0419
and no vouts going to the non-commented address

[24-Jul-18 06:09 PM] jl777c#5810
yes because when you create tokens you dont send them to the contract you send them to yourself

[24-Jul-18 06:10 PM] jl777c#5810
from assets.cpp:
 create
 vin.0: normal input
 vout.0: issuance assetoshis to CC
 vout.1: tag sent to AssetsCCaddress
 vout.2: normal output for change (if any)
 vout.n-1: opreturn [EVAL_ASSETS] ['c'] [origpubkey] "<assetname>" "<description>"

[24-Jul-18 06:10 PM] jl777c#5810
comment is wrong, should be the normal address for vout1

[24-Jul-18 06:11 PM] jl777c#5810
locking is needed for doing trades

[24-Jul-18 06:11 PM] jl777c#5810
so you would lock assets (or coins) in the AssetsCCaddress when you make a bid or ask

[24-Jul-18 06:12 PM] Alright#0419
Ok understood, that address is for coins you set a condition for them able to be spent

[24-Jul-18 06:13 PM] Alright#0419
what I don't understand is why tokencreate sends coins to an address that everyone has a privkey for and can spend them

[24-Jul-18 06:22 PM] jl777c#5810
that is just 0.0001 for a tag to easily get a list of all creates

[24-Jul-18 06:22 PM] jl777c#5810
where it wouldnt be saturated with a bunch of other tx

[24-Jul-18 06:23 PM] Alright#0419
Ah ok that makes sense

[24-Jul-18 06:23 PM] jl777c#5810
i figure 0.0001 is no big deal cost wise

[24-Jul-18 06:24 PM] jl777c#5810
the coins sent to the CC address are all in effect locked as you need to follow the contract rules to be able to spend them

[24-Jul-18 06:30 PM] siu - Chainmakers#3920
```At global scope:
cc1plus: error: unrecognized command line option ‚Äò-Wno-builtin-declaration-mismatch‚Äô [-Werror]
cc1plus: all warnings being treated as errors
Makefile:2961: recipe for target 'cc/libbitcoin_server_a-rewards.o' failed
make[2]: *** [cc/libbitcoin_server_a-rewards.o] Error 1
make[2]: *** Waiting for unfinished jobs....
mv -f cc/.deps/libbitcoin_server_a-betprotocol.Tpo cc/.deps/libbitcoin_server_a-betprotocol.Po
make[2]: Leaving directory '/home/siu/komodo/src'
Makefile:4406: recipe for target 'all-recursive' failed
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory '/home/siu/komodo/src'
Makefile:659: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1
siu@T460:~/komodo$ 
```

[24-Jul-18 06:30 PM] siu - Chainmakers#3920
this is from latest build

[24-Jul-18 06:32 PM] jl777c#5810
you missed the message to use dev branch and not jl777 branch for now

[24-Jul-18 06:32 PM] siu - Chainmakers#3920
ah

[24-Jul-18 06:32 PM] siu - Chainmakers#3920
ok

[24-Jul-18 06:59 PM] jl777c#5810
I plan to make an enable/disable mask for specific contracts. not sure the best way to deal with varied activations on the different chains

[24-Jul-18 07:04 PM] jl777c#5810
made good progress on the rewards contract, i hope to debug it tomorrow

[24-Jul-18 07:04 PM] jl777c#5810
a normal opreturn transaction can be used to lock funds, via SPV

[24-Jul-18 07:05 PM] jl777c#5810
and anybody will be able to unlock, but there is only one address it can go back to, as specified in the lock transaction

{Reactions}
üÜí 

[24-Jul-18 08:04 PM] jl777c#5810
added the skeleton code for a few more CC contracts. Not sure how long it will take to get all these coded, but it seems a good starting set:
        EVAL(EVAL_ASSETS,   0xe3)  \
        EVAL(EVAL_FAUCET, 0xe4) \
        EVAL(EVAL_REWARDS, 0xe5) \
        EVAL(EVAL_DICE, 0xe6) \
        EVAL(EVAL_PONZI, 0xe7) \
        EVAL(EVAL_AUCTION, 0xe8) \
        EVAL(EVAL_LOTTO, 0xe9)

[24-Jul-18 08:06 PM] jl777c#5810
has anybody been able to test the bidfill?

[24-Jul-18 08:06 PM] Alright#0419
Have you worked on since about 12 hours ago?

[24-Jul-18 08:10 PM] SHossain#0007
@libscott i tried to build from jl777's dev branch on Ubuntu 18.04. Compiling failed with the following error. using gcc v 7.3
```
In file included from cc/CCcustom.cpp:66:0:
cc/CCcustom.inc: In function ‚Äòbool IsRewardsInput(const CScript&)‚Äô:
cc/CCcustom.inc:13:57: error: cannot convert ‚ÄòIsRewardsInput(const CScript&)::<lambda(CC, CCVisitor)>‚Äô to ‚Äòint ()(CC, CCVisitor)‚Äô in initialization
     CCVisitor visitor = {findEval, (uint8_t)"", 0, NULL};
                                                         ^
Makefile:2891: recipe for target 'cc/libbitcoin_server_a-CCcustom.o' failed
make[2]:  [cc/libbitcoin_server_a-CCcustom.o] Error 1
make[2]:  Waiting for unfinished jobs....
mv -f cc/.deps/libbitcoin_server_a-CCassetsCore.Tpo cc/.deps/libbitcoin_server_a-CCassetsCore.Po
libtool: compile:  /home/alien/komodo/depends/x86_64-unknown-linux-gnu/share/../native/bin/ccache g++ -m64 -std=c++11 -DHAVE_CONFIG_H -I. -I../src/config -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -I./obj -I./secp256k1/include -I./cryptoconditions/include -DBUILD_BITCOIN_INTERNAL -I/home/alien/komodo/depends/x86_64-unknown-linux-gnu/share/../include/libsnark -I/home/alien/komodo/depends/x86_64-unknown-linux-gnu/share/../include/ -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -Wformat -Wformat-security -Wstack-protector -fstack-protector-all -Werror -pipe -O1 -g -fopenmp -fwrapv -fno-strict-aliasing -Wno-builtin-declaration-mismatch -MT crypto/libzcashconsensus_la-equihash.lo -MD -MP -MF crypto/.deps/libzcashconsensus_la-equihash.Tpo -c crypto/equihash.cpp  -fPIC -DPIC -o crypto/libzcashconsensus_la-equihash.o >/dev/null 2>&1
mv -f crypto/.deps/libzcashconsensus_la-equihash.Tpo crypto/.deps/libzcashconsensus_la-equihash.Plo
```

[24-Jul-18 08:10 PM] jl777c#5810
@Alright not sure what you mean

[24-Jul-18 08:10 PM] SHossain#0007
```
mv -f cc/.deps/libbitcoin_server_a-CCutils.Tpo cc/.deps/libbitcoin_server_a-CCutils.Po
mv -f wallet/.deps/libbitcoin_wallet_a-walletdb.Tpo wallet/.deps/libbitcoin_wallet_a-walletdb.Po
mv -f cc/.deps/libbitcoin_server_a-CCtx.Tpo cc/.deps/libbitcoin_server_a-CCtx.Po
mv -f cc/.deps/libbitcoin_server_a-assets.Tpo cc/.deps/libbitcoin_server_a-assets.Po
mv -f cc/.deps/libbitcoin_server_a-rewards.Tpo cc/.deps/libbitcoin_server_a-rewards.Po
mv -f cc/.deps/libbitcoin_server_a-faucet.Tpo cc/.deps/libbitcoin_server_a-faucet.Po
mv -f cc/.deps/libbitcoin_server_a-betprotocol.Tpo cc/.deps/libbitcoin_server_a-betprotocol.Po
mv -f wallet/.deps/libbitcoin_wallet_a-rpcwallet.Tpo wallet/.deps/libbitcoin_wallet_a-rpcwallet.Po
mv -f wallet/.deps/libbitcoin_wallet_a-wallet.Tpo wallet/.deps/libbitcoin_wallet_a-wallet.Po
make[2]: Leaving directory '/home/alien/komodo/src'
Makefile:4406: recipe for target 'all-recursive' failed
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory '/home/alien/komodo/src'
Makefile:659: recipe for target 'all-recursive' failed
```

[24-Jul-18 08:10 PM] Alright#0419
I tried bidfill multiple times yesterday, couldn't get it to work

[24-Jul-18 08:12 PM] siu - Chainmakers#3920
/komodo-cli -ac_name=ATEST tokenbalance c5bbc34e6517c483afc910a3b0585c40da5c09b7c5d2d9757c5c5075e2d41b59
{
  "result": "success",
  "CCaddress": "RQymbXA8FfWw2AaHv7oC8JRKo9W5HkFVMm",
  "tokenid": "c5bbc34e6517c483afc910a3b0585c40da5c09b7c5d2d9757c5c5075e2d41b59",
  "balance": 1000000000
}

[24-Jul-18 08:13 PM] jl777c#5810
I did fix some things, not sure how many hours ago. but I really cant fix bugs without details

[24-Jul-18 08:13 PM] jl777c#5810
the mind reading api isnt working very well anymore

[24-Jul-18 08:13 PM] Alright#0419
what details do you need. I gave you the errors I was getting, didn't I?

[24-Jul-18 08:13 PM] Alright#0419
@siu - Chainmakers do `tokenorders` then try to do `tokenfillbid` on the one that's there

[24-Jul-18 08:15 PM] SHossain#0007
Just a general guidance on reporting issues to jl777:
```
a) the specific chain parameters so I can connect to it
b) the EXACT rpc call and parameters you used
c) the most important! the raw tx generated
d) clear description of why you think it is a bug. for now you need to look at the raw tx details to make sure all vins are valid, signed and all vouts are sane.
e) do not post things like "i tried X and it didnt work" as that does not help at all at this stage. These are raw transaction level things and until everything works, things wont work at the higher level.
```

