==============================================================
Guild: Komodo
Channel: cc-dilithium
Topic: https://developers.komodoplatform.com/basic-docs/antara/antara-api/dilithium.html
Messages: 21
Range: before 05-Dec-19 12:00 AM
==============================================================

[03-Aug-19 01:10 PM] Seko#7408
Is Komodo interested in the domain dilithium.io?

[03-Aug-19 01:16 PM] jl777c#5810
at the right price

[03-Aug-19 01:29 PM] Seko#7408
Of course... 
If Komodo really uses it, I'd be honored. The domain stays in the family.

[03-Aug-19 01:31 PM] jl777c#5810
we wont have any resources for any website for it for a while, but when we do it would be a nice name to have

[03-Aug-19 01:40 PM] Seko#7408
That sounds good. There is a Dilithium Coin. 
dilithium.io I gladly hand over to Komodo at cost price (about 50 KMD). But the domain has to stay in the Komodo family. AuthCode can be requested from me by the responsible contact person.

[03-Aug-19 01:41 PM] Seko#7408
Please do not pass on to third parties. My wish is that the domain stays with Komodo. That's what I wanted to say.

[03-Aug-19 01:53 PM] jl777c#5810
yes of course. hang onto it until we have the need for it

{Reactions}
KMD 

[03-Aug-19 02:09 PM] Seko#7408
I have forwarded the domain to komodoplatform.com/dilithium-quantum-secure-blockchain/ . But I had to update the nameserver before. Let's wait for DNS caching,  then the domain will be forwarded.

{Reactions}
üëèüèº (3) 

[03-Aug-19 02:10 PM] Seko#7408
http://dilithium.io

{Embed}
Daniel
http://dilithium.io
Komodo Integrates Dilithium: A Quantum-Secure Digital Signature Scheme
Komodo is pleased to announce the creation of Dilithium, a quantum secure blockchain. This technology is available to all within the Komodo ecosystem.
https://komodoplatform.com/wp-content/uploads/2019/07/dilithium-quantum-resistant-blockchain.jpg

[03-Aug-19 02:13 PM] Seko#7408
It's already working. üòâ

{Reactions}
üöÄ 

[03-Aug-19 02:23 PM] jl777c#5810
thanks!

[30-Aug-19 11:20 AM] YanSidorov#2533
@Alright 
Hey, yet I'm here again with another question. Hope you do not mind)
In dilithium.c file comments say that Qsend currently uses Qvins though it is able to use regular vins. Is it like a to-be-implemented feature or just a side note?
I wonder if I get it right that it is potentially possible to get regular vins and produce a transaction with regular vouts but signed using both regular and dilithium signature
My interest here is that currently ElectrumX server kinda struggles with the dilithium-signed transactions (it appears to see and cache them, though I haven't been able to extract the information about the funds involved in any of the dilithium-based transfers). So I see two potential solutions here: either implement the dilithium transactions processing logic from the scratch myself or change those transactions format so that ElectrumX server would be able to process them.

[30-Aug-19 11:42 AM] jl777c#5810
both methods are used for signing currently, but the dilithium pubkey needs to be associated with a vin

[30-Aug-19 04:01 PM] Alright#0419
@YanSidorov what do you mean by "process them" exactly?

[30-Aug-19 04:02 PM] Alright#0419
do you need to be able to validate them or just pull data from them?

[30-Aug-19 04:02 PM] Alright#0419
if you can leave validation to the daemon, pulling data from them via electrum should be pretty straight forward

[02-Sep-19 09:04 AM] YanSidorov#2533
@Alright 
Pulling data is what i currently need
Yep, it seems to be straight forward and yet there are problems with that
Normally ElectrumX would index utxos based on their scriptPubKey (transformed into hashX) and then you would just use your address (turned into pubkey down the line) or pubkey to effectively get the utxos you need
However, with cryptoconditions payments it doesn't seem to be that way
Neither the scriptPubKey of utxo resembles the pubkey I used to register my handle, nor the cc address (received via cclibaddress command) is transformed into the pubkey I need (the one marking utxo)
I believe there is a more complex logic around cclib addressing and I couldn't wrap my head around how exactly do I associate those utxos with the cclib address

[02-Sep-19 10:03 AM] YanSidorov#2533
Alright, so after some digging I've figured out that the scriptPubKey asm value is always the same (even with the value in your docs), guess it's a dilithium identifier or something like that
Therefore, I believe, it would require to rework the electrumX logic to index utxos based on something other then the scriptPubKey asm value
And that makes my questions kinda irrelevant at this point)
Should you have any thoughts, I would be glad to hear them, of course

[02-Sep-19 10:04 AM] jl777c#5810
you would need to use the data in the opreturn

[02-Sep-19 10:43 AM] YanSidorov#2533
@jl777c 
Yeah, just got it from docs a moment ago
Thanks, will try to do that

[03-Nov-19 10:18 PM] Regnar#6164
```- Dilithium
  - Dilitium Quantum Security Article - [https://komodoplatform.com/dilithium-quantum-secure-blockchain/](https://komodoplatform.com/dilithium-quantum-secure-blockchain/)```

Hey all, if you have any proof of concepts, or built something cool for Dilithium CC, please let me know. The goal is to build out a list of concepts using CCs to help show other developers what is possible and add this to the Komodo docs page. TUIs are good too!

