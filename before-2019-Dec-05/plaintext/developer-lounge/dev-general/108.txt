==============================================================
Guild: Komodo
Channel: dev-general
Topic: A place for general developer talk ‚Äì for everyone! | Documentation https://developers.komodoplatform.com | MoreDev Docs - https://docs.komodoplatform.com | Mastering CryptoConditions - https://github.com/KomodoPlatform/Mastering_CryptoConditions
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[25-Jan-19 03:32 PM] dukeleto#7326
you can have the fuzzer call out to binaries

[25-Jan-19 03:32 PM] TonyL#3577
https://github.com/shellphish/fuzzer

{Embed}
https://github.com/shellphish/fuzzer
shellphish/fuzzer
A Python interface to AFL, allowing for easy injection of testcases and other functionality. - shellphish/fuzzer
https://avatars3.githubusercontent.com/u/12656269?s=400&v=4

[25-Jan-19 03:32 PM] dukeleto#7326
so your fuzzer would call signtransaction

[25-Jan-19 03:32 PM] TonyL#3577
Python AFL

[25-Jan-19 03:33 PM] dukeleto#7326
I highly highly highly recommend AFL as the best fuzzer

[25-Jan-19 03:33 PM] Alright#0419
signtransaction cannot sign CC vouts

[25-Jan-19 03:33 PM] Alright#0419
right now, it needs to edit the contract itself, rebuild the daemon, restart, test, repeat

[25-Jan-19 03:33 PM] dukeleto#7326
you can script all that into a fuzzer

[25-Jan-19 03:33 PM] dukeleto#7326
not convenient, but possible

[25-Jan-19 03:34 PM] Alright#0419
I've been trying to figure out how to create signed CC transactions without the daemon, but I have no idea where to even start

[25-Jan-19 03:34 PM] Alright#0419
best solution would be keep the daemon alive, have separate program shit out millions of malformed txs and submit them

[25-Jan-19 03:39 PM] dukeleto#7326
@Alright the fuzzer makes the malformed xtns

[25-Jan-19 03:39 PM] dukeleto#7326
you give it 1 valid xtn

[25-Jan-19 03:39 PM] dukeleto#7326
just make 1 valid signed xtn, then give that to fuzzer

[25-Jan-19 03:40 PM] Alright#0419
if you edit signed tx, it's no longer valid

[25-Jan-19 03:40 PM] Alright#0419
you need to give fuzzer unsigned, then have something else sign the result of fuzzer

[25-Jan-19 03:40 PM] Alright#0419
or try to sign it at least

[25-Jan-19 03:40 PM] dukeleto#7326
AFL supports calling out to other binaries, many fuzzers don't

[25-Jan-19 03:41 PM] dukeleto#7326
some people fuzz interactive programs and stuff like that

[25-Jan-19 03:42 PM] dukeleto#7326
this is a good resource for AFL: http://lcamtuf.coredump.cx/afl/

[25-Jan-19 03:43 PM] dukeleto#7326
google hired lcamtuf because he wrote AFL, iirc

[25-Jan-19 03:43 PM] Alright#0419
We need something that can build and sign CC transactions for this to be viable

[25-Jan-19 03:43 PM] dukeleto#7326
http://lcamtuf.coredump.cx/afl/technical_details.txt

[25-Jan-19 03:45 PM] jl777c#5810
maybe I can make a signrawtransactionCC rpc call

[25-Jan-19 03:51 PM] Alright#0419
would libcc.ccp have all the thing neccesary in it to create the unsigned tx or does it rely on things in the daemon?

[25-Jan-19 03:51 PM] TonyL#3577
CC SPV will be closer with such rpc call I wonder

[25-Jan-19 03:52 PM] Alright#0419
I assume it does rely on things in the daemon itself. Just trying to think how we can make a lightweight CC tx creator

[25-Jan-19 03:53 PM] jl777c#5810
it uses the CC part of the daemon

[25-Jan-19 03:53 PM] jl777c#5810
notably CCFinalizetx

[25-Jan-19 05:37 PM] dukeleto#7326
this new `getrpcinfo` RPC in btc master looks like it could be useful: https://github.com/bitcoin/bitcoin/pull/14982

{Embed}
https://github.com/bitcoin/bitcoin/pull/14982
rpc: Add getrpcinfo command by promag ¬∑ Pull Request #14982 ¬∑ bi...
The new getrpcinfo command exposes details of the RPC interface. The details can be configuration properties or runtime values/stats.
This can be particular useful to coordinate concurrent function...
https://avatars3.githubusercontent.com/u/3534524?s=400&v=4

[25-Jan-19 05:40 PM] ComputerGenie üë¥üèºüì¢#7004
So `getinfo` was too much like putting things in 1 place, but now `getrpcinfo` is a good idea to combine things? üôÑ

[26-Jan-19 02:17 AM] grewalsatinder#9653
With NXT someone made Twitter like app. It was good showcase of it's use. I guess we can make some projects just to showcase what kmd CC tech is capable.

[26-Jan-19 02:18 AM] grewalsatinder#9653
Once m done with kmdgo, I will attempt to do some useful and useless projects, just for the sake of learning

[26-Jan-19 02:18 AM] grewalsatinder#9653
And document my notes of what I learn

[26-Jan-19 02:18 AM] grewalsatinder#9653
That Must help 3rd party devs to see what's possible with KMD

[26-Jan-19 02:18 AM] grewalsatinder#9653
I no longer desire to make end user projects

[26-Jan-19 03:50 AM] grewalsatinder#9653
Mining APIs also added to kmdgo.
Adding Rawtransactions APIs now.

[26-Jan-19 03:50 AM] grewalsatinder#9653
I think Rawtransactions is the last of the set from base komodo RPC APIs

[26-Jan-19 03:50 AM] grewalsatinder#9653
after that will add and test faucet CC API in kmdgo üòÉ

[26-Jan-19 03:51 AM] grewalsatinder#9653
and I'm on my schedule to complete kmdgo by 31st Jan üòÉ

[26-Jan-19 03:51 AM] grewalsatinder#9653
https://github.com/satindergrewal/kmdgo

{Embed}
https://github.com/satindergrewal/kmdgo
satindergrewal/kmdgo
Go package for Komodo Platform API. Contribute to satindergrewal/kmdgo development by creating an account on GitHub.
https://avatars3.githubusercontent.com/u/12998093?s=400&v=4

{Reactions}
rum (2) 

[26-Jan-19 05:43 AM] go-pye#8007
Nice work @grewalsatinder ! So you need to have komodod running?

[26-Jan-19 10:12 AM] grewalsatinder#9653
yes @go-pye 
just run `komodod` and test the examples from examples directory.

[26-Jan-19 10:13 AM] grewalsatinder#9653
It also supports all Komodo Assetchains

[26-Jan-19 10:13 AM] grewalsatinder#9653
example is in ReadMe.md and `main.go`

[26-Jan-19 10:14 AM] grewalsatinder#9653
Later will make it work with CHIPS, or other external coins which are Bitcoin protocol specific.
not a priority right now.

[26-Jan-19 10:14 AM] grewalsatinder#9653
For now, I just want to complete adding the base APIs to it, and then one by one adding/testing each CC API set

[26-Jan-19 12:49 PM] grewalsatinder#9653
Added all `Rawtransactions` API set to kmdgo as well.

[26-Jan-19 12:50 PM] grewalsatinder#9653
only tested `Rawtransactions` API with dummy data, since I have been testing it all on a wallet with 0 funds.

[26-Jan-19 12:50 PM] grewalsatinder#9653
should work fine anyway

[26-Jan-19 12:51 PM] grewalsatinder#9653
if needs fixing, will fix them as I'll create apps using kmdgo

[26-Jan-19 01:13 PM] grewalsatinder#9653
@SHossain which assetchain should I use to test API for `faucet` ?

[26-Jan-19 01:13 PM] grewalsatinder#9653
Create a new one or just use existing?

[26-Jan-19 01:14 PM] SHossain#0007
you can use KMDICE

[26-Jan-19 01:14 PM] SHossain#0007
or create a new chain

[26-Jan-19 01:14 PM] SHossain#0007
also TXSCLCC

[26-Jan-19 01:14 PM] grewalsatinder#9653
what's the status of KMD Labs ?

[26-Jan-19 01:15 PM] dukeleto#7326
@grewalsatinder REGTEST

[26-Jan-19 01:16 PM] dukeleto#7326
https://github.com/jl777/komodo/blob/master/qa/rpc-tests/cryptoconditions.py is a good example

{Embed}
https://github.com/jl777/komodo/blob/master/qa/rpc-tests/cryptoconditions.py
jl777/komodo
Komodo. Contribute to jl777/komodo development by creating an account on GitHub.
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[26-Jan-19 01:16 PM] ComputerGenie üë¥üèºüì¢#7004
It's an ecosystem within an ecosystem, @grewalsatinder, so that's a broad question

[26-Jan-19 01:16 PM] grewalsatinder#9653
May I have the assetchain command ? üôÇ

[26-Jan-19 01:16 PM] grewalsatinder#9653
@dukeleto

[26-Jan-19 01:16 PM] dukeleto#7326
Use The Source, Luke

[26-Jan-19 01:16 PM] dukeleto#7326
i spawn from Python

[26-Jan-19 01:17 PM] grewalsatinder#9653
Don't want to learn python to have assetchain command.

[26-Jan-19 01:17 PM] grewalsatinder#9653
@SHossain  please give me command of `TXSCLCC`

[26-Jan-19 01:18 PM] dukeleto#7326
`komodod -datadir=/var/folders/k0/s6fw3wld56j9bx2h_kfvp_x80bj2wq/T/testhTl1UY/node0 -keypool=1 -discover=0 -rest -ac_name=REGTEST -conf=/var/folders/k0/s6fw3wld56j9bx2h_kfvp_x80bj2wq/T/testhTl1UY/node0/REGTEST.conf -port=64367 -rpcport=64368 -regtest -addressindex=1 -spentindex=1 -ac_supply=5555555 -ac_reward=10000000000000 -ac_cc=2 -whitelist=127.0.0.1 -debug --daemon -rpcuser=rt -rpcpassword=rt`

[26-Jan-19 01:18 PM] dukeleto#7326
you are welcome

[26-Jan-19 01:18 PM] SHossain#0007
@grewalsatinder just a min please

[26-Jan-19 01:18 PM] grewalsatinder#9653
Thanks @dukeleto

[26-Jan-19 01:18 PM] SHossain#0007
```
./komodod -pubkey=$pubkey -ac_name=TXSCLCC -ac_supply=0 -ac_reward=2500000000 -ac_halving=210000 -ac_cc=2 -addressindex=1 -spentindex=1 -addnode=54.36.126.42 -addnode=94.130.224.11 &
```

[26-Jan-19 01:18 PM] grewalsatinder#9653
thanks @SHossain üëç

[26-Jan-19 01:18 PM] SHossain#0007
mine a block with 1 CPU thread and you will enough coin to test

[26-Jan-19 01:18 PM] SHossain#0007
very easy mining

[26-Jan-19 01:19 PM] grewalsatinder#9653
yep, that's what I'm gonna attempt

[26-Jan-19 01:19 PM] SHossain#0007
this chain is also secured by dPoW

[26-Jan-19 01:42 PM] Lumbi#8378
anyone know how to get the proper "start date" information (rather than "invalid date") to show in the block explorer? https://imgur.com/a/eQsEGcZ

{Embed}
https://imgur.com/a/eQsEGcZ
https://i.imgur.com/S4Z8lM2h.jpg

[26-Jan-19 01:42 PM] Lumbi#8378
https://explorer.lumberscout.io/status

[26-Jan-19 02:16 PM] dukeleto#7326
set a valid unix timestamp

[26-Jan-19 02:17 PM] dukeleto#7326
https://github.com/MyHush/insight-api-hush/commit/ec695ad1bb162c014d467f3b8abb112dc772e04c

{Embed}
https://github.com/MyHush/insight-api-hush/commit/ec695ad1bb162c014d467f3b8abb112dc772e04c
Merge pull request #9 from OleksandrBlack/patch-2 ¬∑ MyHush/insigh...
removed the duplicate, fix syntax error.
https://avatars3.githubusercontent.com/u/30298?s=200&v=4

{Reactions}
üëç 

[26-Jan-19 03:05 PM] dukeleto#7326
I am dealing with some weird bugs, and I need to brain dump in here to clarify what is going on, and maybe get some help from other intrepid adventurers

[26-Jan-19 03:06 PM] dukeleto#7326
i am writing regtests, in Python, for RPCs which take the minconf parameter (many)

[26-Jan-19 03:08 PM] dukeleto#7326
using methods that i used in cryptoconditions.py, things seem to work as they should, where confirmations are held at 1 until a block is notarized. when NetworkID=="regtest", we simulate dpow by making every 7th block notarized

[26-Jan-19 03:08 PM] dukeleto#7326
existing dpowconfs tests rely on that in Hush, and work reliably

[26-Jan-19 03:11 PM] dukeleto#7326
so i am converting these to the KMD test suite, which seems to be gravy at first

[26-Jan-19 03:11 PM] dukeleto#7326
but then I am seeing non-deterministic failing tests

[26-Jan-19 03:12 PM] dukeleto#7326
my tests check for an exact number of confirmations, such "make sure that at block X the xtn Y has exactly Z confirmations"

[26-Jan-19 03:13 PM] dukeleto#7326
this is how I can test if dpowconfs+minconfs (which I call dpowminconfs) is working correctly

[26-Jan-19 03:14 PM] dukeleto#7326
it seems to be a timing/race condition. The notarization DB is lagging behind the rest of the system, so sometimes my tests say the block is not notarized (hence changing the dpowconfs), when in reality, it is.

[26-Jan-19 03:17 PM] dukeleto#7326
This may be "normal" behavior, and it just doesn't happen in Hush because the internals of Hush are only keeping track of notarization data for one coin. The internals of KMD have more code to handle accessing the notarization data for all AC's, which I am guessing slows it down enough for regtests to sometimes fail, because the RPCs in my tests run before the notarization data is fully updated

[26-Jan-19 03:21 PM] dukeleto#7326
https://github.com/jl777/komodo/compare/jl777...letolabs:dpowminconfs?expand=1

{Embed}
https://github.com/jl777/komodo/compare/jl777...letolabs:dpowminconfs?expand=1
jl777/komodo
Komodo. Contribute to jl777/komodo development by creating an account on GitHub.
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[26-Jan-19 03:21 PM] dukeleto#7326
if you choose the `jl777` branch as base, it will show the diff correctly

[26-Jan-19 03:22 PM] dukeleto#7326
silly github doesn't put that in a url param, so you can't specify a base branch in a shared URL

[26-Jan-19 03:53 PM] dukeleto#7326
there are various ways to hack/fix this issue, and I am wondering which is "best"

[26-Jan-19 03:57 PM] ComputerGenie üë¥üèºüì¢#7004
`git clone https://github.com/jl777/komodo -b jl777` üòâ

[26-Jan-19 04:04 PM] dukeleto#7326
this is the test file I am working on: https://github.com/letolabs/komodo/blob/dpowminconfs/qa/rpc-tests/dpowconfs.py

{Embed}
https://github.com/letolabs/komodo/blob/dpowminconfs/qa/rpc-tests/dpowconfs.py
letolabs/komodo
Komodo. Contribute to letolabs/komodo development by creating an account on GitHub.
https://avatars0.githubusercontent.com/u/648647?s=400&v=4

[26-Jan-19 04:09 PM] dukeleto#7326
I am currently changing my tests to just check for proper notarized/not-notarized ( confs > 1 ), but if somebody can think of a way to test the exact number of confs, reliably, I would love to hear

[26-Jan-19 04:14 PM] ComputerGenie üë¥üèºüì¢#7004
so the "sticking point" is when you include notarized and not just raw confs, yes?

[26-Jan-19 04:20 PM] dukeleto#7326
my tests try to verify that when using minconf > 1 in an RPC, it only returns notarized xtns

[26-Jan-19 04:20 PM] dukeleto#7326
my code changes do the default behavior if minconf=1, and use dpowconfs if minconf > 1

