==============================================================
Guild: Komodo
Channel: kmdice
Topic: ./komodod -ac_name=KMDICE -ac_supply=10500000 -ac_reward=2500000000 -ac_halving=210000 -ac_cc=2 -addressindex=1 -spentindex=1 -addnode=144.76.217.232 &
https://kmdice.pool-mining.xyz/ <- pool
https://pool.forkwitch.com/  <- another pool
https://minerpond.com <- another pool
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[29-Oct-18 04:05 AM] blackjok3r#3181
Well it turns out my *fix* all it was doing was skipping a check that was causing the fork...

[29-Oct-18 04:05 AM] blackjok3r#3181
I think I found a better solution

[29-Oct-18 05:25 AM] Dr Debt#0891
Pool info for mining?

[29-Oct-18 05:52 AM] blackjok3r#3181
Please use a pool that mines transactions... dont mine onf forkwitch

[29-Oct-18 08:08 AM] blackjok3r#3181
I think I got this working jsut about as good as we will get.

[29-Oct-18 09:51 AM] jl777c#5810
pull request?

[29-Oct-18 09:55 AM] benohanlon#1119
@blackjok3r what's best pool to mine from?

[29-Oct-18 09:57 AM] blackjok3r#3181
Not yet

[29-Oct-18 09:57 AM] blackjok3r#3181
I think its close to working

[29-Oct-18 09:58 AM] blackjok3r#3181
I cannot work out how to fix it properly

[29-Oct-18 09:58 AM] blackjok3r#3181
The issue is that myGetTransaction just randonly and only a very very small percentage of the time, does not return a tx when it in fact does exist.

[29-Oct-18 09:59 AM] blackjok3r#3181
To get around this, I have changed the utxo selection everywhere to random loops

[29-Oct-18 09:59 AM] blackjok3r#3181
and if that check fails, i just skip it and any code that segfaults later because it was skipped

[29-Oct-18 09:59 AM] blackjok3r#3181
this stops the node going on a fork and lets it keep betting, but I have no idea what the rammifications are...

[29-Oct-18 10:00 AM] blackjok3r#3181
The amin issue stil seems to be the main pool, not actually minign transactions... Someone needs to either DDoS htat pool down until they fix it, or people need to stop mining there.

[29-Oct-18 10:02 AM] blackjok3r#3181
Also if there was a way to call CC_EVAL during processing blocks, where it ignores mempool tx's that would likely fix the underlying cause also.

[29-Oct-18 10:03 AM] blackjok3r#3181
It currently some how thinks a mempool tx invalidets a received block, which is very backwards lol

[29-Oct-18 10:09 AM] jl777c#5810
whether the tx are being mined or not should not affect the consensus bug. the problem with doing CC eval for the acceptmempool tx is that it will reject valid tx when dependent ones arrive out of order

[29-Oct-18 10:09 AM] blackjok3r#3181
yes. When I first started looking at it I was just going to try and add a boolean to CC_EVAL where it was called in connect block, but it does not work like that

[29-Oct-18 10:09 AM] jl777c#5810
the CC eval happens on accept to mempool and also on block validation

[29-Oct-18 10:10 AM] blackjok3r#3181
issue seems to only occur when you are betting

[29-Oct-18 10:10 AM] blackjok3r#3181
and the more bets you can amke on a single node te more likely it is to happen.

[29-Oct-18 10:10 AM] blackjok3r#3181
your local txs in mempool make the received block invalid

[29-Oct-18 10:10 AM] jl777c#5810
i dont see how that can happen

[29-Oct-18 10:11 AM] jl777c#5810
oh, wait

[29-Oct-18 10:11 AM] blackjok3r#3181
the onyl way to let the block connect is to skip the Unconformed TX call, or at least dont return a fail when it fails

[29-Oct-18 10:11 AM] blackjok3r#3181
my fix yesterday was that by accident...

[29-Oct-18 10:11 AM] blackjok3r#3181
chain seems to sync and doesnt fork so maybe it doesnt matter

[29-Oct-18 10:12 AM] jl777c#5810
on validating a block, all the tx in the block are put in to the mempool to remove any order dependent validation requirements

[29-Oct-18 10:12 AM] jl777c#5810
but if in the mempool there are already some conflicting tx, it wouldnt be able to put some that are in the block into the mempool!

[29-Oct-18 10:12 AM] blackjok3r#3181
this makes sense as its random txs and never the same ones.. they just disappear

[29-Oct-18 10:12 AM] blackjok3r#3181
requiring resync to get them back

[29-Oct-18 10:13 AM] jl777c#5810
so we need to remove from the mempool any conflicting tx to the one coming from the block

[29-Oct-18 10:13 AM] jl777c#5810
no wonder it is hard to fix

[29-Oct-18 10:13 AM] jl777c#5810
this one is very hard to fix

[29-Oct-18 10:13 AM] blackjok3r#3181
this is been the most annoying thing ive ever tried to fix

[29-Oct-18 10:13 AM] blackjok3r#3181
It seeems to work, then just braks again... very random

[29-Oct-18 10:13 AM] jl777c#5810
yes the local mempool could prevent the mined block from being mined

[29-Oct-18 10:14 AM] jl777c#5810
i mean confirmed

[29-Oct-18 10:14 AM] blackjok3r#3181
thats what happens yes

[29-Oct-18 10:14 AM] jl777c#5810
and then it ends up with tx in the mempool that are now orphaned, but the local node wont see that as it rejects the block that contradicts it

[29-Oct-18 10:14 AM] jl777c#5810
aha!

[29-Oct-18 10:15 AM] jl777c#5810
so now we understand the causal factor for all the strange behavior!!

[29-Oct-18 10:15 AM] jl777c#5810
in main.cpp there is a loop adding to the mempool in block validation

[29-Oct-18 10:15 AM] jl777c#5810
it actually does it iteratively as the tx in the block can be in any order

[29-Oct-18 10:16 AM] jl777c#5810
ok, a quick test idea!

[29-Oct-18 10:16 AM] jl777c#5810
before that loop, just clear the local mempool entirely

[29-Oct-18 10:16 AM] jl777c#5810
then there cant be anything conflicting in the mempool, the block confirms, node will not go on a fork or get stuck

[29-Oct-18 10:17 AM] blackjok3r#3181
ok sounds like a good idea, and probalbly wont cause anything bad either

[29-Oct-18 10:18 AM] blackjok3r#3181
do you want PR of what I have now ?

[29-Oct-18 10:18 AM] blackjok3r#3181
I have 2 nodes betting constantly for about an hour with no crash

[29-Oct-18 10:18 AM] blackjok3r#3181
but not sure what happens with more nodes

[29-Oct-18 10:19 AM] jl777c#5810
if ( ASSETCHAINS_CC != 0 ) // CC contracts might refer to transactions in the current block, from a CC spend within the same block and out of order
4246 main.cpp, inside that if , clear the mempool before it does the loop

[29-Oct-18 10:19 AM] jl777c#5810
your method of randomly selecting utxo is a workaround, it reduces the chance from happening, but doesnt prevent things

[29-Oct-18 10:20 AM] jl777c#5810
i think just adding the clearmempool might just stabilize things a lot as without it, the local mempool will cause properly mined blocks to be rejected

[29-Oct-18 10:20 AM] blackjok3r#3181
yes, it helps, I think that will be needed aswell though.. as once more than 2-3 people bet no bets work

[29-Oct-18 10:20 AM] blackjok3r#3181
as they all use the same entropy

[29-Oct-18 10:20 AM] blackjok3r#3181
the contract is over 15k entropy now

[29-Oct-18 10:20 AM] blackjok3r#3181
very low chance of collision randomly choosing one

[29-Oct-18 10:20 AM] jl777c#5810
ok, then yes we do need to randomly choose

[29-Oct-18 10:21 AM] jl777c#5810
and your prior fix of GetBlock, does it deal with orphaned blocks?

[29-Oct-18 10:21 AM] jl777c#5810
and why not to use CCduration

[29-Oct-18 10:21 AM] blackjok3r#3181
cool... I wil remove the random choose fro local wallet though, that will cause peopleissues, just did that so i could bet faster.

[29-Oct-18 10:21 AM] blackjok3r#3181
Getblcok didnt do anything

[29-Oct-18 10:21 AM] jl777c#5810
ok, so that can be removed?

[29-Oct-18 10:21 AM] blackjok3r#3181
it wsa out order

[29-Oct-18 10:21 AM] jl777c#5810
lets remove things that didnt help

[29-Oct-18 10:22 AM] blackjok3r#3181
and meant that fi the tx wasnt found, it just kept going like it was

[29-Oct-18 10:22 AM] blackjok3r#3181
yes I have a branch I am doing that on right now

[29-Oct-18 10:22 AM] blackjok3r#3181
will PR to fix what I did yesteray soon

[29-Oct-18 10:23 AM] jl777c#5810
good. i am happy about this realization. very tricky that local mempool can cause a valid block to be invalid

[29-Oct-18 10:23 AM] jl777c#5810
but this also means that the mempool will be cleared with each block....

[29-Oct-18 10:23 AM] blackjok3r#3181
Yes well I hope thats exactly what it is, all things point to that.. will do tick to clear and retest

[29-Oct-18 10:24 AM] blackjok3r#3181
for a single node to test if it fixes it

[29-Oct-18 10:24 AM] blackjok3r#3181
its is ok. but caannot be used on all nodes

[29-Oct-18 10:24 AM] jl777c#5810
lets put a check for KMDICE for this drastic mempool clearing

[29-Oct-18 10:24 AM] jl777c#5810
oh, actually better.

[29-Oct-18 10:24 AM] jl777c#5810
make a copy of the mempool

[29-Oct-18 10:24 AM] jl777c#5810
reset the mempool

[29-Oct-18 10:24 AM] blackjok3r#3181
validate the block then send it again?

[29-Oct-18 10:24 AM] jl777c#5810
and at the end of the loop, try to add back all the saved mempool tx

[29-Oct-18 10:25 AM] blackjok3r#3181
will do..

[29-Oct-18 10:25 AM] jl777c#5810
this will end up removing the conflicting local mempool tx from the mempool!

[29-Oct-18 10:26 AM] blackjok3r#3181
yes this will cause other issues with dice app, where a tx it thinks was sent disapears, but at least the chain will work.

[29-Oct-18 10:26 AM] blackjok3r#3181
should be a way of detecting that

[29-Oct-18 10:26 AM] jl777c#5810
tx do get orphaned, but as long as only the truly orphaned tx disappear

[29-Oct-18 10:26 AM] jl777c#5810
and yes, this can be detected locally

{Reactions}
👌 

[29-Oct-18 10:27 AM] blackjok3r#3181
I think my dice loop script already handles such conditions, as it resends raw transaction until confirmed.. and if the tx becomes invalid, it would fail to send triggering error

[29-Oct-18 12:37 PM] siu - Chainmakers#3920
hi guys, whats up?

[29-Oct-18 12:39 PM] jl777c#5810
we think we figured out the cause of all the wonkiness

[29-Oct-18 12:39 PM] jl777c#5810
a likely solution was defined

[29-Oct-18 12:47 PM] siu - Chainmakers#3920
ok, but not yet available in the main repo?

[29-Oct-18 12:50 PM] jl777c#5810
not yet

[29-Oct-18 12:51 PM] siu - Chainmakers#3920
ok

[29-Oct-18 12:51 PM] jl777c#5810
i just merged a more stable version but not with the real fix

[29-Oct-18 12:52 PM] ComputerGenie 👴🏼📢#7004
fsm branch?

[29-Oct-18 12:53 PM] siu - Chainmakers#3920
ok, will test

[29-Oct-18 12:53 PM] siu - Chainmakers#3920
btw, i just tested the `coinsupply` rpc call in KMD and it didnt work

[29-Oct-18 12:53 PM] siu - Chainmakers#3920
just hanged

[29-Oct-18 12:54 PM] SHossain#0007
@siu - Chainmakers the coinsupply call works better if you increase the blocks step by step. start with 100000, then 200000... until the last blocks

