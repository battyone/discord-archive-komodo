AuthorID;Author;Date;Content;Attachments;Reactions;
"352488299077566475";"zawy#5864";"05-Aug-19 03:34 PM";"64 new";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:34 PM";"```if ( ts[1]-ts[W] < T*numerator/denominator ) { ```";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:34 PM";"so all j-W to j+W";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:34 PM";"fixing";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:34 PM";"yes";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:35 PM";"93:";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:35 PM";"```if ( ts[i-1]-ts[j+W] > (ii+W)*T ) { break; } ```";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:36 PM";"so i+1 goes to i-1";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:36 PM";"yes";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:37 PM";"98 has a missing (";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:37 PM";"i can probably guess where to put it, but best to avoid such guessing";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:38 PM";"maybe after (ts[0]-ts[W])) there is an extra ), which would make this error too";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:38 PM";"delete last )";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:39 PM";"good i asked, that would have changed things";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:39 PM";"I beleive I have it where there's no chance of overflow";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:41 PM";"i see line 77 changed, but it is ```    for ( int j=past-1; j>= 1; j--) {``` instead of ```    for ( int j=past+W-1; j>=W; j--) {```";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:43 PM";"I changed that?  It is supposed to be 1";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:43 PM";"oh sorry, we got rid of the -W, my bad fixing my side";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:45 PM";"i will need to change the code for the actual bnTarget calcs, but i will make it isomorphic to your code and it should be easy to see they are equivalent";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:47 PM";"79 and 83 need fixing";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:47 PM";"```    for ( int i = j-1; i >= 0; i-- ) {
                ...
                if ( ts[i]-ts[j+W] > (ii+W)*T ) { break; } 
```";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:48 PM";"crap, ii needs reseting to zero somewhere";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:49 PM";"```
        if ( ts[j]-ts[j+W] < T*numerator/denominator ) {
            ii=0;
            for ( int i = j-1; i >= 0; i-- ) {
                ii++;
```";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:49 PM";"right before the for i=j-1 loop";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:49 PM";"yes, thought so";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:49 PM";"maybe move declaration to there";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:50 PM";"and i double-declared i and j";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:50 PM";"fixed it";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:50 PM";"dont worry about such details";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:51 PM";"i need to put fixes back in my ""repository""";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:51 PM";"can you check https://github.com/jl777/komodo/blob/nSPV/src/pow.cpp##L97
make sure i got all the fixes";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:52 PM";"i had to change integers back to int32_t as you cant use arith_uint256 as array index, but the code should still be something you can read?";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:54 PM";"125, remove the -1";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:55 PM";"that's all i see";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 03:56 PM";"I need to generalize the comments away from N=3";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 03:58 PM";"great! i will start converting the bnTarget changing so it compiles";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:08 PM";"@zawy updated RT_CST_RST with the bnTarget calcs so it compiles. assuming it is as you want, i can next integrated it into the nBits calculation function";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:29 PM";"testing ZAWY16 with 15x attack first. it will need 64 blocks before it kicks in";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:30 PM";"i avoided the less than full dataset issues by not starting it until there is full data";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:30 PM";"It seems like converting K all the time is a lot more inefficient than simply delcaring it as arith256";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:31 PM";"Is there a problem with using max()?";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:31 PM";"I assume it is just an if statement to the compiler";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:33 PM";"yes, i've been burned before by a MAX that was a macro which ended up behaving differently, since it boils down to an if, simpler to use and if and be 100% sure what the code is doing";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:33 PM";"only one usage of K could have been saved, the other time it is scalar multiplied and actually at compile time as K is a fixed value";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:34 PM";"maybe i should #define K to 1000000, then the compiler can optimize the arith_uint256 conversion";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:35 PM";"I see BTG code does not worry about multiplying things like arith256 and int64.  It seems like there should not be an issue with mixing int types";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:35 PM";"ooops. it crashed. debugging";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:37 PM";"if ( altK < K )  should be >";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:38 PM";"but you wanted max,so if altK ends up less than 1 million, it should be set to 1 million?";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:38 PM";"i messed up";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:39 PM";"wait";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:39 PM";"right, i should have said min.  if alt k makes it harder, (lower) use altk,   else use k";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:42 PM";"fixed";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:46 PM";"found and fixed the crash";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:50 PM";"will mine with 1 core till there is 64 blocks and then ramp to 15x, i assume this logic will handle that case too?";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:54 PM";"yes, it should start trigging on 6x or less, but 15x is needed to kind of start see flex more.  the 1x, 10x, 100x, and 1000x cases shoudl be tested, and that will show pretty much how the 1e6 case will go";"";"";
"412323938782150658";"SHossain#0007";"05-Aug-19 04:54 PM";"i can start pool and a Z9 Mini whenever needed";"";"";
"412323938782150658";"SHossain#0007";"05-Aug-19 04:54 PM";"just waiting for a GO signal";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:55 PM";"let it go at 1x for awhile to cofirm it's not jumping aruond much.   Then 3x to see if it's too whacky for mild cases";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:55 PM";"I'm more worried about 2x to 10x cases than anything";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 04:57 PM";"or 1x to 5x";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 04:57 PM";"ok, i will test the <15x cases to make sure it is working as expected, did that 20 times yesterday so i know what a good test run should be like";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:00 PM";"single core blazed through the blocks, already past 64. seeing altK, but diff is not really changing much at 1 core, though it is stuck on 68 for a 2 minutes now";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:01 PM";"since it has 64 fast timestamps, i would imagine it is boosting the diff quite high. altK of around 100k";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:01 PM";"j is 33 and ii is 33, i also see 36 and 26";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:02 PM";"this seems like it stopped the ""attack"" 3 blocks after it ""started"" as the DAA only kicked in at height 64";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:03 PM";"exactly";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:03 PM";"4th block is when it kicks in";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:03 PM";"with altK values of about 100k, that is a 10x increase in diff?";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:03 PM";"now 200k altK";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:04 PM";"that's the bnTarget multiplier isn't it?  should be 100x decrease in diff";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:05 PM";"the single core will need the exponential to kick in to save it";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:05 PM";"oh, right 1e6 divisor";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:05 PM";"yes, 10x difficulty";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:05 PM";"and then the average block time will be much closer to what it should be";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:05 PM";"and that is exactly what happened";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:06 PM";"diff even went up very slightly 2.44 to 2.47";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:06 PM";"will the altK kick in for 50 more blocks?";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:07 PM";"No, the triggers can stop and you'll have difficulty driopping immediately back down to digi as before";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:08 PM";"yes, i see, only W deep";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:09 PM";"it finding blocks";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:09 PM";"No, it's active for as long as too many blocks have been issued....the triggers stop when emission rate is corrected";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:10 PM";"yes, that is what it is doing. so far working good. boost to 5x?";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:10 PM";"yes";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:10 PM";"no";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:10 PM";"try 2x for 30 minutes";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:10 PM";"it got 9 blocks in 11 minutes";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:11 PM";"oh, heck,  do 5x for 30 minuite";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:11 PM";"diff stable at 2.4 with 1 core.";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:12 PM";"ok boosting to 5x";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:12 PM";"ht 73 at 11 past";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:12 PM";"found 3 blocks pretty quickly";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:12 PM";"yeah, the triggers stopped and it's back to digi";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:13 PM";"oh, no, the 5x boost";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:13 PM";"triggers still going";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:13 PM";"triggers are still active when i = 0";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:14 PM";"i put a printout when it changes bnTarget";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:14 PM";"making diff 3x harder";"";"";
"455741312273219595";"jl777c#5810";"05-Aug-19 05:14 PM";"which is pretty accurate";"";"";
"352488299077566475";"zawy#5864";"05-Aug-19 05:14 PM";"I feel great that it looks like it will act like a precision machine";"";"";
