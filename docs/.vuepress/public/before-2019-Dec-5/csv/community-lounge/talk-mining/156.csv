AuthorID;Author;Date;Content;Attachments;Reactions;
"455741312273219595";"jl777c#5810";"07-Aug-19 02:18 PM";"i can encode the outer trigger in a separate bit from the loop trigger to make it easy to do this. it seems we can just scan from current height";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:18 PM";"this above logic is not what is happening now";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:19 PM";"it almost seems that if any fast sequence happened in the past window, it would trigger";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:19 PM";"first 0 block does not even go into j.  Block after first 0 goes to j.   After first 0, outer equation is not applied until inner loops stop.  after inner loop stops, outer must be triggered first";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:20 PM";"it is a mutually exclusive 3 states";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:20 PM";"digishield only, outer trigger opened, then a bunch of ii loops (starting next block if needed), until it is happy";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:21 PM";"D, D, D, O, I, I, I, D, ... where D digishield, O outertrigger, I ii loop";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:22 PM";"yes";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:22 PM";"it always needs to follow a sequence like that. maybe there are no I at all, if the first O did the job";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:22 PM";"ok, I will implement this tri-state logic";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:22 PM";"will take a bit to add encoding for the O vs I";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:23 PM";"you can allow for possibility of D O I I O but if I stops, I do not see how O will be able to trigger on next block";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:23 PM";"Because i stoping means last 3 were at least > 3xT";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:24 PM";"unless on that exact i block, a very big miner jumps on, then maybe O can trigger again";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:24 PM";"yes, i think once i make things mutually exclusive and following the state transitions, DOO might be theoretically possible, but extremely unlikely";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:24 PM";"DOIIIDOID type of sequences being more likely";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:25 PM";"no,  OO should not happen";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:25 PM";"O without I can happen";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:25 PM";"I is substantially more aggressive";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:25 PM";"so if OIO can happen, then OO could ( as far as the statemachine is concerned)";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:25 PM";"if the math prevents it, then even though it is legal state transition,it will never happen";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:26 PM";"O gives it 1 more chance to be an accident before increasing a lot....and for 2 more blocks into I it is not at the full potential if it was an accident";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:26 PM";"i am just saying what the legal states could be, ignoring the trigger mechanics";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:26 PM";"so if last block was a D, O is the only possibility";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:26 PM";"If can be coded for OO but I should overwrite the 2nd O";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:26 PM";"if the last block was O, then I or D are the only possibilities";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:27 PM";"yes";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:27 PM";"if last block is I, then I or D are the only possibilities";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:27 PM";"or is O possible, i guess O might be possible but wont due to math";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:27 PM";"again, it might be possible for oio, but seems very unlikely";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:28 PM";"and it is appropriate if it does";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:28 PM";"so allowing it seems good";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:28 PM";"i could prevent it at the state machine level, but it sounds like after I, all three can happen";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:28 PM";"this is all actually what I thought it was, and it might function like this if i replace -2 back to -1";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:29 PM";"maybe it does, but to me i cant figure out what it does by looking at the code.";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:29 PM";"let me code it so it does what you want in a way i can understand the code.";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:29 PM";"oh, yeah, the -2 messed things up";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:30 PM";"yeah, it needs you too so  at least 1 person understands it instead of 0 persons";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:30 PM";"ðŸ˜ƒ";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:31 PM";"I mean I understand what i want but you see it's been difficult to make the loops do it.  Our eyeballs look at past solvetiems and immiedately know where D needs to go....so all this is really copying what is so easy intuitively, but what no one so far has been able to incorporate into a DA";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:32 PM";"the code just needs to have whatever data it needs to allow it to be coded simply enough that anybody can understand what the code is doing, simple C";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:32 PM";"give me an hour for this, i think i know what needs to be done now";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:33 PM";"it's going to be hard for me to follow when you finish";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:34 PM";"no it wont!";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:34 PM";"lol";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:34 PM";"let me know if you dont follow it, if you cant, then it isnt simple enough";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:42 PM";"```            origtarget = bnTarget;
            past = 20;
            if ( zflags[0] == 0 )
            {
                bnTarget = RT_CST_RST_outer(height,pblock->nTime,bnTarget,ts,ct,1,2,3,past);
                if ( bnTarget < origtarget )
                    zawyflag = 2;
            }
            else
            {
                for (i=1; i<past; i++)
                    if ( (zflags[i] & 2) != 0 )
                        break;
                if ( i < past )
                {
                    bnTarget = RT_CST_RST_inner(height,pblock->nTime,bnTarget,ts,ct,1,2,3,past,i);
                    if ( bnTarget != origtarget )
                        zawyflag = 1;
                }
            }
```";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:42 PM";"above is what i think achieves the mutual exclusiveness. zflags[0] being 0 means last block was digishield, so we check to see if the outer trigger happened and if so mark it with a 2";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:43 PM";"if it is non-zero we scan to the past looking for the outer trigger and that is the block that came from this instance of the outer trigger";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:43 PM";"the RT_CST_RST_outer function is just the same if statement that is currently there";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:44 PM";"but not 100% sure what the RT_CST_RST_inner condition should be. we know when the outer was triggered, do we just see if the blocktimes from outer+W to now is > T ?";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:45 PM";"that would mean that the block emissions from the start of the blocks that initiated the trigger (W past the trigger block) to now is back to an average of T";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:46 PM";"that at least makes sense intuitively, but i see the trigger is based on a W block window. so maybe i need to scan all the blocks from when the outer trigger happened? but in that case it would never stop until the outer trigger goes beyond the past window";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:47 PM";"i will code the outer function first as that is clear";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:52 PM";"is there any reason the outer RST calc uses ct[0] and not digishield bnTarget for the current height";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:55 PM";"RSt needs to avoid using Digishiel'ds output";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:55 PM";"ok";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:55 PM";"it needs to figure the current hashrate on its own";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:56 PM";"well, especially since it needs RST's previous output without digisheild diluting it for the current block";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:56 PM";"ok, so now i just need to know the keep alive trigger for the inner RST";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:57 PM";"given outer trigger happened at outeri";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:57 PM";"is it if ( (ts[0] - ts[outeri+W]) < (outeri+W) * T )";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:58 PM";"that would fit the ""block production is back to normal"" test";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:01 PM";"```arith_uint256 RT_CST_RST_outer(int32_t height,uint32_t nTime,arith_uint256 bnTarget,uint32_t *ts,arith_uint256 *ct,int32_t numerator,int32_t denominator,int32_t W,int32_t past)
{
    int64_t outerK;
    if ( (ts[0] - ts[W]) < (T * numerator)/denominator )
    {
        outerK = (K * (nTime-ts[0]) * (ts[0]-ts[W]) * denominator) / (numerator * (T * T));
        fprintf(stderr,""ht.%d initial outerK.%lld %d * %d * %d / %d\n"",height,(long long)outerK,(nTime-ts[0]),(ts[0]-ts[W]),denominator,numerator);
        if ( outerK < K )
        {
            bnTarget = ct[0] / arith_uint256(K);
            bnTarget *= arith_uint256(outerK);
        }
    }
    return(bnTarget);
}
```";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:01 PM";"outer function is basically copy/past from the oldRST function";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:01 PM";"```arith_uint256 RT_CST_RST_inner(int32_t height,uint32_t nTime,arith_uint256 bnTarget,uint32_t *ts,arith_uint256 *ct,int32_t numerator,int32_t denominator,int32_t W,int32_t past,int32_t outeri)
{
    int64_t innerK; int32_t i;
    if ( (ts[0] - ts[outeri+W]) < (outeri+W)*T )
    {
        bnTarget = ct[0];
        for (i=1; i<W; i++)
            bnTarget += ct[i];
        bnTarget /= arith_uint256(W * K);
        innerK = (K * (nTime-ts[0]) * (ts[0]-ts[W])) / (W * T * T);
        fprintf(stderr,""ht.%d made it to i == 0, innerK %lld (%d * %d) %u - %u W.%d\n"",height,(long long)innerK,(nTime-ts[0]),(ts[0]-ts[W]),ts[0],ts[W],W);
        bnTarget *= arith_uint256(innerK);
    }
    return(bnTarget);
}```";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:02 PM";"inner is the bnTarget calc function inside the test for normal block rate";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:11 PM";"i think it needs to use the sum of all targets to outeri+W";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:12 PM";"i if   sum3 < T/2
o if prev block was i or o and if  sum (snice the very first block that triggered i)  is > N * T where N is blocks back to that i....which keeps it on track
o overwrites i.  it does not overwite initial i because the block before that was D";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:14 PM";"```    if ( (ts[0] - ts[outeri+W]) < (outeri+W)*T || (ts[0] - ts[W]) < T/2 )```";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:14 PM";"using numerator/denominator to get T/2";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:15 PM";"so if either the most recent W blocks are fast, or if it is still not back to a block per minute since the outer trigger, the inner keeps on activating";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:15 PM";"we need both that the most recent 3 are > T/2 and cumulative blocks since outeri being T";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:16 PM";"but shouldnt it recoup from outeri+W?";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:16 PM";"otherwise it wont make up the deficit of the three blocks that triggered this";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:17 PM";"No, i is not either sum3 <T/2    OR     sumT < T * N, but it is if  previous block was i or o AND sumT < T * N";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:17 PM";"the inner function is only called if the prior block was O or I";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:18 PM";"that sum3 < T/2 was in my inner function, but only as a hard way of detecting if all previous blocks back to an original i were an o";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:18 PM";"then my original if was correct";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:18 PM";"``` if ( (ts[0] - ts[outeri+W]) < (outeri+W)*T )```";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:19 PM";"that makes sure solvetime average is >= T since the W blocks that trigger the outer";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:19 PM";"as long as outeri is  referring to the first block in the sum3 trigger";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:19 PM";"I mean the block before that one";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:20 PM";"But you have the idea";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:20 PM";"outeri is when the outer was triggered, and outer triggers looking at W blocks, so it seems it is outeri + W is the start of the fast blocks";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:20 PM";"the actual bnTarget calc shouldnt just use ct[0] + ct[1] + ct[2] though";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:21 PM";"it might be 12 blocks of slowness, maybe do a min(W, outeri+W), ie calculate it both ways and use whichever is more difficult";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:27 PM";"The whole point is to use very small number....I originally was trying to jump based on on the previous block.  The point of using tipdiff and all the trouble of getting the targets correct is so that only 3 previous blocks are needed, which in normal DAs would be unthinkably fast, getting stuck too much";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:27 PM";"If this does not correct for 1E6 attacks in 10 blocks, I'll be confused";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:29 PM";"it should sdo this without triggernig exp()";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:29 PM";"yes, so using the min() of W and outeri+W based calc would seem to still use the most recent 3 most of the time as they will most likely be the most difficult, but covers the case that some luck based fluctuation makes it so the cumulative is more difficult";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:29 PM";"makes sense to me that if we want to be raising diff, to use the min()";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:29 PM";"code is updated";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:30 PM";"i is always exactly 6x more aggressive than o.";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:45 PM";"They might be combined into a single equation that will be more aggressive in the 2nd and 3rd blocks:  
```
nbT = avg(W ct) * avg(W st's) * current st *  denom/numer * (3, 2, 1, 1, 1, 1 ....)
```";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:45 PM";"more aggressive than curernt method, but same on 1st and 3rd blocks";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:47 PM";"Actually it's more like this:  
```
nbT = avg(W ct) * avg(W st's) * current st *  denom/numer / (1, 2, 3, ... W, W, W)
```";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 03:49 PM";"need to get the state transitions working. was easier to require a digishield block before allowing O";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:53 PM";"It seems like you still have to do the inner loop";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 03:53 PM";"And like I'm saying, that equation could be the i and o equations combined";"";"";
