AuthorID;Author;Date;Content;Attachments;Reactions;
"456226577798135808";"Deleted User#0000";"23-Nov-18 04:42 AM";"(but for the beginning, it will be fine.";"";"";
"456226577798135808";"Deleted User#0000";"23-Nov-18 04:43 AM";"Another thing about ERC, if we manage to handle em, it will be possible either to choose one or just to type the contract address user want to interact with. Some checks will be done, but at first, it will be the user s responsibility to check the contract is well written. (some parity stuff will also able to help the gui here, using functions that will return the validity of the contract or not).";"";"";
"456226577798135808";"Deleted User#0000";"23-Nov-18 04:46 AM";"Talked a little bit with french eth devs, and it seems adopting the behaviour of btc is not possible at all, speaking about transactions ant outputs.

For example in btc/zcash, I can wrap multiple tx for T, and make a big tx that uses many inputs and outputs... For Z, exactly the same, as z_sendmany allows me to have multiple destinations even if I only provide 1 source. 
For eth, it's quite different : 1 source : 1 dest, as they told me. There are some workarounds possible like sending to a contract that will autohandle the splitting, or just multisend manually.
The problem with the manual send will be about fees.";"";"";
"456226577798135808";"Deleted User#0000";"23-Nov-18 04:47 AM";"so I'll keep digging on this part. (it's not relevant in case of 0 fees at all, the only issue if if fees are implemented, as they will be very tiny values, is that not including em with a main transaction may end up as making em flagged as dust";"";"üëè (2)";
"456226577798135808";"Deleted User#0000";"23-Nov-18 10:55 PM";"okok... everything is ready, sendfiles are getting generated good, for both ERC and ETH... Now it's time to have a fun with web3's python engine üòÑ";"";"";
"456226577798135808";"Deleted User#0000";"23-Nov-18 10:55 PM";"sending part, act 1. :p";"";"";
"456226577798135808";"Deleted User#0000";"23-Nov-18 10:56 PM";"what does that mean? that mean that theorically ETH and ERC reach the state on auto mode until the raw creation, and give infos to the servers to just send";"";"";
"456226577798135808";"Deleted User#0000";"23-Nov-18 10:57 PM";"so if that part, the last block, is done, they ll be fully supported";"";"ü§û (1)";
"456226577798135808";"Deleted User#0000";"24-Nov-18 01:26 AM";"tx sent via script : https://ropsten.etherscan.io/tx/0xb857e4db5fc1f66c04df8d3d297150a0a4ae4de71d58dde01d73fff7e10d6d73";"";"";
"456226577798135808";"Deleted User#0000";"24-Nov-18 01:27 AM";"now I need to read extensively about gas :p";"";"";
"456226577798135808";"Deleted User#0000";"24-Nov-18 05:16 AM";"OK, latest update... : 

Manually, but... just launching the script was manual : 

https://ropsten.etherscan.io/address/0x74720eaf4b169d0ae42be4d148ebf53e3986a297";"";"";
"456226577798135808";"Deleted User#0000";"24-Nov-18 05:16 AM";"triple send done via script works for eth";"";"";
"456226577798135808";"Deleted User#0000";"24-Nov-18 05:16 AM";"that means... eth is supported for the beta üòÑ code cleaning next part but... It was a fight üòÑ";"";"";
"456226577798135808";"Deleted User#0000";"24-Nov-18 05:17 AM";"that leaves the last part : ERC ^^";"";"";
"456226577798135808";"Deleted User#0000";"24-Nov-18 05:18 AM";"time for a little break, 6 am. üòí";"";"";
"456226577798135808";"Deleted User#0000";"24-Nov-18 05:19 AM";"will read and check what misses me for erc, now eth is ok, it may technically just adding interaction with contract, I feel there's more pain incoming. ^^";"";"";
"430818734530101248";"KomodoWorld#8282";"24-Nov-18 07:18 AM";"great job";"";"";
"456226577798135808";"Deleted User#0000";"24-Nov-18 07:26 PM";"Forced break tomorrow I won t be here. Family time. Meeting on monday eve with adstrakt and maxijb. Hope we ll start connecting everything start of next week";"";"üëç (2)";
"430818734530101248";"KomodoWorld#8282";"25-Nov-18 02:08 PM";"If the bear last for long, I could convert the Kmd bounties in a shipment of ramen noodles üòß";"";"";
"456226577798135808";"Deleted User#0000";"25-Nov-18 02:46 PM";":'(";"";"";
"456226577798135808";"Deleted User#0000";"25-Nov-18 03:05 PM";"Btw we have to live with those markets. The thing is just to be patient and continue adding more and more stuff";"";"";
"456226577798135808";"Deleted User#0000";"26-Nov-18 12:53 AM";"Improved performance for info gathering on eth / erc. Unfortunately it s a pain to get specific data on parity without relying on external api like etherscan.

There is a way. But it would just be like developping our own API to get the specific info we need to check everything is all right. 
I think that s something that can be done afterwards as etherscan is worlwide used... but as I hate depending on external services I may even have found a guy that could code it for us on future release (even if I ll definetly try to implement it myself before cause I won t allow unknown code to be executed without checking any single character.)

I know gather perfectly the tx and any info needed on eth / for erc20. Former version took something like 4s to answer so it was definetly not possible.
Figured out a smartest way to implemenr concurrent running of scripts  that will totally eliminate any overlapping possibility.";"";"";
"456226577798135808";"Deleted User#0000";"26-Nov-18 12:55 AM";"Now will try to fight to get my latest personal objective. @artem.pikulin sent me a few scripts and I believe either one is a key for what I try to do or at least ha e very valuable info. Thanks again.";"";"";
"456226577798135808";"Deleted User#0000";"26-Nov-18 12:55 AM";"Round 1 ^^";"";"";
"456226577798135808";"Deleted User#0000";"26-Nov-18 12:57 AM";"(Btw bought and moved erc20 tokens for the first time and seeing mew s interface I just told myself that it may just act like a prefiller waiting for same info as if it was in cli. So that will help me understand the wtf fee I had to use)";"";"";
"456226577798135808";"Deleted User#0000";"26-Nov-18 12:57 AM";"And the global steps";"";"";
"456226577798135808";"Deleted User#0000";"27-Nov-18 01:14 AM";"had an extended conversation with an ETH dev that seems to be able to handle pretty much everything we should need now to get things really robust for ETH and ERC. As of today, ETH already works, but ERC20 is a pain to handle just because of this GAS issue. 
This guy has already developped an implementation of the ERC865, that fits exactly what we need to achieve to get any ERC integrated without needing to worry about those concerns. I believe he's good enough to even bridge parity / geth to allow us to have a custom API : That will allow us to theorically get rid of etherscan, or at least reduce external calls to the strict minimum.";"";"";
"456226577798135808";"Deleted User#0000";"27-Nov-18 01:15 AM";"He's ready to help us on this, we'll discuss details tomorrow, after our meeting.";"";"üëç (1)";
"365714438864633856";"dukeleto#7326";"27-Nov-18 11:41 PM";"i am actively working on address validation code";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 12:56 AM";"i have a prototype working for HUSH transparent  + Sprout zaddrs (it does not have sapling yet)";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 01:14 AM";"@jl777c i am writing address validation code, wondering about the validity of Sprout + Sapling zaddrs on KMD + other asset chains. At what point do sprout addresses become ""invalid"" ? Should we assume, for purposes of this project, that only Sapling zaddrs (not sprout) should be considered ""valid"" ?";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 01:15 AM";"also, since I hear OOT is not upgrading to Sapling, this makes our address validation code more complex";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 01:17 AM";"@Deleted User are we supporting new bech32 btc addresses and/or considering them valid?";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 01:52 AM";"We will have to support as mant coin as we can";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 01:53 AM";"Am vreaking all my sznding stuff. I don t like it. On high scale relying on alternate db is better than handling file";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 01:53 AM";"Guess a 2 day sprint will allow me to make things faster";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 01:55 AM";"I have basic support for validating these kinds of addresses: BTC, LTC, DASH, PIVX, HUSH, KMD (and all assetchains), ZEC";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:36 AM";"@Deleted User what I am asking about, is that certain kinds of addresses will be deprecated soon, and become invalid at some future block height (i.e. sprout zaddrs on some chains)";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:37 AM";"Hmm. We ll then have to handle this specifically for each coin via a flag";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:37 AM";"And I can imagine you can rely on this as a sort of parameter";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:37 AM";"why a flag?";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:38 AM";"Cause if you need to check both";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:38 AM";"at some block height,, some address types become invalid";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:38 AM";"But your script is based on chain queries ?";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:38 AM";"no";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:38 AM";"Cause you can t predict the minute the switch will happen";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:39 AM";"based on block height";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:39 AM";"so perhaps you pass in block height as optional param";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:39 AM";"Ok";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:39 AM";"it reallys makes the code more complex, but such is life üòÉ";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:39 AM";"That will require specific script but that won t be a problem";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:39 AM";"As all coins will run";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:39 AM";"The thing to find is the way to query";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:40 AM";"Without relying on execution of a script";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:40 AM";"query what?";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:40 AM";"In your case you will have your script waiting for a block height let s say";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:40 AM";"this is pure Javascript, which does nothing but regexes on strings";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:40 AM";"that is it";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:40 AM";"But that information will need to  e gathered by the gui";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:41 AM";"isValidAddress(""HUSH"",""some_address"")";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:41 AM";"Yeah for address format but for chain status";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:41 AM";"time to go out to dinner, i will be back later";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:41 AM";"The gui will need to be able to query the chain status each time the function is triggered";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:41 AM";"Have a good lunch :)";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:41 AM";"my code will know that some things change at block height X for coin Y";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:41 AM";"Ok";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 02:41 AM";"isValidAddress(""HUSH"",""some_address"", 434342)";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:42 AM";"Perfect";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:42 AM";"I ll find a way for heights";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 04:34 AM";"only coins for which sprout to sapling conversion is happening, will need these heights. To decide if a sprout/sapling address is valid";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 04:34 AM";"other coins won't need that complexity";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 05:33 AM";"@Deleted User i have just learned i need sha3 to fully validate an ETH address ( compute a checksum ), does your codebase use a library already that provides sha3 ?";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 05:33 AM";"i can do basic validation, but checksum validation would be even nicer üòÉ";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 05:34 AM";"this module implements a ""valid eth address"" function, which is one option: https://web3js.readthedocs.io/en/1.0/web3-utils.html?highlight=isAddress#isaddress";"";"";
"365714438864633856";"dukeleto#7326";"28-Nov-18 05:36 AM";"in theory you could validate that it's valid base58check format for BTC/ZEC/KMD addresses, but I have never ever seen that done in non-core code.";"";"";
"455741312273219595";"jl777c#5810";"28-Nov-18 08:19 AM";"sprout addresses will be valid as long as the chaintip nTime is before: #define KOMODO_SAPLING_DEADLINE 1550188800 // Feb 15th, 2019";"";"";
"455741312273219595";"jl777c#5810";"28-Nov-18 08:19 AM";"sapling will activate about an hour after: #define KOMODO_SAPLING_ACTIVATION 1544832000 // Dec 15th, 2018";"";"";
"455741312273219595";"jl777c#5810";"28-Nov-18 08:20 AM";"instead of having a zillion different hardcoded sapling heights, you could put the service offline for some hours before and the hour after 1544832000";"";"";
"455741312273219595";"jl777c#5810";"28-Nov-18 08:20 AM";"simple solutions are simpler than complex solutions";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:22 PM";"@dukeleto I already use the Tochecksum call";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:22 PM";"from web3.py";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:23 PM";"works very well";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:23 PM";"but";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:23 PM";"tbh that is something we don t want to care about";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:23 PM";"I mean";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:24 PM";"we don't care for eth addresses that the user givec his checksummed address or not";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:24 PM";"as long as it is a valid one";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:24 PM";"as we ll have the web3.py available on backend, and that is the backend that will handle address, I think the checksum  part should be on my side";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:25 PM";"or automaticly converted by the GUI before the push to DB call";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:25 PM";"cause even a not checksummed address can be valid";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:25 PM";"and that will avoid users from having to handle it";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:26 PM";"we want the user to just paste his address and on a keypress / any other event call the address validator that will unfreeze next steps / buttons";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:26 PM";"when the address will be validated";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:26 PM";"it will be sent to the DB";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:26 PM";"then after that, it will be processed by backend mostly";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:26 PM";"for searching / sending";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:28 PM";"for example : on sending part : 

dst_contractaddress_hex=$(/home/${USER}/barterelly/CoinServer/ethscripts/eth_checksum ${12})";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:29 PM";"and contents of this script :";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:29 PM";"#!/usr/bin/env python3.6
import sys

from web3 import Web3, HTTPProvider, IPCProvider
from web3.gas_strategies.time_based import medium_gas_price_strategy

web3 = Web3(HTTPProvider('http://localhost:8545'))

print(web3.toChecksumAddress(sys.argv[1]))";"";"";
"456226577798135808";"Deleted User#0000";"28-Nov-18 02:29 PM";"so checksum won t be a problem";"";"";
