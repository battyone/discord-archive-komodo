AuthorID;Author;Date;Content;Attachments;Reactions;
"232679450301431808";"blackjok3r#3181";"28-Sep-18 12:23 AM";"or the chains magic value and ports will be diffrent";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 12:23 AM";"sorry I cant find the MGNX height activation, it must have been removed.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 12:26 AM";"ok.

One sec and I'll c/p what I have here, so we can see if it's accurate";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 12:34 AM";"```
The Komodo platform offers various default customizations that you use to determine the underlying nature of your asset chain. The desired combination of parameters should be included with the ``komodod`` execution whenever a coin is launched.

Changing these customizations at a later time is possible, but in some circumstances it can require customizing your code. In general, it is best to have your asset chain's parameters finalized before decentralizing the ownership of your coin. Should you discover a need to change these parameters after the fact, please reach out to our development team for assistance.
```";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 12:40 AM";"Does that look accurate?";"";"";
"457211594137534465";"xRobeSx#5136";"28-Sep-18 12:42 AM";"I would maybe say `but in some circumstances it would require a hard fork` instead of `it can require customizing your code.`

Code customization could be done too, but i think it would be important to point out, even a parameter change would result in a different chain.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 12:44 AM";"ok";"";"";
"457211594137534465";"xRobeSx#5136";"28-Sep-18 12:44 AM";"just a suggestion ðŸ˜ƒ but I suck at writing ha";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 12:45 AM";"ok, I made that change. Thank you.";"";"";
"457211594137534465";"xRobeSx#5136";"28-Sep-18 12:48 AM";"no problem, good work! just out of curiosity, where are you putting all of the info discussed in here?";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 03:58 AM";"At the moment, on my own Github repo. Mylo is traveling, so we haven't had a chance to get my contribs synced with the komodoplatform repo for this, but that is where it will all go, eventually.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 04:06 AM";"Maybe my math is funky (quite possible), but I'm wondering if this formula in the documentation is correct?

```
    numhalvings = (height / -ac_halving);
    for (i=0; i<numhalvings; i++)
    reward = (reward * ac_decay) / 100000000;

For example, if this is set to ``750000000``, the block reward will drop 25% from the previous block reward each halving.
```

I think the first two lines are making things overly complicated, for one?

The last line, `reward = (reward * ac_decay)/100000000` is where I'm wondering if we should do something different...

If the idea is that `750000000` is leads to a 25% decrease, shouldn't we put:

```
reward_after_halving = reward_before_halving * ac_decay/100000000
```

Maybe I'm missing something. There might be an assumption in there about where the `100000000` comes from?";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 04:13 AM";"Also, @jl777c, I had an idea...

with CC smart contracts and z txs and addrs, it seems like you could make a smart contract template that, for it to be initiated, required a viewing key of a z address.

Is that at all possible? So, you'd be able to do smart contracts with z addresses, assuming that the controller of the z address effectively spoiled the privacy of the address, if that makes sense.

It sounds like a waste, since the point of z addresses is to be private.

But we've had a few customers express interest in a privacy-only blockchain, and we've also seen some excitement around the PIRATE project, so maybe having this feature would be useful in those circumstances?";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 04:14 AM";"Of course, with the way `z` to `z` txs are unlinked, it maybe still have limited use cases.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 04:17 AM";"To whoever wrote the current CC parameter documentation, good job. Overall, it needs very little work. Makes my life easier. ðŸ˜ƒ";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 05:52 AM";"There are some clarifications needed in the ``-ac_pubkey`` parameter, and I've attempted to rewrite here. 

Can anyone please confirm if this is accurate? Thanks.

```
-ac_pubkey
==========

The ``pubkey`` parameter designates a public address for receiving payments from the network. These payments can come in the genesis block, in all blocks mined thereafter, and from every transaction on the network.

If ``-ac_pubkey`` is set, but ===link=== ``-ac_perc`` is not, this simply means the genesis block will be mined to the set ``pubkey``'s address, and no blocks or transactions thereafter will mine payments into the ``pubkey``.

``pubkey`` must be set to a 33 byte hex string. You can get the pubkey of an address by using the ===link=== ``validateaddress`` command in ``komodod``, and searching for the returned ``pubkey`` property. The address must be imported to the wallet before using ``validateaddress``.
```";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 05:56 AM";"it is specifically ac_pubkey parameter ... pubkey is something else entirly.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 05:56 AM";"other than that it looks ok";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:10 AM";"Thank you.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:21 AM";"I'm working on the ``ac_cc`` parameter, and I see that `0` is for no smart contracts, `1`, is for non-cross-chain smart contracts, and then for all values `>=2`, the asset chains need to choose a network that has the peers they desire.

Is there anywhere that developers can go to collaborate or at least understand the networks of `cc` clusters?";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:27 AM";"ahh that is wrong";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:28 AM";"STAKED uses clusters";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:28 AM";"so i can help you here";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:28 AM";"ac_cc=1 is simply crypto conditions activated. 0 is disabled, so those are right.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:29 AM";"the above 100 (so minimum 101) the chains are fungible.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:29 AM";"With the correct infrustucture ( you need notary nodes for this) the chains can send coins from one chain to the other.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:29 AM";"This is the MoMoM tech.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:30 AM";"What we did with STAKED was make it so that our chains called ""STKD*...""  and ""STAKED*.....""";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:31 AM";"have their own set of notary nodes, in this way an AC cluster can control who notarizes these chains, as if anyone can notarise them, anyone could splin up a noary network and create a chain with as much pre-mine as they like then transfer those coins to another chain.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:32 AM";"I dont see official notaies ever being able to run large clusters, so this was a needed upgrade.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:32 AM";"Hmm, there's a lot to unpack here.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:33 AM";"Let's go back to a value of `2`, but less than `100`.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:33 AM";"yes, if you have any questions about this im your guy, im not the best at explaining so dont be afraid to ask anything even if it sounds stupid";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:33 AM";"Thank you, you're doikng great.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:34 AM";"So, in general, you're not going to do MoMoM with an asset chain that you didn't create, is that the idea?";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:34 AM";"That is, you don't want to create an asset chain with `ac_cc=2`, and then have someone else do the same with a new coin supply, and shove those over to your chain.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:34 AM";"yes, MoMoM clusters need a trusted entity to control who notarises them, or else the supply can be infinate.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:34 AM";"Right, that part makes sense.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:34 AM";"they are not fungible unless cc=101+";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:35 AM";"Hang on, this is where I need more info.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:35 AM";"not sure what values between 2 and 100 are for,";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:35 AM";"Ok,";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:35 AM";"that's what I was wondering.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:35 AM";"my guess is they are reserved for future funtions that may be added";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:35 AM";"So, in general, you don't want to make values that are between 2 and 99, inclusive, for the time being.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:35 AM";"Hmm, okay, I'll make a note of that.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:36 AM";"maybe some CC's can be acivated and others not, depending on what nuber, although its not that way at the moment.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:36 AM";"Now, let's say I have a coin that's going to have `ac=100`. 

I don't want just anybody to be able to spin up a new chain, set `ac=100`, and inflate my coin supply.

How does the KMD software preven that?";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:36 AM";"the coins need notarization for the MoMoM to work. Without notarization with a valid set of pubkey in the source code, you cannot send coins";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:37 AM";"so those chains whilse being the saem CCid would not be fungible.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:37 AM";"also to be noted, the same set of pubkeys needs to notarize all chains.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:37 AM";"Oooh, that's important to know.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:37 AM";"if there are 2 sets of pubkeys doing diffrent chains, they would not be fungible";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:38 AM";"Yes, that is what we're looking for in the documentation. Excellent.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:38 AM";"so 2 clusters could use the same number, as long as they have diffrent notary nodes, but I htink to avoid confusion it should just be, use a diffrent number.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:39 AM";"or reccomended to use a diffrent number, but it might not be possible to know all the clusters out there that have been used.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:39 AM";"I hope for STAKED code to be pushed to KMD at some point, so anyone can just fork KMD and change the notaries_staked.ccp and .h files for thier own profects needs. its all backwards comaptiable.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:41 AM";"What happens if you start an asset chain with `ac_cc=X` and you're working with one set of notary nodes, but then you want to switch to another community of notary nodes and there's already a coin there with `ac_cc=X`?

Is there a limit to how high you can set X, assuming you want to make it high so that you can decrease the probability of a collision?";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:42 AM";"you can change the set of otary pubkeys defined by ERAS, which is a range of timestamps, that those notary pubkeys are valid, I think X can go as high as 9999 if not higher.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:42 AM";"It sounds like this will be relevant, whenever we get secondary notarization layers going.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:42 AM";"a set of notaries could notarise more than one cluster too.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:43 AM";"but those clusters would not be fungible with each other";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:43 AM";"to be noted this is still very much in develoment, and it still has some bugs to be sorted so things could change slightly";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:44 AM";"Ok, seems like there's a lot of details here. We may not need them all right now, since our community is just getting started, so I think I have enough info to make a basic pass, and then encourage the developer to reach out to you with more questions.

Until secondary layers of notarization and networks of competiting notary nodes becomes a thing, it's probably not necessary to go too deep.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:44 AM";"Will send you a copy of what I write, for approval.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:45 AM";"no worries that sounds like a good plan";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:45 AM";"none of this has been used for anything, we are the first project and are basically flying blind here, there was no docs at all.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 06:46 AM";"taken me maybe a hundred hours maybe even more to get it semi-working lol";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:46 AM";"nice";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 06:46 AM";"yes, it's fun";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 07:50 AM";"@blackjok3r 

Here's what I wound up with:

```
-ac_cc
======

 * **NOTE:** This parameter is still in testing.

The ``-ac_cc`` parameter sets the network cluster on which the chain can interact with other chains via ===link=== cross-chain smart contracts and ===link=== MoMoM technology.

Under most circumstances, this parameter requires the Komodo notarization service to achieve functionality, as it relies on the ``pubkey`` of the trusted notary nodes to ensure coin-supply stability.

Once activated, the ``ac_cc`` parameter allows features such as cross-chain fungibility -- meaning that coins on one asset chain can be directly transferred to another asset chain that has the same ``ac_cc`` setting and notary nodes with the same ``pubkey``.

-ac_cc=0
--------

Setting ``-ac_cc=0`` will disable smart contracts on the asset chain entirely.

-ac_cc=1
--------

Setting ``-ac_cc=1`` will permit smart contracts on the asset chain, but will not allow the asset chain to interaction in cross-chain smart contracts with other asset chains.

-ac_cc=2 to 100
---------------

The values of `2` through `100` are reserved for ongoing development. Please do not set your asset chain to any of those values.

-ac_cc=101 to 9999
------------------

Setting the value of ``ac_cc`` to any value greater than or equal to ``101`` will permit cross-chain interaction with any asset chain that has the same ``ac_cc`` value and is secured by notary nodes with the same ``pubkey``. For example, an asset chain set to ``ac_cc=2`` in its parameters can interact with other asset chains with ``ac_cc=2``, on the same notary-node network, but cannot interact with an asset chain set to ``ac_cc=3``.
```";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 07:52 AM";"```-ac_cc=1
--------

Setting ``-ac_cc=1`` will permit smart contracts on the asset chain, but will not allow the asset chain to interaction in cross-chain smart contracts with other asset chains.```";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 07:52 AM";"get james to confirm that part, I think posibly cross chain can still be done, but the chains are just not fungible.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 07:52 AM";"if that makes sense";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 07:53 AM";"cross chain has a few features, a simple one being that one chain cna query KMD if a TX happened on another chain.";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 07:53 AM";"but I am only familiar with fungible chain functions, as I am not sure anything else has been made that uses the other parts.";"";"";
"455741312273219595";"jl777c#5810";"28-Sep-18 07:57 AM";"any -ac_cc value over 101 means it is a fungible chain";"";"";
"455741312273219595";"jl777c#5810";"28-Sep-18 07:57 AM";"2 to 100 means it can do cross chain imports, but not fungible";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 09:01 AM";"What is the `getbalance64` command in this sentence, regarding the `ac_stake` parameter?

```
You can use the ``getbalance64`` command to get the balance you currently have in each segid you are staking in.
```";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 09:01 AM";"We don't have a `getbalance64` in the API/RPC docs.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 09:02 AM";"A google search shows something about it on Github from Verus.

```
extern UniValue getbalance64(const UniValue& params, bool fHelp);
```";"";"";
"455741312273219595";"jl777c#5810";"28-Sep-18 09:10 AM";"it is for ac_staked chains";"";"";
"455741312273219595";"jl777c#5810";"28-Sep-18 09:10 AM";"all addresses are in one of 64 segments";"";"";
"455741312273219595";"jl777c#5810";"28-Sep-18 09:10 AM";"balance64 returns the balance in each of the 64 segments";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 09:22 AM";"Okay... I'll add it to the API/RPC list.";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 09:30 AM";"I added this, just for now. I won't be able to do more until I get around to testing a staked chain.

Lmk if this isn't accurate.

```
getbalance64
------------

  ** EXPERIMENTAL FEATURE **: This method is part of the new ===link=== ``-ac_stake`` functionality.

The ``getbalance64`` method is used only on asset chains that are utilizing the ===link=== ``-ac_stake`` functionality. On KMD-based Proof-of-Stake (PoS) asset chains, all staked coins are placed into one of 64 segments. The ``getbalance64`` method returns information about these coins. For further information, please reach out to our support team.
```";"";"";
"232679450301431808";"blackjok3r#3181";"28-Sep-18 09:34 AM";"getbalance64 returns the balance of coins in each segid, and weather or not they are curretly staking";"";"";
"439780323497082880";"CMaurice#1685";"28-Sep-18 09:49 AM";"so... these pubkeys that are referred to, if a related private key is  leaked/haxed/whatever, is the asset chain compromised";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 09:49 AM";"That's a good question";"";"";
"439780323497082880";"CMaurice#1685";"28-Sep-18 09:51 AM";"btw, I've reading around here on and off a few weeks now, and have a server ready, I'm sure I want to commit some time to getting dome practical experience but finding it difficult to dive in, so any direction from devs is welcome";"";"";
"439780323497082880";"CMaurice#1685";"28-Sep-18 09:51 AM";"I'm more a home-schooled sysadmin type than developer, in his 6th decade";"";"";
"439780323497082880";"CMaurice#1685";"28-Sep-18 09:51 AM";"though I have writted scripts";"";"";
"439780323497082880";"CMaurice#1685";"28-Sep-18 09:52 AM";"*written";"";"";
"455741312273219595";"jl777c#5810";"28-Sep-18 09:52 AM";"testing CC #cc-general is a good place to start";"";"";
"405011811511828481";"Alright#0419";"28-Sep-18 11:20 AM";"@CMaurice #private-staked too";"";"";
"405011811511828481";"Alright#0419";"28-Sep-18 11:20 AM";"@Bryan_Beus ac_staked* btw";"";"";
"405011811511828481";"Alright#0419";"28-Sep-18 11:21 AM";"the asset chain params doc has technical details about how segids work";"";"";
"405011811511828481";"Alright#0419";"28-Sep-18 11:24 AM";"Also your description of ac_pubkey doesn't really explain how the ""payments from the network"" work";"";"";
"369608312955731968";"Bryan_Beus#6442";"28-Sep-18 11:50 PM";"@Alright 

It is explained in ``-ac_perc``, I can link or c/p. Thanks.";"";"";
"369608312955731968";"Bryan_Beus#6442";"29-Sep-18 12:56 AM";"@jl777c 

Is this a more correct decay formula?

```
reward_after_halving = reward_before_halving * ac_decay/100000000
```

Earlier, it was 
```
reward = (reward * ac_decay)/100000000
```
which wasn't making sense to me, but maybe I'm wrong.";"";"";
