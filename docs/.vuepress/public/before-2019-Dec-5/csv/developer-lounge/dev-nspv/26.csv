AuthorID;Author;Date;Content;Attachments;Reactions;
"365714438864633856";"dukeleto#7326";"25-Jul-19 02:53 PM";"because BSV attacks/etc";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 02:54 PM";"hmm not sure who told me that now, im confused lol";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 02:59 PM";"saying that a fullnode wont reorg more than 10 blocks is not a checkpoint";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:00 PM";"it also is subject to a chain split attack if a 10 block reorg is broadcast to half the network at just the right time";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:00 PM";"a superlite client relies on fullnode to tell it what the current chain is. so which node will it trust?";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:00 PM";"it has no way to know which fullnode is on the mainchain or the attacker chain";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:01 PM";"with nSPV, all the signatures are validated (using a purely local bruteforce validation of the notarization tx)";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:01 PM";"yes, understood.";"";"";
"365714438864633856";"dukeleto#7326";"25-Jul-19 03:01 PM";"superlite clients follow the chain that their server follows, just like Electrum";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:01 PM";"I spent about 3H last night getting that notarization validation working";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:01 PM";"clever stuff";"";"";
"365714438864633856";"dukeleto#7326";"25-Jul-19 03:02 PM";"@jl777c does nSPV randomly choose to connect to different servers or is it possible to get ""stuck"" on one ""malicious"" node?";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:02 PM";"it randomy chooses most of the time, We need more nodes though.";"";"";
"365714438864633856";"dukeleto#7326";"25-Jul-19 03:02 PM";"Electrum has such problems with evil servers";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:03 PM";"I would say all notaries at least  right?";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:03 PM";"Or does that allow people to dos them 🤔";"";"";
"365714438864633856";"dukeleto#7326";"25-Jul-19 03:05 PM";"we can use Cloudflare";"";"";
"365714438864633856";"dukeleto#7326";"25-Jul-19 03:05 PM";"use DNS and have that DNS record point to various NN ip's";"";"";
"365714438864633856";"dukeleto#7326";"25-Jul-19 03:06 PM";"spiritually similar to a DNS seed";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:06 PM";"the client finds peers just like a normal, node does. Then connects to up to 1000 of them I think.";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:06 PM";"I got that working last night aswell";"";"";
"365714438864633856";"dukeleto#7326";"25-Jul-19 03:06 PM";"@jl777c that ZIP requires changing the tx header format, ugh";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"25-Jul-19 03:08 PM";"got some basic functionality up at http://oracle.earth/nspv_login/
totally unsecure tho :D
needs a bit more error handling too, crashed out a couple of times when method times out";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:10 PM";"currently, it updates the current height based on getinfo height being higher than the last";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:11 PM";"we do need to add validation that the new height prevBlockhash -> prev -> ... latest notarization";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:11 PM";"yay! let's test :)
```ls | grep .exe
nspv.exe```";"";"🙏 (1),yassinheart (1)";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:11 PM";"if it is the max height and traces back to the most recent notarization, it seems it is the right chain and right height";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:11 PM";"as the latest notarization is updated, that also needs to be validated";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:12 PM";"with those two validations, you just need to have one honest peer to get onto the mainchain";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:12 PM";"this is similar to the PoW risk profile. a 100% eclipsed node, well not much can be done if all your peers are evil, but a single honest peer against 1000 evil nodes, that single honest peer is enough to get onto the main chain. this is the power of PoW";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:13 PM";"@blackjok3r does this make sense? it is fundamental to the PoW concept";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:13 PM";"yes I get it.";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:13 PM";"single honest node overpowering all the evil nodes, just due to the PoW work. in our case, due to knowing about the latest notarization";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:13 PM";"maybe you want to take a stab at updating the getinfo logic?";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:14 PM";"in superlite.h, where it gets the getinfo message, right now it just checks the height";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:14 PM";"that needs to be changed to tracing back the headers and also updating the latest notarization";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:14 PM";"yes. That seems to be giving me some problems elswhere aswell.";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:14 PM";"sort of fits into the gettransaction logic";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:14 PM";"and this will filter out bad nodes that are bad just because they are not in sync";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:14 PM";"for gettransaction if you dont  enter a height I made it use the tip. Which means the tx wont validate. because it canot scan forwards.";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:15 PM";"```.\nspv.exe
027e3758c3a65b12aa1046462b486d0a63bfa1beae327897f56c5cfb7daaae71 genesisblockhash KMD
Start NSPV_rpcloop.7771
getaddrinfo(0.0.0.0) returned error
[warn] evsig_init_: socketpair: ╚ыш яЁшыюцхэшх эх т√чтрыю WSAStartup, шыш яЁюшчю°ыр ю°шсър т WSAStartup.
Discover KMD peers...setnode.(5.9.253.195) -> 5.9.253.195:7770
setnode.(5.9.253.196) -> 5.9.253.196:7770
setnode.(5.9.253.197) -> 5.9.253.197:7770
setnode.(5.9.253.198) -> 5.9.253.198:7770
setnode.(5.9.253.199) -> 5.9.253.199:7770
setnode.(5.9.253.200) -> 5.9.253.200:7770
setnode.(5.9.253.201) -> 5.9.253.201:7770
setnode.(5.9.253.202) -> 5.9.253.202:7770
setnode.(5.9.253.203) -> 5.9.253.203:7770
end of client runloop
[err] bufferevent.c:692: Assertion bufev_private->refcnt > 0 failed in bufferevent_decref_and_unlock_
getaddrinfo(0.0.0.0) returned error
getaddrinfo(0.0.0.0) returned error
getaddrinfo(0.0.0.0) returned error``` 

seems close but crash :/ not sure why it speak with me on broken russian";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:15 PM";"if you dont know the height at least it can get the height from the first call and then call it again";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:16 PM";"@TonyL does libbtc work for windows";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:16 PM";"with the BTC chain";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:16 PM";"Let me try";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:16 PM";"getaddrinfo(0.0.0.0) returned error <- that seems suspicious";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:17 PM";"Windsocks fault";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:19 PM";"https://github.com/tonymorony/libnspv/commit/26fabd508d7db7b95d419af84d6c06c17b74aad4 maybe it was too dirty";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:19 PM";"we need decker for this";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:19 PM";"`EVUTIL_ASSERT(bufev_private->refcnt > 0);` Failed here in libevent";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:20 PM";"maybe libbtc doenst work in windows and we need to fix it, or i broke it adding nspv";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:20 PM";"I dont see any binaries/manuals and etc for windows in libbtc repo";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 03:21 PM";"I dont think so, because its failing in the DNS seeder part on startup, pretty sure I didnt change that at all either.";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:21 PM";"same autogen configure process";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:21 PM";"for windows. i didnt do anything to make it windows compatible";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:22 PM";"there was a typo https://github.com/tonymorony/libnspv/commit/217ca6f663f222e688c6e8ea26a9fddf1e74bf06 which failed crosscompilation";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:22 PM";"if it original libbtc code - dont think someone tried to build it on win recently 😃";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:23 PM";"or it's not typo 🤔";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:23 PM";"that is my file";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:23 PM";"are you sure it should reverse the ifdef to ifndef";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:25 PM";"```In file included from src/tools/nspv.c:114:0:
src/tools/nSPV_rpc.h:41:0: warning: ""EADDRINUSE"" redefined
 #define EADDRINUSE WSAEADDRINUSE
 
In file included from /usr/share/mingw-w64/include/pthread.h:63:0,
                 from ./include/nSPV_defs.h:29,
                 from src/tools/nspv.c:50:
/usr/share/mingw-w64/include/errno.h:86:0: note: this is the location of the previous definition
 #define EADDRINUSE 100
 
In file included from src/tools/nspv.c:114:0:
src/tools/nSPV_rpc.h:95:0: warning: ""EAFNOSUPPORT"" redefined
 #define EAFNOSUPPORT WSAEAFNOSUPPORT
 
In file included from /usr/share/mingw-w64/include/pthread.h:63:0,
                 from ./include/nSPV_defs.h:29,
                 from src/tools/nspv.c:50:
/usr/share/mingw-w64/include/errno.h:82:0: note: this is the location of the previous definition
 #define EAFNOSUPPORT 102
 
In file included from src/tools/nspv.c:114:0:
src/tools/nSPV_rpc.h:98:8: error: redefinition of ‘struct sockaddr_in6’
 struct sockaddr_in6 {
        ^~~~~~~~~~~~
In file included from /usr/share/mingw-w64/include/ws2tcpip.h:18:0,
                 from ./include/btc/protocol.h:40,
                 from ./include/btc/net.h:34,
                 from src/tools/nspv.c:31:
/usr/share/mingw-w64/include/ws2ipdef.h:41:8: note: originally defined here
 struct sockaddr_in6 {
        ^~~~~~~~~~~~
```";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:25 PM";"build throwing this with ifdef";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:25 PM";"and passing fine with ifndef, so decided it's a typo";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:32 PM";"lets assume its not a typo and comment out the include file that it complains about";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:32 PM";"comment out line 114";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:35 PM";"@gcharang added a protocolversion field to getinfo return";"";"👍 (1)";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:35 PM";"if comment out `#include <nSPV_defs.h>` it doesnt know about functions from it
```In file included from src/tools/nspv.c:111:0:
src/tools/nspv.c: At top level:
src/tools/nSPV_superlite.h:41:22: error: storage size of ‘NSPV_inforesult’ isn’t known
 struct NSPV_inforesp NSPV_inforesult;
``` and etc";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:35 PM";"this allows clients to just not query out of date fullnodes for new messages";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:36 PM";"@TonyL the problem is inside that filke";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:36 PM";"from ./include/nSPV_defs.h:29,";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:36 PM";"line 29";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:36 PM";"maybe #ifndef _WINDOWS around that?";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:37 PM";"will play with it";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:37 PM";"it is the pthread.h that is being included so guard that to make sure windows doesnt include it";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:38 PM";"i guess it is              #ifndef __MINGW";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:39 PM";"#include <pthread.h>";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:39 PM";"#endif";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:39 PM";"https://github.com/tonymorony/libnspv/commit/634afe0d784dae013dc384c299269963dfb51237 I have such change on my side";"";"";
"272003866906722306";"TonyL#3577";"25-Jul-19 03:40 PM";"before it thrown an error so compiler definetly trying to include it";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:40 PM";"ok, whatever gets past the double inclusion of pthread.h";"";"";
"423176312354635779";"gcharang#6833";"25-Jul-19 03:41 PM";"@jl777c not sure if this is useful
```
In file included from src/tools/nspv.c:110:0:
src/tools/nSPV_structs.h: In function ‘NSPV_getinfo_json’:
src/tools/nSPV_structs.h:572:38: warning: passing argument 3 of ‘jaddstr’ makes pointer from integer without a cast [-Wint-conversion]
     jaddstr(result,""protocolversion"",ptr->version);
                                      ^~~
In file included from ./include/nSPV_defs.h:56:0,
                 from src/tools/nspv.c:50:
./include/komodo_cJSON.h:88:10: note: expected ‘char *’ but argument is of type ‘uint32_t {aka unsigned int}’
     void jaddstr(cJSON *json,char *field,char *str);
```";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:41 PM";"fixing";"";"👍 (1)";
"455741312273219595";"jl777c#5810";"25-Jul-19 03:42 PM";"fixed";"";"👍 (1)";
"365714438864633856";"dukeleto#7326";"25-Jul-19 04:00 PM";"TDD = Tony-Driven Development";"";"😆 (2)";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:02 PM";"getinfo now returns protocolversion. oldernodes are backward compatible and will just return 0";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:09 PM";"@blackjok3r we did some saturation load tests and with 850+ peers doing full saturation requests, the fullnode did go up to 150% CPU load, but that is a crazy level of peers as normal superlites would be doing 1% that level, so that is estimated 100,000 normal superlite clients per fullnode. my 10 nodes i have setup could well support 1 million superlite clients";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:10 PM";"i will call the superlite that does crosschain between any two chains in a cluster the ""superwallet"" as it is a superset of the existing wallet";"";"👌 (1),👍 (1),💯 (1),😎 (2),KMD (3)";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 04:10 PM";"nice. I have pulled down those changes I think. just reading some code for this headers thing, gettransaction works, but its not very user friendly atm, returns some unexpected things.";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 04:11 PM";"it will fetch the tx, but using a tip height isnt any good without the check forwards from the last notarization.";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:11 PM";"yes, that is why i suggest the height /hdrs validation";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 04:12 PM";"just trying to find what to use, still have a more to get up to speed on";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:13 PM";"once you understand hdrsproof (which is a subset of gettransaction), then the hdrs validation wont be so bad, it is just the same logic to do for the prevblockhash checking";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 04:14 PM";"yes.";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:14 PM";"probably would be good to share code for doing the backwards headers thing";"";"";
"232679450301431808";"blackjok3r#3181";"25-Jul-19 04:14 PM";"Yes I thaught something liek that already may exist. But it doesnt so thats what im trying to work out";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:14 PM";"maybe we need a special mode on the fullnode side to just return a specific set of headers, like if the nextheight is 0, that would tell the fullnode to return all the headers until the latest notarization";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:16 PM";"aha! currently fullnode getntzsproofresp returns error if there is no nextht";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:16 PM";"so you just need to add code there to special case it and have it return all the most recent headers. the superlite side should be able to gracefully handle missing ntz tx data";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:17 PM";"komodo_nSPV_fullnode.h (you do need to become familiar with the fullnode handling of the superlite client requests to do such changes) line 463 is a good place for this";"";"";
"455741312273219595";"jl777c#5810";"25-Jul-19 04:18 PM";"internally it is a hash that is sent to the getntzsproofresp function, not a height, this avoids the confusion about what height the notarization is at vs what it notarized";"";"";
