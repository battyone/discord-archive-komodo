==============================================================
Guild: Komodo
Channel: dev-general
Topic: A place for general developer talk ‚Äì for everyone! | Documentation https://developers.komodoplatform.com | MoreDev Docs - https://docs.komodoplatform.com | Mastering CryptoConditions - https://github.com/KomodoPlatform/Mastering_CryptoConditions
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[19-Sep-18 11:50 PM] Bryan_Beus#6442
perfect, thanks

[20-Sep-18 12:10 AM] Bryan_Beus#6442
I'm working through the .conf file optional parameters now. 

In `proxy`, is the example I have here just an example, or would we typically use the local address (127.0.0.1) and indicated port (9050)?

```
  komodod -proxy=127.0.0.1:9050
```

[20-Sep-18 12:12 AM] xRobeSx#5136
here's good info on all of the config options from bitcoin:  https://en.bitcoin.it/wiki/Running_Bitcoin

most things like proxy etc are the same

{Embed}
https://en.bitcoin.it/wiki/Running_Bitcoin
Running Bitcoin

[20-Sep-18 12:37 AM] Bryan_Beus#6442
great, thank you

[20-Sep-18 02:28 AM] Bryan_Beus#6442
The Zcash documentation for `gettxoutproof` originally had a note like this one in it (I rephrased it in my first pass through the rewrite)

```
**NOTE:** By default this function only works in certain situations. It is successful when there is an unspent output in the utxo for this transaction. It is possible to make the command always successful; you need to maintain a transaction index, using the ``-txindex`` command-line option at runtime, or you must manually specify the hash of the block in which the transaction is included.
```

Since `-txindex` is enabled by default on all KMD-based chains, does `gettxoutproof` always work, by default?

[20-Sep-18 03:03 AM] grewalsatinder#9653
People getting excited for this. Sounds big in maths. Thought some folks here might like it.

https://twitter.com/Quasilocal/status/1042359040305704960?s=20

{Embed}
Steve McCormick (@Quasilocal)
https://twitter.com/Quasilocal/status/1042359040305704960?s=20
Just got wind of this on Facebook. The most subtle of announcements for what is a huge claim from a titan of mathematics... #math #maths 
Stay tuned I guess :)
Likes
232
https://pbs.twimg.com/media/DnczaEMX0AAJlWL.jpg:large
Twitter

[20-Sep-18 03:04 AM] grewalsatinder#9653
No idea why ppl excited üòÖ
Hoping something useful for Blockchain devs....

[20-Sep-18 04:08 AM] Deleted User#0000
anyone have a link for free vps service?

[20-Sep-18 06:21 AM] Deleted User#0000
sign up to google cloud, put in your details, "upgrade to full account" with your credit card details and enjoy $300 free credit üòÉ Close account as you get to around $10 and theres your free vps

[20-Sep-18 06:28 AM] TonyL#3577
Similar for AWS https://aws.amazon.com/free/ but they have more limitations on free trial so have to be careful and tune billing monitoring

{Embed}
https://aws.amazon.com/free
AWS Free Tier
https://a0.awsstatic.com/main/images/logos/aws_logo_smile_179x109.png

[20-Sep-18 06:30 AM] TonyL#3577
https://try.digitalocean.com/performance/ Digital Ocean offers some free trial as well but never tried this.
So there is a lot of possibilities to have testing  server for free

{Embed}
https://try.digitalocean.com/performance
Get started for free with $100 over 60 days

[20-Sep-18 06:31 AM] Deleted User#0000
Once you upgrade account there are no ‚Äúlimitations‚Äù per se

[20-Sep-18 06:32 AM] Deleted User#0000
An upgraded account does not have the same Terms of Usage as a trial account (once you upgrade by putting in credit card you are no longer a trial account) hence there‚Äôs nothing actually stating you cannot mine crypto etc, that only relates to trial accounts

[20-Sep-18 06:32 AM] TonyL#3577
There are limitations to free tier resources usage

[20-Sep-18 06:32 AM] Deleted User#0000
Went through their documents and triple checked this shit üòõ also made around 60 accounts though I‚Äôm sure that itself isn‚Äôt allowed

[20-Sep-18 06:32 AM] Deleted User#0000
But go nuts

[20-Sep-18 06:32 AM] TonyL#3577
Only t2.micro for EC2 for example

[20-Sep-18 06:33 AM] Deleted User#0000
From memory it‚Äôs 64 vcpu limit total

[20-Sep-18 06:33 AM] Deleted User#0000
You can have 2x24 and 1x16

[20-Sep-18 06:33 AM] Deleted User#0000
Different locations

[20-Sep-18 06:34 AM] TonyL#3577
GCP also have limitation 8 cores per availability zone

[20-Sep-18 10:11 AM] Mylo#8306

{Attachments}
https://cdn.discordapp.com/attachments/463445317136809984/492276593310302208/Screen_Shot_2018-09-20_at_8.09.33_pm.png

[20-Sep-18 10:11 AM] Mylo#8306
@Bryan_Beus making it look good, only first four functions testing with.   haven't made a sample request.

[20-Sep-18 10:12 AM] Mylo#8306
so far not too much heartache to get to this point.

[20-Sep-18 10:14 AM] Mylo#8306
got a feeling it won't be easy, gonna have lunch first.   the rpc object gets parsed into user:pass authorization headers.  i think....

[20-Sep-18 10:14 AM] Bryan_Beus#6442
@Mylo 

Great, so glad to see this happening.

[20-Sep-18 10:15 AM] Bryan_Beus#6442
If you want to hop on voice after lunch, lmk

[20-Sep-18 11:40 AM] Bryan_Beus#6442
Anyone know the answer to this?

The Zcash documentation for gettxoutproof originally had a note like this one in it (I rephrased it in my first pass through the rewrite)
```
**NOTE:** By default this function only works in certain situations. It is successful when there is an unspent output in the utxo for this transaction. It is possible to make the command always successful; you need to maintain a transaction index, using the ``-txindex`` command-line option at runtime, or you must manually specify the hash of the block in which the transaction is included.
```

Since -txindex is enabled by default on all KMD-based chains, does gettxoutproof always work, by default?

[20-Sep-18 12:37 PM] jl777c#5810
it should

[20-Sep-18 02:00 PM] dukeleto#7326
@Bryan_Beus those zc* rpcs are deleted in upstream zec I believe, and should be deleted in KMD. There are also some binaries that KMD generates with similar names, those binaries are deleted upstream

[20-Sep-18 02:00 PM] dukeleto#7326
it's really old stuff from the pre-1.0 zcash days

{Reactions}
üòÆ üëç 

[20-Sep-18 11:01 PM] Bryan_Beus#6442
Great, glad I can delete them. There's not enough information to write documentation on them. 

The main one that I am concerned about is ``zcsamplejoinsplit``, as it's not listed as deprecated, yet, even in the zcash docs:

https://zcash-rpc.github.io/zcsamplejoinsplit.html

Are we okay to delete that in KMD?

{Embed}
https://zcash-rpc.github.io/zcsamplejoinsplit.html
zcsamplejoinsplit - Zcash 2.0.0 RPC Docs
Zcash 2.0.0 RPC Docs - zcsamplejoinsplit

[20-Sep-18 11:02 PM] Bryan_Beus#6442
I'll delete it, unless I hear otherwise.

[20-Sep-18 11:07 PM] Bryan_Beus#6442
I've noted the `rescan` and `startHeight` optional parameters on `z_importkey` as "not currently functional." 

Let me know if anyone figures out how to enter them properly, or if we fix the bug.

[20-Sep-18 11:11 PM] Bryan_Beus#6442
Almost done with the basic RPC calls. Finishing up last few touches.

Still haven't figured out how to get `estimatepriority` to work.

Have tried mining multiple blocks and performing lots of transactions.

```
./komodo-cli -ac_name=SIDDA estimatepriority 1
-1
```

If a senior dev can take a look, much appreciated.

[20-Sep-18 11:22 PM] Bryan_Beus#6442
also, `z_importviewingkey` has the same error as `z_importkey`

[21-Sep-18 01:48 AM] Bryan_Beus#6442
Can anyone please verify this?

```
bind
----

``bind`` is a runtime parameter that instructs the coin daemon to bind to a given address and always listen on it.

Use ``[host]:port`` notation for IPv6.

Usage:

For exapmle, to connect to 127.0.0.1:9050 for one-time usage:

::

  komodod -bind=127.0.0.1:9050

To set as a default parameter, include `bind=<address>` in your `COIN.conf` file.

::

  bind=127.0.0.1:9050
```

[21-Sep-18 03:54 AM] Bryan_Beus#6442
For anyone who's curious, just made it through the Komodo Basic API Commands.

This is just the writing and re-writing of the sentences, to get a basic idea down. No layout or design compositing done yet. 

On to asset-chain documentation, and then, finally, CC smart contracts.
 
https://github.com/siddhartha-komodo/KomodoPlatformDocs/blob/v0.0.2/docs/rebuild/03_Developer_Documentation/02-Basic-Komodo-API-Commands/01-Komodo-Basic-API.rst

{Embed}
https://github.com/siddhartha-komodo/KomodoPlatformDocs/blob/v0.0.2/docs/rebuild/03_Developer_Documentation/02-Basic-Komodo-API-Commands/01-Komodo-Basic-API.rst
siddhartha-komodo/KomodoPlatformDocs
From https://github.com/imylomylo/KomodoPlatformdocs - siddhartha-komodo/KomodoPlatformDocs
https://avatars2.githubusercontent.com/u/33014953?s=400&v=4

{Reactions}
üëç (5) 

[21-Sep-18 07:50 AM] CrisF#3405
@Bryan_Beus Hi, just started through your basic api docs.  Very good. This will be very useful to me and I'm sure, other. Thanks for your great work!

{Reactions}
üëç (2) 

[21-Sep-18 08:19 AM] blackjok3r#3181
https://github.com/StakedChain/komodo/commits/blackjok3r
500 KMd bounty to the person who can get this to build...
```komodo_cli-bitcoin-cli.o: In function `komodo_notaries(unsigned char (*) [33], int, unsigned int)':
/home/blackjok3r/komodo/src/komodo_notary.h:236: undefined reference to `num_notaries_STAKED'
/home/blackjok3r/komodo/src/komodo_notary.h:238: undefined reference to `notaries_STAKED'
collect2: error: ld returned 1 exit status
Makefile:2046: recipe for target 'komodo-cli' failed
```

{Embed}
https://github.com/StakedChain/komodo/commits/blackjok3r
StakedChain/komodo
Komodo. Contribute to StakedChain/komodo development by creating an account on GitHub.
https://avatars0.githubusercontent.com/u/42953759?s=400&v=4

[21-Sep-18 08:19 AM] blackjok3r#3181
about to kill someone, the amount of time this has wasted.

[21-Sep-18 08:25 AM] jl777c#5810
are num_notaries_STAKED and notaries_STAKED defined?

[21-Sep-18 08:28 AM] blackjok3r#3181
of course they are... the issue is that the makefile is not linking `notaries_staked.cpp` and `notaries_staked.h` for some reason.

[21-Sep-18 08:29 AM] blackjok3r#3181
important to note, if I define the variables directly in the .h file it will exit with a `multiple definition` error instead of undefined.

[21-Sep-18 08:29 AM] blackjok3r#3181
driving me insane...

[21-Sep-18 08:31 AM] jl777c#5810
define variables in komodo_globals.h

[21-Sep-18 08:32 AM] jl777c#5810
I usually just include source files in complex makefile environments as I could never figure out how else to add it

[21-Sep-18 08:34 AM] blackjok3r#3181
I really need a seperate file, so I can add glocbal bunctions there like this one: 
```bool is_STAKED() {
  bool STAKED = 0;
  if ( (strncmp(ASSETCHAINS_SYMBOL, "STKD", 4) == 0) || (strncmp(ASSETCHAINS_SYMBOL, "STAKED", 6) == 0) )
    STAKED = 1;
  return(STAKED);
};```
the code is impossiblly messy and hard to follow without somethign like this, espeically because Alright wants a way to hardfork chains on demand.

[21-Sep-18 08:35 AM] blackjok3r#3181
I need that file linked and will pay for it, once it builds, I cna just add functions to it and call them I assume.

[21-Sep-18 08:35 AM] blackjok3r#3181
if it cant see the file, its not going to build.

[21-Sep-18 08:35 AM] blackjok3r#3181
this is the problem.

[21-Sep-18 08:39 AM] jl777c#5810
the CC files are linked in. find where assets.cpp is in the Makefile.am file

[21-Sep-18 08:39 AM] jl777c#5810
add it there

[21-Sep-18 08:40 AM] blackjok3r#3181
I did that lol, the error is on the cli part

[21-Sep-18 08:40 AM] blackjok3r#3181
the server side already seems to work just fine

[21-Sep-18 08:40 AM] jl777c#5810
cli is built separately. you need the code in the cli also?

[21-Sep-18 08:41 AM] jl777c#5810
I would just #include the C file from the cli source file, which i think is bitcoin-cli.cpp or something like that

[21-Sep-18 08:43 AM] blackjok3r#3181
I tried to include the h file from there and that didnt work... I didnt htink it would need to compile form there, but thats where the error is...

[21-Sep-18 08:44 AM] blackjok3r#3181
komodo_notary.h is included somwhere in `bitcoin-cli` but I cant find how, and adding include to my files in that file also failed.

[21-Sep-18 08:45 AM] blackjok3r#3181
I would much rather stop running around in circles and let someone who know how to do these things just fix it... so may hours trying the same things over and over when I have other thigns I should be doing.

[21-Sep-18 08:56 AM] Mylo#8306
hey @CrisF all those changes need to go into src.   did i read you wanted to run for a notary node next year?   if so, having some kind of git workflow makes things heaps easier.  if you don't use git/github you wanna make some changes to the cpp files for help output?  if you're not interested in notary elections or can't be bothered - no dramas üòÉ

[21-Sep-18 08:57 AM] Mylo#8306
as an example https://github.com/imylomylo/KomodoPlatformDocs-1/blob/v0.0.2/docs/rebuild/03_Developer_Documentation/02-Basic-Komodo-API-Commands/01-Komodo-Basic-API.rst#getaddressmempool-updated-it-here---httpsgithubcomimylomylokomodoblobmastersrcrpcmisccppl702

{Embed}
https://github.com/imylomylo/KomodoPlatformDocs-1/blob/v0.0.2/docs/rebuild/03_Developer_Documentation/02-Basic-Komodo-API-Commands/01-Komodo-Basic-API.rst
imylomylo/KomodoPlatformDocs-1
From https://github.com/imylomylo/KomodoPlatformdocs - imylomylo/KomodoPlatformDocs-1
https://avatars3.githubusercontent.com/u/19399102?s=400&v=4

[21-Sep-18 08:59 AM] Mylo#8306
addressmempool help output needs to be changed in that linked part of src in rpcmisc.cpp 
just run your eye over that (and anyone else).
it's only my initilal observation of how to go about updating it with @Bryan_Beus  - still to decide on best way to tackle it and integrate tutorial stuff etc.

[21-Sep-18 09:06 AM] blackjok3r#3181
@jl777c  I thint it works by including the .c file in `bitcoin-cli.cpp` not sure why... but it seems to build now... will find out if it works soon üöÄ

{Reactions}
üöÄ (2) 

[21-Sep-18 09:22 AM] CrisF#3405
@Mylo  Good memory üí™ üòÉ 
I was asking about setting up a test notary (BEER&PIZZA) quite some time back.
The guys on STAKED have made it very easy to get some experience!
Not sure about running, it's a heck of a mountain to climb, but will see how far I can get over the next few months.
I'll have more of a look through the git info and get back to you üëç

[21-Sep-18 05:09 PM] Mylo#8306
how would one shut down that site @Deleted User ?

[21-Sep-18 05:46 PM] qmc#4355
Hey, could someone please make a test transaction for our new coin (pivx based, but we added bip65)

[21-Sep-18 05:46 PM] qmc#4355
I recall @cipi offering to do this

[21-Sep-18 05:53 PM] cipi#4502
please give me the link to the wallet source. later i will need some coins and a logo for the GUI

[21-Sep-18 06:28 PM] qmc#4355
@cipi thanks a lot, will be uploading to github today

[21-Sep-18 10:30 PM] Bryan_Beus#6442
I'm grammar-polsihing and touching up the documentation section on 'how to use komodo-cli' and I have a question.

I hear some people say that when you enter a komodo-cli command for an asset chain, you should enter both `-ac_name=NAME` and `-ac_supply=SUPPLY` with each command.

Then I also observe that most people don't do this. Instead, they just do `-ac_name=NAME` and leave off the supply.

What should I indicate for best practices, in the documentation?

Do you need to enter `-ac_supply=SUPPLY` only when creating or connecting to a chain the first time? Or should you do it ever time?

[21-Sep-18 10:57 PM] Bryan_Beus#6442
On some of the parameters that we inherited from Bitcoin, we are using in our previous documentation that an address should be set to a 33 byte public key, and then the example listed looks to me like it's an address not from Komodo, but from Bitcoin.

Should I change these to Komodo addresses? Or is there a difference?

```
pubkey
------

``pubkey`` sets an address to use as a change address for all transactions. This value must be set to a 33 byte pubkey. All mined coins will also be sent to this address.

Usage:

As a default value in the coin's ``.conf`` file:

::

  pubkey=027dc7b5cfb5efca96674b45e9fda18df069d040b9fd9ff32c35df56005e330392
```

[21-Sep-18 10:57 PM] Alright#0419
only need ac_name for cli commands

[21-Sep-18 10:58 PM] Alright#0419
all the others are just for starting komodod

[21-Sep-18 10:58 PM] Bryan_Beus#6442
ok, great. so ac_supply for komodod, but no ac_supply for komodo-cli

[21-Sep-18 10:58 PM] Alright#0419
Hmmm, I don't think pubkey will work by putting in the conf

[21-Sep-18 10:58 PM] Alright#0419
at least someone told me it will not, have not tried it myself

[21-Sep-18 10:59 PM] Alright#0419
That's not an address btw

[21-Sep-18 10:59 PM] Alright#0419
rather a pubkey

[21-Sep-18 11:00 PM] Bryan_Beus#6442
Ok... 

I have only the vaguest of understandings of pubkey vs address...

[21-Sep-18 11:00 PM] Bryan_Beus#6442
Not sure if it's necessary right now.

[22-Sep-18 12:10 AM] Bryan_Beus#6442
Another question, in the Jumblr documentation we have this listed as the method for starting the Komodo daemon:

```
cd komodo/src

komodod &
```

[22-Sep-18 12:11 AM] Bryan_Beus#6442
What's the `&` for, and can I delete it?

[22-Sep-18 04:39 AM] Bryan_Beus#6442
And another question:

What command do we use to see, at the command line, how close a blockchain is to being caught up with the network?

I know `getinfo` shows me the blockchain best block, but I don't know what shows me where I am on my local machine?

[22-Sep-18 05:01 AM] Bryan_Beus#6442
hmm, maybe `getblockcount`?

Says that's for best block.. but maybe...

[22-Sep-18 05:11 AM] Bryan_Beus#6442
Hmm, it seems like `getblockcount` is giving me the amount of blocks I have currently, but that isn't what it says it should do in the documentation. 

Trying to find out what command gives me the total # of blocks in a fully synced chain now...

[22-Sep-18 05:42 AM] dukeleto#7326
@Bryan_Beus `&` puts the server into the background, so you can still type commands

[22-Sep-18 05:42 AM] Bryan_Beus#6442
ahh!

[22-Sep-18 05:42 AM] Bryan_Beus#6442
I've been wanting that...

[22-Sep-18 05:43 AM] Bryan_Beus#6442
thanks

[22-Sep-18 05:43 AM] dukeleto#7326
`-ac_supply=SUPPLY` is needed when creating a coin, or starting a full node to connect to it

[22-Sep-18 05:43 AM] Bryan_Beus#6442
right, @Alright clued me in on this stuff

[22-Sep-18 05:43 AM] dukeleto#7326
if you don't use it, or change the SUPPLY, you essentially create an entirely different coin

[22-Sep-18 05:43 AM] Bryan_Beus#6442
right

[22-Sep-18 05:43 AM] Bryan_Beus#6442
but that's just for initiation and creation, not for every command.

[22-Sep-18 05:43 AM] Bryan_Beus#6442
I had a bunch of other questions, you should be able to see them above.

[22-Sep-18 05:44 AM] dukeleto#7326
correct, only for starting daemon, which `./fiat/foo` does for you

[22-Sep-18 05:44 AM] dukeleto#7326
@Bryan_Beus are you testing `getblockcount` on an AC or KMD ?

[22-Sep-18 05:45 AM] Bryan_Beus#6442
tried both.

[22-Sep-18 05:46 AM] Bryan_Beus#6442
but I do think I've found a bug in a related command.

Whenever I call `getchaintips`, the chain crashes. Doesn't matter which chain. I've tried asset chains, Komodo, and a regtest chain.

Here's the gdb backtrace from right before the crash:

```
[Switching to Thread 0x7fffe8ff9700 (LWP 7389)]
std::_Rb_tree<CBlockIndex const*, CBlockIndex const*, std::_Identity<CBlockIndex const*>, CompareBlocksByHeight, std::allocator<CBlockIndex const*> >::_M_get_insert_unique_pos (__k=@0x7fffe8ff7f38: 0x0, 
    this=0x7fffe8ff7f50) at /usr/include/c++/5/bits/stl_tree.h:1810
1810    /usr/include/c++/5/bits/stl_tree.h: No such file or directory.
(gdb) backtrace
#0  std::_Rb_tree<CBlockIndex const*, CBlockIndex const*, std::_Identity<CBlockIndex const*>, CompareBlocksByHeight, std::allocator<CBlockIndex const*> >::_M_get_insert_unique_pos (__k=@0x7fffe8ff7f38: 0x0, 
    this=0x7fffe8ff7f50) at /usr/include/c++/5/bits/stl_tree.h:1810
#1  std::_Rb_tree<CBlockIndex const*, CBlockIndex const*, std::_Identity<CBlockIndex const*>, CompareBlocksByHeight, std::allocator<CBlockIndex const*> >::_M_insert_unique<CBlockIndex const*> (
    this=this@entry=0x7fffe8ff7f50, __v=@0x7fffe8ff7f38: 0x0)
    at /usr/include/c++/5/bits/stl_tree.h:1863
#2  0x0000555555716efe in std::set<CBlockIndex const*, CompareBlocksByHeight, std::allocator<CBlockIndex const*> >::insert (
    __x=@0x7fffe8ff7f38: 0x0, this=0x7fffe8ff7f50)
    at /usr/include/c++/5/bits/stl_set.h:494
#3  getchaintips (params=..., fHelp=<optimized out>)
    at rpcblockchain.cpp:1408
#4  0x000055555576b089 in CRPCTable::execute (this=<optimized out>, 
    strMethod="getchaintips", params=...) at rpcserver.cpp:672
```

