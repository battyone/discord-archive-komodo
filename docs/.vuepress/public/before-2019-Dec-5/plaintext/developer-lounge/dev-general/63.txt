==============================================================
Guild: Komodo
Channel: dev-general
Topic: A place for general developer talk – for everyone! | Documentation https://developers.komodoplatform.com | MoreDev Docs - https://docs.komodoplatform.com | Mastering CryptoConditions - https://github.com/KomodoPlatform/Mastering_CryptoConditions
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[24-Nov-18 03:45 AM] Mylo#8306
@sidd

[24-Nov-18 03:46 AM] Mylo#8306
@Bryan_Beus https://gist.github.com/ozh/cbce675ba35e0d336cff

{Embed}
https://gist.github.com/ozh/cbce675ba35e0d336cff
git cherry-pick within a pull request
git cherry-pick within a pull request. GitHub Gist: instantly share code, notes, and snippets.
https://avatars0.githubusercontent.com/u/223647?s=400&v=4

[24-Nov-18 03:51 AM] Bryan_Beus#6442
it's many changes all under one commit

[24-Nov-18 03:51 AM] Bryan_Beus#6442
I can do `git diff branch-a branch-b` and see the changes, but I don't know how to commit some and not others.

Copy/pasting from within the terminal isn't good, because it adds a `+` or `-` for each line.

[24-Nov-18 03:59 AM] Mylo#8306
I can’t say i have an efficient workflow for that, nor what PR etiquette is.
But doing something like
```
1.  git diff branch-a branch-b > mega.patch 
2.  sed -i ‘s/^\-//g’ mega.patch
3.  sed -i ‘s/^\+//g’ mega.patch
```
1.  Puts output to file `mega.patch`
2.  Replaces first char of each line (^) escaped (\) minus
3.  Same but with plus

That might give you something to work with.
In `mega.patch` you may be able to do some clever parsing to write smaller patches for individual files?

[24-Nov-18 04:00 AM] Mylo#8306
There’s a backslash in that empty bracket line 2 explanation

[24-Nov-18 04:00 AM] Mylo#8306
Maybe @dukeleto knows a thing or two about such a situation

[24-Nov-18 04:19 AM] blackjok3r#3181
I struggle like hell with that in git aswell... I ended up buying a 35" ultra wide monitor to copy paste each changed part of code from one branch/repio to another... which is the abaolute worst way of doing it ...

[24-Nov-18 04:20 AM] blackjok3r#3181
you realy need to know what your goign to do inadvance somehow, even when you cant ... and make branches from the correct branches accordingly

[24-Nov-18 04:20 AM] blackjok3r#3181
seems the only way i have found 😦

[24-Nov-18 04:22 AM] Bryan_Beus#6442
lol

[24-Nov-18 04:22 AM] Bryan_Beus#6442
ok, I'll give that a try. Thank you, @Mylo

[24-Nov-18 04:49 AM] dukeleto#7326
@blackjok3r that sounds horrible

[24-Nov-18 04:50 AM] dukeleto#7326
@Mylo @Bryan_Beus learning a bit more about Git can save you from these nightmarish situations

[24-Nov-18 04:50 AM] Bryan_Beus#6442
ya, it's on my to-do list...

[24-Nov-18 04:50 AM] Bryan_Beus#6442
how would you accomplish this?

[24-Nov-18 04:51 AM] dukeleto#7326
@Bryan_Beus what exactly are you trying to do?

[24-Nov-18 04:51 AM] dukeleto#7326
i saw this: ```it's many changes all under one commit
I can do git diff branch-a branch-b and see the changes, but I don't know how to commit some and not others.```

[24-Nov-18 04:51 AM] Bryan_Beus#6442
gcharang forked my repo and is working on it separately

[24-Nov-18 04:52 AM] Bryan_Beus#6442
he submitted all his suggested changes as a PR

[24-Nov-18 04:52 AM] Bryan_Beus#6442
some of it I can use, other stuff I can't use

[24-Nov-18 04:52 AM] Bryan_Beus#6442
I'm trying to pick through all his suggestions and only add the ones that are applicable

[24-Nov-18 04:52 AM] Bryan_Beus#6442
If I could make it so that I could see just one section that's been modified at a time, that would be best.

[24-Nov-18 04:53 AM] dukeleto#7326
@Bryan_Beus `git add -p foo.cpp`

[24-Nov-18 04:53 AM] Bryan_Beus#6442
it spans many files

[24-Nov-18 04:53 AM] dukeleto#7326
`git add -p` lets you add `partial` parts of files

[24-Nov-18 04:54 AM] dukeleto#7326
use `git add -p` many times, and you get to say "yes/no" to every changed chunk/hunk of text

[24-Nov-18 04:54 AM] dukeleto#7326
`git add -p foo1.cpp foo2.cpp`

[24-Nov-18 04:54 AM] Bryan_Beus#6442
do I need to indicate which branch to which branch?

[24-Nov-18 04:54 AM] dukeleto#7326
`git add -p .`

[24-Nov-18 04:54 AM] dukeleto#7326
`git add -p` helps you build your next commit

[24-Nov-18 04:55 AM] dukeleto#7326
instead of adding an entire file at a time, you can add changed parts of one/many files

[24-Nov-18 04:55 AM] dukeleto#7326
what is the URL to the PR?

{Reactions}
🚀 

[24-Nov-18 04:55 AM] Bryan_Beus#6442
oh, so make a new branch and pull his suggestions again, and then do `add -p`

[24-Nov-18 04:55 AM] Bryan_Beus#6442
https://github.com/siddhartha-komodo/komodo-docs-vuepress/pull/1

{Embed}
https://github.com/siddhartha-komodo/komodo-docs-vuepress/pull/1
cleans up file names to get better urls by gcharang · Pull Reques...
https://avatars1.githubusercontent.com/u/21151592?s=400&v=4

[24-Nov-18 04:55 AM] dukeleto#7326
ok, i will teach you some magic

[24-Nov-18 04:55 AM] blackjok3r#3181
I ned to save this 😄

[24-Nov-18 04:55 AM] dukeleto#7326
https://patch-diff.githubusercontent.com/raw/siddhartha-komodo/komodo-docs-vuepress/pull/1.patch

[24-Nov-18 04:56 AM] dukeleto#7326
omg! github makes patch files for you for free

[24-Nov-18 04:56 AM] dukeleto#7326
checkout a new branch

[24-Nov-18 04:56 AM] dukeleto#7326
git apply 1.patch

[24-Nov-18 04:56 AM] dukeleto#7326
then `git add -p .` and only stage the parts that you want for your next commit

[24-Nov-18 04:57 AM] dukeleto#7326
you can do this many times, and use `git add -p` to make many commits for you, if you wanted to say, split some of his changes into 3 commits

[24-Nov-18 04:57 AM] dukeleto#7326
just append .patch or .diff to a Github URL, and it will git you the thing

[24-Nov-18 04:57 AM] Bryan_Beus#6442
ok, so I made a new branch: `git checkout -b disposable`

[24-Nov-18 04:57 AM] Bryan_Beus#6442
now execute this in the terminal: `git apply 1.patch`?

[24-Nov-18 04:57 AM] Bryan_Beus#6442
trying

[24-Nov-18 04:58 AM] dukeleto#7326
download that file first, but yes

[24-Nov-18 04:58 AM] dukeleto#7326
```NAME
       git-apply - Apply a patch to files and/or to the index

SYNOPSIS
       git apply [--stat] [--numstat] [--summary] [--check] [--index] [--3way]
                 [--apply] [--no-add] [--build-fake-ancestor=<file>] [-R | --reverse]
                 [--allow-binary-replacement | --binary] [--reject] [-z]
                 [-p<n>] [-C<n>] [--inaccurate-eof] [--recount] [--cached]
                 [--ignore-space-change | --ignore-whitespace ]
                 [--whitespace=(nowarn|warn|fix|error|error-all)]
                 [--exclude=<path>] [--include=<path>] [--directory=<root>]
                 [--verbose] [--unsafe-paths] [<patch>...]```

[24-Nov-18 04:58 AM] dukeleto#7326
it has some options ... 😃

[24-Nov-18 04:58 AM] Bryan_Beus#6442
```
1.patch:13436: trailing whitespace.
To deploy to gh-pages at  
1.patch:26727: trailing whitespace.
           '',        
1.patch:26728: trailing whitespace.
          'create-kic.md', 
1.patch:26776: trailing whitespace.
1. Create a new assetchain or coin [https://docs.komodoplatform.com/komodo/create-Komodo-Assetchain.html](https://docs.komodoplatform.com/komodo/create-Komodo-Assetchain.html)  
1.patch:26778: trailing whitespace.
2. Install explorer [https://github.com/DeckerSU/komodo-explorers-install](https://github.com/DeckerSU/komodo-explorers-install)  
error: README.md: already exists in working directory
error: docs/.vuepress/dist: No such file or directory
error: patch failed: README.md:4
error: README.md: patch does not apply
error: docs/.vuepress/dist: No such file or directory
error: patch failed: README.md:1
error: README.md: patch does not apply
error: docs/.vuepress/dist: No such file or directory
error: patch failed: README.md:4
error: README.md: patch does not apply
error: patch failed: README.md:1
error: README.md: patch does not apply
error: patch failed: README.md:4
error: README.md: patch does not apply
error: docs/cryptoconditions/cc-channels.md: No such file or directory
error: docs/cryptoconditions/cc-dice.md: No such file or dir
```

[24-Nov-18 04:59 AM] Bryan_Beus#6442
lots of that type of stuff

[24-Nov-18 04:59 AM] dukeleto#7326
welcome to the joy of Git

[24-Nov-18 04:59 AM] dukeleto#7326
i have no idea what is going on in your diff, and which branch you branched from, and if his patch would apply to it

[24-Nov-18 04:59 AM] Bryan_Beus#6442
😃

[24-Nov-18 04:59 AM] dukeleto#7326
but you are now "having fun"

[24-Nov-18 04:59 AM] Bryan_Beus#6442
he added lots of files

[24-Nov-18 04:59 AM] Bryan_Beus#6442
I think that's the problem

[24-Nov-18 04:59 AM] dukeleto#7326
i would say that you should have your contributor make it easy to take their changes

[24-Nov-18 05:00 AM] Bryan_Beus#6442
ya, I think so

[24-Nov-18 05:00 AM] Bryan_Beus#6442
I'll talk with him about this and see if he can figure it out

[24-Nov-18 05:00 AM] dukeleto#7326
For instance, I would never put jl777 thru the pain of doing something like this, if I could fix it beforehand

[24-Nov-18 05:00 AM] Bryan_Beus#6442
I've spent hours on this and am getting nowhere.

[24-Nov-18 05:00 AM] dukeleto#7326
yeah, you should work with the contributor, to make it easy to pull in their changes

[24-Nov-18 05:00 AM] Bryan_Beus#6442
those are great suggestions, though. Thank you very much.

[24-Nov-18 05:00 AM] dukeleto#7326
Work on 1 thing per branch, etc..

[24-Nov-18 05:00 AM] Bryan_Beus#6442
Good to know. I'm learning, too.

[24-Nov-18 05:00 AM] dukeleto#7326
`git add -p` will help you one day, put it in your back pocket

[24-Nov-18 05:01 AM] Bryan_Beus#6442
yep

[24-Nov-18 05:01 AM] Bryan_Beus#6442
thank yo

[24-Nov-18 05:01 AM] Bryan_Beus#6442
you

[24-Nov-18 05:01 AM] dukeleto#7326
let's say you have 50 lines of changes, and actually, you want to commit it as 2 commits. That is the perfect use case

[24-Nov-18 05:01 AM] dukeleto#7326
`git add -p` one part, commit, then the second

[24-Nov-18 05:02 AM] dukeleto#7326
these parts can even be in the same file, which is like magic

[24-Nov-18 05:02 AM] dukeleto#7326
@blackjok3r tell me your crazy use case, I can probably help Git make your life better too

[24-Nov-18 05:03 AM] dukeleto#7326
A very long time ago, I was at the yearly Git developer conference (called the Git Together(!)), and I helped fixed a tiny bug in `git add -p`, which is how I got my first/only commit into Git 🤓

[24-Nov-18 05:04 AM] Bryan_Beus#6442
wow!

[24-Nov-18 05:04 AM] Bryan_Beus#6442
That's actually pretty cool.

[24-Nov-18 05:05 AM] blackjok3r#3181
I need to merge the streamer options and the momomo fixes to FSM ... I think in my case I actually have to do it manually tbh, as I merged FSM inot my branch and resolved manually about 100 merge conflicts 🙄

[24-Nov-18 05:05 AM] blackjok3r#3181
At least I have moved 99% of the staked code to its own file

[24-Nov-18 05:06 AM] blackjok3r#3181
so what I am going to do, is maully port the stuff inot FSM and then fork it again

[24-Nov-18 05:06 AM] blackjok3r#3181
and put the staked stuff back in... and try not to get into this mess agian, now I know somewhat what I am doing . 😃

[24-Nov-18 05:07 AM] blackjok3r#3181
Its best if I also leave it until the verus merge is sorted .. as the streamer options will totally mess up adding more ac_options

[24-Nov-18 05:09 AM] blackjok3r#3181
so adding all that after the verus stuff is already in will be the best way forrward ... should only take a day or to sort it out. not like its tens of thousands of lines of code.

[24-Nov-18 05:25 AM] dukeleto#7326
@blackjok3r make sure to enable `rerere`: https://git-scm.com/book/en/v2/Git-Tools-Rerere

[24-Nov-18 05:26 AM] dukeleto#7326
basically, it makes Git remember merge conflicts that you resolved, and does the same thing in the future

{Reactions}
👍 

[24-Nov-18 05:28 AM] dukeleto#7326
that one thing could drastically reduce your work, if there are many of the same changes you are dealing with, like a macro changing or a function signature changing over and over again

[24-Nov-18 05:28 AM] dukeleto#7326
it's something nice, when you are dealing with conflicts no matter what

[24-Nov-18 05:30 AM] blackjok3r#3181
the main thing I had issues with is the streamer ... it sits alongside ac_commission everywher ein the code

[24-Nov-18 05:30 AM] blackjok3r#3181
so whne james wnet changing things to do with that to add ac_founder

[24-Nov-18 05:30 AM] blackjok3r#3181
it went crazy at me

[24-Nov-18 05:31 AM] blackjok3r#3181
if I had merged streamer into FASM liek he asked at the start it would have been fine

[24-Nov-18 05:32 AM] Mylo#8306
Cool  @dukeleto I’m going to put myself thru my own -p test “for fun”.
I didn’t know how to say “work with your contributor to make things easier” in a gentlemanly manner 😃

[24-Nov-18 05:32 AM] dukeleto#7326
@blackjok3r so you have something that branched from FSM, and is now out-of-date, with many additions. Is that about right?

[24-Nov-18 05:33 AM] dukeleto#7326
@Mylo glad to help. Git has so many fascinating utilities, for those that want to learn more

[24-Nov-18 05:34 AM] blackjok3r#3181
no we are equal with FSM

[24-Nov-18 05:34 AM] blackjok3r#3181
vefore verus mege

[24-Nov-18 05:35 AM] blackjok3r#3181
the comit before ... but the staked thigns are not to be merge to FSM... only some of the changes..

[24-Nov-18 05:35 AM] dukeleto#7326
i ran a Git meeting for a while and many of the meetings was my doing live Git demos of random crazy stuff for people, answering questions, and learning cool new stuff from people smarter than me

[24-Nov-18 05:35 AM] blackjok3r#3181
and while I did dev most featurs in their won branch... they are all either now deleted or out of date ..or not working... and everyont is in one branch

