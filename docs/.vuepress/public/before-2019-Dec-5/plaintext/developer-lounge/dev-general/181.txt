==============================================================
Guild: Komodo
Channel: dev-general
Topic: A place for general developer talk – for everyone! | Documentation https://developers.komodoplatform.com | MoreDev Docs - https://docs.komodoplatform.com | Mastering CryptoConditions - https://github.com/KomodoPlatform/Mastering_CryptoConditions
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[06-Jun-19 03:49 PM] dukeleto#7326
right, but to twitter

[06-Jun-19 03:49 PM] dukeleto#7326
jl777 and sawlysawly are the same

[06-Jun-19 03:49 PM] dukeleto#7326
both are evil anons

[06-Jun-19 03:50 PM] dukeleto#7326
I don't agree. Anon-ness is a red-herring. It's code review.

[06-Jun-19 03:50 PM] dukeleto#7326
Code review is fucking boring and must be done. I have had jobs where 50% of my time or more, as a dev, was code review

[06-Jun-19 03:50 PM] dukeleto#7326
Big companies spend massive amounts of time on it, because it's needed to avoid disasters

[06-Jun-19 03:52 PM] dukeleto#7326
@jorian nobody reads tweets that talk about code review, but memepics, those get read

[06-Jun-19 03:52 PM] jorian#4555
i think you're the one insulting that guy with a meme

[06-Jun-19 03:52 PM] jorian#4555
but who cares

[06-Jun-19 03:52 PM] jorian#4555
the guy is a nobody

[06-Jun-19 03:53 PM] dukeleto#7326
memes are not the enemy, lol

[06-Jun-19 03:53 PM] dukeleto#7326
`how does their SSDLC procedure work?`

[06-Jun-19 03:53 PM] jorian#4555
it doesn't :troll:

[06-Jun-19 03:53 PM] dukeleto#7326
well, it's more complex

[06-Jun-19 03:53 PM] dukeleto#7326
Look at our c++ full node deps. Those are much more well known and controlled and reviewed

[06-Jun-19 03:54 PM] dukeleto#7326
it's that this particular gui wallet deps did not have a strict review process

[06-Jun-19 04:18 PM] ComputerGenie 👴🏼📢#7004
`i'm referring to this
and he has a point.`
`to us, jl777 is not anon anymore`
It's likely that someone has maybe looked me up, but other than reputation and comment history no one knows who I am and even less when I contributed code to BarterDEX GUI.
There's a valid point to not having checked code, but *who* the code came from is all but about moot

[06-Jun-19 04:20 PM] dukeleto#7326
@ComputerGenie 👴🏼📢 i assume you are psyops for NSA because, fuck, you are good

[06-Jun-19 04:21 PM] ComputerGenie 👴🏼📢#7004
LOL

[06-Jun-19 04:21 PM] dukeleto#7326
I don't know the odds, but 3 college friends went into military psy-ops and that freaked me out

[06-Jun-19 04:22 PM] dukeleto#7326
https://twitter.com/dukeleto/status/1136669446980939777

{Embed}
Duke Leto (@dukeleto)
https://twitter.com/dukeleto/status/1136669446980939777
@brampatelski @TheHackersNews @unix_root @manicode @RAPLPOSOW @ragelderblom @_Freakyclown_ @BrianVerm I agree with you that lack of full code review of changed dependencies is the core issue, but disagree anon-ness has anything to do with this. The lead dev, jl777, is anon...
Twitter

[06-Jun-19 04:22 PM] dukeleto#7326
@jorian i took your advice, no meme

[06-Jun-19 04:22 PM] ComputerGenie 👴🏼📢#7004
P.S. the "god" of cryptocurrency is *still* anon

[06-Jun-19 04:24 PM] ComputerGenie 👴🏼📢#7004
https://twitter.com/RealCompGenie/status/1136670136843329545

{Embed}
TheComputerGenie (@RealCompGenie)
https://twitter.com/RealCompGenie/status/1136670136843329545
@brampatelski @TheHackersNews @unix_root @manicode @RAPLPOSOW @ragelderblom @_Freakyclown_ @BrianVerm `How on earth did Komodo / Agama thought using anonymous dev's stuff was okay?`
So, you're saying you actually know, and can prove, who "satoshi" is, @brampatelski?
Twitter

[06-Jun-19 04:26 PM] dukeleto#7326
those people aren't cryptocoin people

[06-Jun-19 04:26 PM] dukeleto#7326
they are infosec people, and may tell you that BTC is a ponzi scam @ComputerGenie 👴🏼📢

[06-Jun-19 04:26 PM] dukeleto#7326
cultures are clashing

[06-Jun-19 04:27 PM] ComputerGenie 👴🏼📢#7004
`and may tell you that BTC is a ponzi scam`
As long as Core wants it to be a commodity and not a currency, it is (but that's a whole other topic 😜 )

[06-Jun-19 04:39 PM] klein#5233
@dukeleto  let there be memes

[06-Jun-19 04:58 PM] grewalsatinder#9653
according to that tweet, let's remove all code from Satoshi Nakamoto to get stated with.

[06-Jun-19 05:37 PM] Andy#1801
Have the exact details of the exploit been released yet?

[06-Jun-19 05:38 PM] gcharang#6833
@Andy have you seen this? https://blog.npmjs.org/post/185397814280/plot-to-steal-cryptocurrency-foiled-by-the-npm

{Embed}
The npm Blog
https://blog.npmjs.org/post/185397814280/plot-to-steal-cryptocurrency-foiled-by-the-npm
Plot to steal cryptocurrency foiled by the npm security team
Yesterday, the npm, Inc. security team, in collaboration with Komodo, helped protect over $13 million USD in cryptocurrency assets as we found and responded to a malware threat targeting the users of...
https://i.ytimg.com/vi/6Guadww8CnU/hqdefault.jpg

[06-Jun-19 05:39 PM] Andy#1801
Yes, but hasn't the malicious package been removed from npm?

[06-Jun-19 05:40 PM] jl777c#5810
now it has, but the damage is already done

[06-Jun-19 05:41 PM] Andy#1801
I know, I would like to understand how they did it. The bitpay-exploit code from last November is available, so you can see how they did it. I would like to do the same here so we can protect ourselves from it in the future.

[06-Jun-19 05:42 PM] Andy#1801
For example the event-stream vulnerability targeted their build step specifically

[06-Jun-19 05:44 PM] jl777c#5810
the module referenced an agama "internal" variable that had the passphrase, i guess with javascript there are no local variables

[06-Jun-19 05:47 PM] Andy#1801
Interesting

[06-Jun-19 05:48 PM] Andy#1801
Do you have a link to the wallet that was affected? I would have assumed that build tools nowadays wrap everything in an anonymous function, in which, as far as I know, variables cannot be overwritten.

[06-Jun-19 05:48 PM] Andy#1801
I mean the actual repo

[06-Jun-19 05:49 PM] Andy#1801
I found many different repos, but some were labelled as “desktop” so I’m a bit confused

[06-Jun-19 05:49 PM] jl777c#5810
i dont have any copies, but i dont deal with the website

[06-Jun-19 05:50 PM] Andy#1801
Ok

[06-Jun-19 05:51 PM] Andy#1801
Maybe it’s good to let a bit of time pass, but I hope you release the code at some point to help others protect themselves.

[06-Jun-19 05:52 PM] jl777c#5810
i am sure someone around here has backup copies

[06-Jun-19 05:53 PM] Andy#1801
That would be amazing. And if not publically, I would appreciate if someone could send me a private copy. I’m planning a major overhaul of our complete app security wise, and I would like to consider all attack vectors.

[06-Jun-19 05:59 PM] gcharang#6833
@Andy 
https://github.com/KomodoPlatform/EasyDEX-GUI
https://github.com/KomodoPlatform/Agama
https://github.com/KomodoPlatform/agama-wallet-lib

{Embed}
https://github.com/KomodoPlatform/EasyDEX-GUI
KomodoPlatform/EasyDEX-GUI
Discontinued software - DONT USE - only for educational purpose - KomodoPlatform/EasyDEX-GUI
https://avatars2.githubusercontent.com/u/21276113?s=400&v=4

{Embed}
https://github.com/KomodoPlatform/Agama
KomodoPlatform/Agama
Discontinued software - DONT USE - only for educational purpose - KomodoPlatform/Agama
https://avatars2.githubusercontent.com/u/21276113?s=400&v=4

{Embed}
https://github.com/KomodoPlatform/agama-wallet-lib
KomodoPlatform/agama-wallet-lib
Common library for cryptocurrencies. Contribute to KomodoPlatform/agama-wallet-lib development by creating an account on GitHub.
https://avatars2.githubusercontent.com/u/21276113?s=400&v=4

[06-Jun-19 06:02 PM] Bryan_Beus#6442
@Deleted User 

> @Bryan_Beus problem is not the language, we could be using python, go, or elm, the problem would still remain, because the root cause is the usage of the package manager without proper supervision.

Right, I understand. JS is the language i know best (which isn't saying much).

The language is fairly easy to use. I don't get why people complain about it, unless they're talking pre-ES6.

Compared to C++, JS is a cinch.

But the way we've built the JS environment is the issue, like you said. 

I'd be interested to look into WebAssembly. I know the basic talking points about it, but am not far enough into C++ yet to actually use it. 

I wonder if the upcoming C++ package manager will make C++ as big of a secure risk...

[06-Jun-19 06:03 PM] jl777c#5810
does javascript support local variables? or static?

[06-Jun-19 06:03 PM] Andy#1801
@gcharang thanks, now only the actual code of the malicious package is missing

[06-Jun-19 06:03 PM] jl777c#5810
having all the variables global is a giant risk

[06-Jun-19 06:04 PM] Andy#1801
Usually variables are scoped to the function

[06-Jun-19 06:04 PM] jl777c#5810
but all are globally accessible?

[06-Jun-19 06:04 PM] Andy#1801
Not that I know of

[06-Jun-19 06:05 PM] Andy#1801
If you do 
x = 5
Then yes

[06-Jun-19 06:05 PM] Bryan_Beus#6442
@jl777c 

It supports global variables in the browser.

[06-Jun-19 06:05 PM] Andy#1801
But if you do
var/let/const x = 5 then not

[06-Jun-19 06:06 PM] Bryan_Beus#6442
I think you scope it to the `window` object or something. Can't remember, never used it.

[06-Jun-19 06:06 PM] Andy#1801
If you simply write x=5 then it’s equivalent to window.x=5 which is global

[06-Jun-19 06:06 PM] Bryan_Beus#6442
Of course, browsers would have to have security checks against that.

[06-Jun-19 06:06 PM] Andy#1801
If you use a linter it will throw an error

[06-Jun-19 06:06 PM] Bryan_Beus#6442
I think I played around with this like a year ago or something.

[06-Jun-19 06:07 PM] Andy#1801
The reason this us allowed is because all global functions belong to the window object

[06-Jun-19 06:07 PM] Bryan_Beus#6442
ahh

[06-Jun-19 06:07 PM] Bryan_Beus#6442
okay

[06-Jun-19 06:07 PM] Andy#1801
So if you do
new Promise()
It’s actually calling
new window.Promise()

[06-Jun-19 06:07 PM] Andy#1801
So it’s for convenience I guess

[06-Jun-19 06:08 PM] Andy#1801
But I’m quite curious how a variable defined there ended up in the global space

[06-Jun-19 06:08 PM] Andy#1801
I’ll check that when I’m on the computer

[06-Jun-19 06:09 PM] Andy#1801
I guess once you have a reference to a sensitive variable it’s over anyway

[06-Jun-19 06:09 PM] Andy#1801
Yeah

[06-Jun-19 06:10 PM] jl777c#5810
so what happens if an upstream module is updated with a critical security update to path a vulnerability?

[06-Jun-19 06:10 PM] jl777c#5810
if you update right away, a real exploit can sneak in

[06-Jun-19 06:11 PM] jl777c#5810
if you dont, you are exposed to the announced vulnerability

[06-Jun-19 06:11 PM] Andy#1801
You have to lock them to the exact version.

[06-Jun-19 06:11 PM] jl777c#5810
so the "critical update" is just a minor update

[06-Jun-19 06:12 PM] jl777c#5810
is it possible to change the code without changing the version?

[06-Jun-19 06:12 PM] Andy#1801
You have to manually update every dependency

[06-Jun-19 06:12 PM] jl777c#5810
but modules are allowed to make requests over the internet

[06-Jun-19 06:13 PM] jl777c#5810
what stops it from getting code externally? at first it is benign

[06-Jun-19 06:13 PM] jl777c#5810
so version numbers dont matter

[06-Jun-19 06:13 PM] jl777c#5810
everyone is all gungho about all the automated build stuff...

[06-Jun-19 06:13 PM] Andy#1801
Well a hacker will certainly play by the rules when trying to exploit an app 😉

[06-Jun-19 06:14 PM] jl777c#5810
with iguana, i wrote virtually everything from scratch

[06-Jun-19 06:14 PM] Andy#1801
You cannot assume that a patch version upgrade is just that. Unless it is enforced by the ecosystem (like it is in elm).

[06-Jun-19 06:15 PM] Andy#1801
The important question is if the dev can change the code that is on npm after it has already been released

[06-Jun-19 06:15 PM] Andy#1801
Because then even locking to a fixed version won’t help

[06-Jun-19 06:16 PM] Andy#1801
But trusting code hosted on npm is a bad idea anyway. Because nobody reviews the minified code there... people just look at the git repo, but those codes dont have to match

[06-Jun-19 06:18 PM] Andy#1801
I keep coming to the conclusion that the ONLY way to be TRULY safe, is if you copy paste the source code of every singe dependency and sub dependency into your app by hand and review it. Which is just impossible if you don’t have a whole team of developers dedicated to doing that...

[06-Jun-19 06:18 PM] dukeleto#7326
yes it is scary

[06-Jun-19 06:20 PM] Andy#1801
The problem is that many js repos need to be “built” somehow

[06-Jun-19 06:21 PM] Andy#1801
Typescript, babbel, etc

[06-Jun-19 06:21 PM] Andy#1801
But if npm built all the dependencies themselves that would already be a massive improvement

[06-Jun-19 06:23 PM] ComputerGenie 👴🏼📢#7004
for package, you can always lock to a specific commit of a dependency (albeit that doesn't change sub-dependencies  from doing whatever)
i.e.:
`  "merkle-bitcoin": "git+https://github.com/joshuayabut/merkle-bitcoin.git#3606036e3a44aa46e5a16cc6d7beea8e49dec8ef",`

[06-Jun-19 06:24 PM] dukeleto#7326
very often, you inherit thousands of nodeJS dependencies

[06-Jun-19 06:25 PM] ComputerGenie 👴🏼📢#7004
yeah, that what I mean that you cannot stop while still using them

[06-Jun-19 06:25 PM] dukeleto#7326
just from the start, I had a 10,000 line package-lock.json for Hush-NG code I inherited

{Reactions}
😂 

[06-Jun-19 06:25 PM] dukeleto#7326
most people are in that kind of situation

[06-Jun-19 06:31 PM] Andy#1801
As mentioned before, the problem is often that js lacks a lot of basic/useful features, so instead of programming it over and over again, you just include a package that does that specific task well. And then you end up with 1000s of small dependencies that is impossible to review.

[06-Jun-19 06:33 PM] Andy#1801
I would actually prefer if there is a huge single library with 0 dependencies that has all the code in one place. So instead of having 1000 small libraries of which the changes are almost impossible to track, you would have 1 huge library with 1000 smaller files. And then you pretty much just have to review that one. Still a pain in the ***, but I would personally prefer that.

