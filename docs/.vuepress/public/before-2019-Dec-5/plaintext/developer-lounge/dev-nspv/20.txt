==============================================================
Guild: Komodo
Channel: dev-nspv
Topic: ./komodod -nSPV=1 -ac_reward=100000000  -ac_name=NSPV -ac_supply=10000000000 -ac_cc=2 -addressindex=1 -spentindex=1 -connect=5.9.102.210 &
./komodod -nSPV=1 -addnode=5.9.253.195 &
https://drive.google.com/drive/folders/1ZvzrhNBQgroejTKPl0kCOTJ8h7XMnO2M?usp=sharing
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[13-Jul-19 07:29 PM] TonyL#3577
on NSPV it's ```"retcodes": [
    -2004
  ]
``` have to check on ILN or KMD maybe

[13-Jul-19 07:30 PM] jl777c#5810
no rush, it does for me now, so it should work much more reliably in general

{Reactions}
üöÄ (2) 

[15-Jul-19 04:27 PM] jl777c#5810
updated to a new nSPV hardfork and changed the seed node for KMD, now there is a mempool query function that lets you get the full mempool, check if a specific txid is in the mempool, check if a specific utxo (txid/vout) is spent in the mempool, or even if a specific address received any funds with a mempool txid

[15-Jul-19 04:28 PM] jl777c#5810
still need to change all CC queries of mempool to use this function, but from what i can tell, once i do that we should have almost all CC rpc working as they should, though of course some will be quite slow

[17-Jul-19 12:34 PM] jl777c#5810
latest version supports most of the mempool usage inside CC, so most CC rpc calls should work, with just a few exceptions

[18-Jul-19 05:55 PM] dukeleto#7326
I have merged the latest FSM branch to Hush which includes nSPV, looking forward to playing with it on the Hush network in the future

[18-Jul-19 05:57 PM] jl777c#5810
let me make sure it is the latest version, there were some recent changes, especially to support CC

[18-Jul-19 06:01 PM] jl777c#5810
it wasnt

[18-Jul-19 06:02 PM] jl777c#5810
just updated FSM with support for most CC via nSPV, it also adds skipcount to listunspent and listtransactions

[19-Jul-19 02:28 AM] dukeleto#7326
i was having some issues syncing that merge to the network, so I will try to merge the latest stuff

[19-Jul-19 05:07 AM] jl777c#5810
strange, it shouldnt change behavior of normal mode sync

[19-Jul-19 07:33 AM] grewalsatinder#9653
Hey @Slyris 
Hope you doing well.
How's the progress going with nSPV implementation with breadwallet-core library? üôÇ

[19-Jul-19 08:04 AM] Slyris#2880
Hello @grewalsatinder I'm not on this part actually, i was working on the dashboard (back-end) project

[19-Jul-19 08:10 AM] Slyris#2880
As I am a beginner in the `komodo ecosystem`. I preferred to look into a more accessible project for a start. Now that I understand the ecosystem better and better I will be able to do more interesting things. I think I still do not have the knowledge for `nSPV`

[19-Jul-19 08:28 AM] grewalsatinder#9653
@Slyris oh I guess then I tagged mistakenly you thinking you are the dev working on breadwallet-core library for nSPV üòÖ

[19-Jul-19 08:29 AM] grewalsatinder#9653
don't remember who was that dev, and wish to get an update on it.

[19-Jul-19 08:29 AM] grewalsatinder#9653
@jl777c

[19-Jul-19 08:29 AM] Slyris#2880
nSPV interest me a lot, I talk about being able to participate at the beginning, finally I work on something else with @ca333

[19-Jul-19 08:30 AM] grewalsatinder#9653
hmm.... okay... so it was you?

[19-Jul-19 08:30 AM] grewalsatinder#9653
any idea if anyone working on breadwallet-core library?

[19-Jul-19 08:30 AM] Slyris#2880
And I think it's better like that, I still do not have enough knowledge to work on features like nSPV currently.

[19-Jul-19 08:30 AM] Slyris#2880
I have no idea to be honest with you

[19-Jul-19 08:30 AM] grewalsatinder#9653
no problem mate. thanks for quick reply üëç

[19-Jul-19 08:30 AM] Slyris#2880
Your welcome

[19-Jul-19 08:30 AM] grewalsatinder#9653
glad you still found something else to work on here üòâ

[19-Jul-19 08:31 AM] Slyris#2880
Yeah, i will work litteraly my whole time on Komodo soon

{Reactions}
üëç (2) 

[19-Jul-19 08:31 AM] grewalsatinder#9653
very exciting!

[19-Jul-19 08:31 AM] Slyris#2880
Ahah yes, let's build the future.

{Reactions}
üíØ (2) ‚úÖ (2) 

[19-Jul-19 08:41 AM] jl777c#5810
@grewalsatinder i decided not to use breadwallet and am making libnspv

[19-Jul-19 08:41 AM] jl777c#5810
based on libbtc

[19-Jul-19 08:43 AM] jl777c#5810
libbtc has a headers only SPV client in it, which means it also does all the p2p messaging

[19-Jul-19 08:43 AM] jl777c#5810
and that is really all that is needed to connect to the komodo_nSPV files

{Reactions}
üëç (2) üòÉ (2) üòé (2) KMD (2) 

[19-Jul-19 08:47 AM] grewalsatinder#9653
oh perfect! I can trust it'll be top class work since you are on to it @jl777c 
Thanks for answering üòÉ

[19-Jul-19 04:38 PM] dukeleto#7326
@jl777c libnspv based on libbtc sounds lovely. Great idea. I think that will also make it easier to use on embedded devices

[19-Jul-19 04:43 PM] jl777c#5810
pure C nSPV superlite

{Reactions}
üòé 

[20-Jul-19 02:05 PM] jl777c#5810 (pinned)
@TonyL  @grewalsatinder @dukeleto @Slyris   @Mihailo    i made a new nSPV client based on libbtc, i call it libnspv and my jl777 branch has all but nspv_spend working. you need to use curl to invoke it and only NSPV, KMD and BTC are supported. it should work with the existing nSPV fullnodes. for BTC it will behave as libbtc does, ie. as a headers only SPV. i guess i will add ILN next so I can verify the notarizations functions are working. Other than having to use curl vs. cli, the overall functionality should be very close (identical?) to the nSPV=1 clients, just without any CCtx ability

it is 100% in C and stripped executable size is 250kb, i think mem usage is very small. also, it should build in both osx and windows, it uses autogen.sh and ./configure

known bugs are: peers need to be in the seedlist and blockhash calc is wrong, spend is not implemented yet. single rpc call at a time, api is just to allow testing. userpass or any other measures is absent

~/libnspv/src/tools/nSPV_testvectors has a bunch of curl calls for NSPV chain. just change the port to call another chain, you can add a "coin" field for error checking, but basically if the nspv gets a request it will assume it is for it.

{Reactions}
shexy (2) üëç (2) üëè (2) üòé KMD üî• 

[20-Jul-19 02:08 PM] Slyris#2880
@jl777c I'm looking the code of nSPV_superlite.h right now

[20-Jul-19 02:09 PM] jl777c#5810
the files in libnspv are based on the ones in komodo repo, but i had to make changes to make it happy with pure C

[20-Jul-19 02:13 PM] Slyris#2880
https://github.com/jl777/libnspv/blob/3c016b58de87db7bd248cd52eca4e8e277d08630/src/tools/nSPV_superlite.h#L72

{Embed}
https://github.com/jl777/libnspv/blob/3c016b58de87db7bd248cd52eca4e8e277d08630/src/tools/nSPV_superlite.h
jl777/libnspv
Tiny Bitcoin Library written in C, with nSPV added - jl777/libnspv
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[20-Jul-19 02:13 PM] Slyris#2880
`==` ??

[20-Jul-19 02:13 PM] Slyris#2880
is this a mistake you want to do `=` no ?

[20-Jul-19 02:14 PM] Slyris#2880
@jl777c

[20-Jul-19 02:14 PM] jl777c#5810
yes! a bug, replicated many places. fixing

[20-Jul-19 02:15 PM] Slyris#2880
We are looking it with a friend that code in C

[20-Jul-19 02:15 PM] Slyris#2880
i will report more with him if we found

[20-Jul-19 02:17 PM] jl777c#5810
oh, to run NSPV chain, just do ./nspv

[20-Jul-19 02:17 PM] jl777c#5810
for any other coin, ./nspv COIN

[20-Jul-19 02:18 PM] Slyris#2880
im not sure but https://github.com/jl777/libnspv/blob/3c016b58de87db7bd248cd52eca4e8e277d08630/src/tools/nSPV_superlite.h#L266 you initialize a second time at 0 n no ?

{Embed}
https://github.com/jl777/libnspv/blob/3c016b58de87db7bd248cd52eca4e8e277d08630/src/tools/nSPV_superlite.h
jl777/libnspv
Tiny Bitcoin Library written in C, with nSPV added - jl777/libnspv
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[20-Jul-19 02:18 PM] Slyris#2880
@Doom Hello

[20-Jul-19 02:18 PM] Doom#9021
Hey !

[20-Jul-19 02:18 PM] jl777c#5810
ILN supported now

[20-Jul-19 02:18 PM] Slyris#2880
Thank's for spotting the `==` @Doom

[20-Jul-19 02:19 PM] Doom#9021
No prob @Slyris ‚ù§

[20-Jul-19 02:19 PM] jl777c#5810
thanks!

[20-Jul-19 02:19 PM] jl777c#5810
in C, it is not initialized if just declared

{Reactions}
üëç 

[20-Jul-19 02:19 PM] Slyris#2880
```c
int32_t i,n,flag = 0;
```

[20-Jul-19 02:19 PM] Slyris#2880
It initialize only flag here ?

[20-Jul-19 02:20 PM] Slyris#2880
https://github.com/jl777/libnspv/blob/3c016b58de87db7bd248cd52eca4e8e277d08630/src/tools/nSPV_superlite.h#L262

{Embed}
https://github.com/jl777/libnspv/blob/3c016b58de87db7bd248cd52eca4e8e277d08630/src/tools/nSPV_superlite.h
jl777/libnspv
Tiny Bitcoin Library written in C, with nSPV added - jl777/libnspv
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[20-Jul-19 02:20 PM] Doom#9021
Yep I think so

[20-Jul-19 02:20 PM] jl777c#5810
yes, only flag is initialized. the rest are whatever values from the stack

[20-Jul-19 02:20 PM] Slyris#2880
Oh i was not aware, i was sure the 3 variable was initialized to zero in this case

[20-Jul-19 02:21 PM] Doom#9021
But since `n` is only used inside the `if` block, maybe its declaration could be moved to that scope too

[20-Jul-19 02:21 PM] jl777c#5810
in C++ i think so

[20-Jul-19 02:21 PM] jl777c#5810
@Doom my style is to declare all locals at the top of the function. that way i can easily see the stack usage of each function

[20-Jul-19 02:22 PM] jl777c#5810
maybe it doesnt matter so much now, but i used to have to get code working with 4kb stack

[20-Jul-19 02:22 PM] Slyris#2880
cJSON is your library @jl777c  ?

[20-Jul-19 02:22 PM] jl777c#5810
dave gamble made it, but i added convenience functions to it

[20-Jul-19 02:22 PM] Slyris#2880
ok

[20-Jul-19 02:24 PM] Doom#9021
@jl777c Makes sense for embedded systems, maybe less so if your code runs on a regular computer :p

[20-Jul-19 02:25 PM] jl777c#5810
i found that code for embedded systems runs on desktops, but not the other way around

[20-Jul-19 02:25 PM] Doom#9021
That sure is true :p

[20-Jul-19 02:25 PM] jl777c#5810
by coding to embedded systems as much as possible, it allows maximum coverage

[20-Jul-19 02:25 PM] jl777c#5810
libnspv uses libevent and tcp/ip sockets as the only system dependencies other than a system clock

[20-Jul-19 02:26 PM] jl777c#5810
it uses no HDD

[20-Jul-19 02:26 PM] Doom#9021
However, defining the platform you write for and taking advantage of its features is interesting too

[20-Jul-19 02:26 PM] jl777c#5810
unless using legacy BTC

[20-Jul-19 02:26 PM] Doom#9021
Depends what your target is with this library !

[20-Jul-19 02:26 PM] jl777c#5810
i want it to run everywhere

[20-Jul-19 02:27 PM] Slyris#2880
i have a question about the usage of     `memset(spenttxidp,0,sizeof(*spenttxidp));`

Why not use bzero @jl777c  ?

[20-Jul-19 02:27 PM] Doom#9021
Then minimizing dependencies is indeed crucial

[20-Jul-19 02:27 PM] Slyris#2880
Is this better to use memset ?

[20-Jul-19 02:27 PM] Doom#9021
`bzero` is deprecated @Slyris

[20-Jul-19 02:27 PM] Slyris#2880
üòÆ

[20-Jul-19 02:27 PM] jl777c#5810
bzero is for strings?

[20-Jul-19 02:28 PM] jl777c#5810
memset and memcpy have worked for decades, why change?

[20-Jul-19 02:28 PM] jl777c#5810
memcmp too

[20-Jul-19 02:28 PM] Doom#9021
Nah `bzero` works with raw data too

[20-Jul-19 02:28 PM] Slyris#2880
memcmp is great

[20-Jul-19 02:28 PM] Doom#9021
But it's considered legacy / deprecated

[20-Jul-19 02:28 PM] Doom#9021
The `mem*` functions are pretty good and heavily optimized, so they are cool üòÉ

[20-Jul-19 02:29 PM] Slyris#2880
okok n o problem, i'm still looking

[20-Jul-19 02:32 PM] Slyris#2880
Should we review : https://github.com/jl777/libnspv/blob/jl777/src/tools/nSPV_utils.h too @jl777c  ?

{Embed}
https://github.com/jl777/libnspv/blob/jl777/src/tools/nSPV_utils.h
jl777/libnspv
Tiny Bitcoin Library written in C, with nSPV added - jl777/libnspv
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[20-Jul-19 02:33 PM] jl777c#5810
that isnt quite done yet, still need to convert all the blockchain specific functions to libbtc internals

[20-Jul-19 02:34 PM] Doom#9021
If the memory footprint is to be considered, the `bool` type could be used sometimes

[20-Jul-19 02:34 PM] Slyris#2880
https://github.com/jl777/libnspv/blob/jl777/src/tools/nSPV_utils.h#L572 still one vector here

{Embed}
https://github.com/jl777/libnspv/blob/jl777/src/tools/nSPV_utils.h
jl777/libnspv
Tiny Bitcoin Library written in C, with nSPV added - jl777/libnspv
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[20-Jul-19 02:34 PM] Doom#9021
(Might change nothing sometimes because of alignment, but it's still a good practice)

[20-Jul-19 02:34 PM] jl777c#5810
yes, but those almost always get expanded to a byte

[20-Jul-19 02:35 PM] jl777c#5810
@Slyris that is inside #ifdef later

[20-Jul-19 02:35 PM] Doom#9021
(They are always expanded to a byte, but a byte is better than a double word :p)

[20-Jul-19 02:35 PM] jl777c#5810
i use uint8_t for all bools

