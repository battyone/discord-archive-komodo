==============================================================
Guild: Komodo
Channel: dev-scalability
Topic: Discussion about Komodo scalability. Komodo has demonstrated 20,000 TPS.
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[30-May-18 11:54 PM] blackjok3r#0000
Morning guys. Do mining/seed nodes need update. Also @libscott the seednode list you are using is wrong, but none of those nodes are up anymore so should not affect things.

[30-May-18 11:55 PM] libscott#0000
hi blackjok3r, thank you, yea sometimes it's getting stuck since there's not alot of seeds up

[30-May-18 11:56 PM] blackjok3r#0000
one sec, I have 2 seeds, its mining like 2.5chains per core, so it could be struggling a little bit.

[30-May-18 11:56 PM] libscott#0000
does this mean that trying to generate a proof for an old block will make a merkle branch with 200k nodes?

[30-May-18 11:56 PM] blackjok3r#0000
`195.201.167.37` `195.201.167.38`

[30-May-18 11:57 PM] blackjok3r#0000
all 64 chains are on those servers. I will update them now

[30-May-18 11:57 PM] blackjok3r#0000
maybe I need to split the mining a little bit more. But blocks seem to be flowing at a steady rate.

[30-May-18 11:57 PM] libscott#0000
am i still using the 4096 branch?

[30-May-18 11:58 PM] blackjok3r#0000
momo is there now

[30-May-18 11:58 PM] blackjok3r#0000
has first seed and `mineassets` and `sync_assets` changed to cc=3

[30-May-18 11:58 PM] libscott#0000
or is that because the ccid will push it up to 200k... right that makes more sense

[30-May-18 11:59 PM] jl777#0000
@SHossain: updated komodod jl777 and dev branch with some fixes for new MoMdepth encoding

[31-May-18 12:00 AM] jl777#0000
@@libscott the reason i merged it in is that the notarizatoin OP_RETURN parsing is categorizing things as notarizations with MoM data or with MoM data and MoMoMdata

[31-May-18 12:00 AM] jl777#0000
so it would break the parsing to put it into the MoMoM data what is a forward notarization

[31-May-18 12:00 AM] shossain#0000
ok. using komodod from your repo now

[31-May-18 12:01 AM] jl777#0000
certainly it could be fixed, but it was a painful debugging to get everything lined up properly and parsed. overloading MoMdepth is ugly, but doesnt affect the parsed data size for the different types of notarization

[31-May-18 12:02 AM] jl777#0000
@@SHossain it could be you need to wait for @libscott to rebase, not sure if it will create compatible notarizations using my branch, but at least we can verify that it notarizes properly with the CCid.3 detected and that the getinfo call updates with the right notarization data without crashing

[31-May-18 12:02 AM] jl777#0000
then when @libscott rebases, i think it has a chance of working the full cycle

[31-May-18 12:04 AM] blackjok3r#0000
Ok. I wont update miners until this has been merged.

[31-May-18 12:05 AM] libscott#0000
ah ok I have to do rebase... 1 sec

[31-May-18 12:05 AM] libscott#0000
ok so in that case I can remove the ccid from MoMoMdata too right? jl777

[31-May-18 12:05 AM] shossain#0000
ok. will test your repo before i am off to sleep. komodo compiling now

[31-May-18 12:07 AM] shossain#0000
using jl777 branch

[31-May-18 12:07 AM] jl777#0000
@@libscott you can certainly remove the lower bits of CCid if you want, but I think we will need the upper bits of CCid for the feature toggling

[31-May-18 12:08 AM] jl777#0000
it seems we are very close to a full MoMoM notarization!

[31-May-18 12:08 AM] libscott#0000
we have what was previously MoMoMdepth for that

[31-May-18 12:08 AM] libscott#0000
4 empty bytes after MoMoM

[31-May-18 12:08 AM] jl777#0000
ok, as I said MoMoMdata is totally up to you

[31-May-18 12:09 AM] libscott#0000
just wanted to check that ccid will be there next to MoMdepth in forward and backward notarisations

[31-May-18 12:10 AM] jl777#0000
the lower 16 bits will be in the upper 16 of MoMdepth, yes it is a fixed space allocation for both forward and backward notarizations

[31-May-18 12:11 AM] libscott#0000
👍

[31-May-18 12:18 AM] shossain#0000
using jl777 branch of komodo and iguana

[31-May-18 12:18 AM] shossain#0000
exchanges loop.(PAX)
02a4a6c21b41a3903ef9ca37617d1b93fe74c9b5d5cc72d67b4e3524981f334acd DPOW with pubkey.(02a4a6c21b41a3903ef9ca37617d1b93fe74c9b5d5cc72d67b4e3524981f334acd) RFUN8XezmmZt47pzVmoz7aN5LtFNV9pyuj.valid1 TXSCL -> KMD RFUN8XezmmZt47pzVmoz7aN5LtFNV9pyuj.valid1, num.1 freq.2 minsigs.2 CCid.3
{"result":"success","tag":"12425201160372632994"}
02a4a6c21b41a3903ef9ca37617d1b93fe74c9b5d5cc72d67b4e3524981f334acd DPOW with pubkey.(02a4a6c21b41a3903ef9ca37617d1b93fe74c9b5d5cc72d67b4e3524981f334acd) RFUN8XezmmZt47pzVmoz7aN5LtFNV9pyuj.valid1 TXSCL000 -> KMD RFUN8XezmmZt47pzVmoz7aN5LtFNV9pyuj.valid1, num.2 freq.2 minsigs.2 CCid.3
{"result":"success","tag":"9750163330060565151"}

[31-May-18 12:20 AM] jl777#0000
I guess to make a valid MoMoM notarization a rebased momo is needed, so for now all we can do is wait for a notarization to happen and make sure getinfo call is sane

[31-May-18 12:21 AM] jl777#0000
it looks like it did the notarization, so when it confirms it will print a new notarization and hopefully will parse the encoded CCid properly

[31-May-18 12:24 AM] shossain#0000
2nd notarization happened in TXSCL chain

[31-May-18 12:34 AM] libscott#0000
ok merged jl777/dev into momo

[31-May-18 01:09 AM] blackjok3r#0000
Miners are on latest momo branch. all chains are running and mining blocks.

[31-May-18 04:58 AM] blackjok3r#0000
smk762 Hey dude when you are around we need to suss our exactly what data you need for stats. I have docker-compose working locally for TxBlaster. I just left it running for over an hour and hand no faliures. I think running docker inside a VM is slowing it down a lot, as single TX's are not filling blocks. I'm not too concerned about this for now, as we can just start 2 containers as blasters to keep mempool full if one isn't enough.

[31-May-18 04:58 AM] smk762#0000
Cool, ready to get real data linked up again, but at work for another 3 or 4 hrs.

[31-May-18 04:58 AM] blackjok3r#0000
no worries. I dont have any way of pushing it to the DB either for now. I am just testing with pushing it out to a text file.

[31-May-18 04:58 AM] blackjok3r#0000
Once @Mylo is around we can look at trying out the AWS DB.

[31-May-18 05:21 AM] smk762#0000
Timestamp, chain name, block num, txcount, payment count, connected chain count.  That should cover the metrics im displaying.

[31-May-18 05:22 AM] smk762#0000
Other stuff can be derived locally, or at source. Or I can drop a couple of the status bars.

[31-May-18 05:24 AM] smk762#0000
Output at http://www.cryptocartography.io/txscl_vis/ shows the metrics currently tracked/derived

[31-May-18 06:40 AM] blackjok3r#0000
given timestamp, blockheight, txcount, block-size can you calculate payemnts?

[31-May-18 06:40 AM] blackjok3r#0000
```
{
  "size": 6027,
  "height": 858000,
  "time": 1527743831
  "totaltx": 5
}
```

[31-May-18 06:43 AM] imylomylo#0000
Payments is reverse calculator method.
Otherwise can also send the raw transaction into fb

[31-May-18 06:43 AM] imylomylo#0000
Db

[31-May-18 06:45 AM] blackjok3r#0000
Thats what I am trying to make it oputput but I am so noob at jq I am having a bit of trouble

[31-May-18 06:45 AM] blackjok3r#0000
No way sending the entire block or everyTX is a good idea

[31-May-18 06:45 AM] blackjok3r#0000
too mcuh data

[31-May-18 06:45 AM] imylomylo#0000
I was reading AWS aurora product yesterday as an alternative for every tx but need to see ease of implementation

[31-May-18 06:46 AM] blackjok3r#0000
What format should the data I am pushing be in?

[31-May-18 06:46 AM] blackjok3r#0000
JSON or something else?

[31-May-18 06:46 AM] imylomylo#0000
JSON yep

[31-May-18 06:46 AM] blackjok3r#0000
k cool. Do you know how to add a new value to a JSON using `jq`

[31-May-18 06:47 AM] imylomylo#0000
I’m on mbl atm gimme 20m

[31-May-18 06:47 AM] blackjok3r#0000
every time I try it, it just adds the $totaltx exactly like that instead of reading the shell variable

[31-May-18 06:47 AM] blackjok3r#0000
ok

[31-May-18 06:47 AM] imylomylo#0000
${totaltx} ?

[31-May-18 06:47 AM] blackjok3r#0000
I think i tried that and it was same.

[31-May-18 06:48 AM] blackjok3r#0000
because jq has to be in ''

[31-May-18 07:15 AM] blackjok3r#0000
I worked it out 😄

[31-May-18 07:15 AM] blackjok3r#0000
thanks 😄

[31-May-18 07:15 AM] webworker#0000
you can pass in variables like this: `jq --arg jqvarname "$bashvarname"  --arg jqvarname2 "$bashvarname2" '$jqvarname + $jqvarname2'`

[31-May-18 07:15 AM] blackjok3r#0000
the bottom part is what I am having issues with, because the shell variavles are inside '' they dont get read/

[31-May-18 07:15 AM] blackjok3r#0000
kind of... 
```    block=$(cat block)
    testing=$(echo $block | jq '{size, height, time}')
    totaltx=$(echo $block | jq '.tx | length')
    totaltx2="{ \"totaltx\": ${totaltx} }"
    assetchain="{ \"ac\": \"TXSCL220\" }"
    echo $totaltx2
    echo $assetchain
    echo $testing
    jq '${testing} + ${assetchain} + ${totaltx}'
```

[31-May-18 07:19 AM] blackjok3r#0000
😞 still not working...

[31-May-18 07:24 AM] webworker#0000
Does the final part need to be done in jq?

[31-May-18 07:24 AM] blackjok3r#0000
no

[31-May-18 07:24 AM] blackjok3r#0000
as long as it gives a single JSON.

[31-May-18 07:26 AM] blackjok3r#0000
the last line just hangs, if anyone can make that work it would be a lot of help. 🙂

[31-May-18 07:27 AM] webworker#0000
`$(echo $testing | jq -arg totaltx $totaltx

[31-May-18 07:30 AM] webworker#0000
`$(echo $testing | jq -arg totaltx $totaltx '.[0] | map({ "totaltx":$totaltx, "ac":"TXSCL220"})'`

[31-May-18 07:31 AM] webworker#0000
i didn't test it

[31-May-18 07:31 AM] blackjok3r#0000
ok thanks will try it out

[31-May-18 07:31 AM] webworker#0000
but should be something like that

[31-May-18 07:36 AM] blackjok3r#0000
`jq: error (at <stdin>:1): Cannot index object with number`

[31-May-18 07:39 AM] imylomylo#0000
Gonna feed the cat, make a coffee and get onto something scaling related

[31-May-18 07:40 AM] webworker#0000
`echo $json | jq --arg totaltx $tx '. += {"totaltx":$totaltx, "ac":"TXSCL220"}'`

[31-May-18 07:46 AM] blackjok3r#0000
thanks man 😄

[31-May-18 07:47 AM] webworker#0000
np, you can add the ac name as an arg in the same way

[31-May-18 07:48 AM] webworker#0000
add `|tonumber` ^^

[31-May-18 07:55 AM] blackjok3r#0000
already did the assetname 😄

[31-May-18 07:55 AM] blackjok3r#0000
its done, adding it to script now and starting another blast. for now it just appends the JSON to a stats.txt every block

[31-May-18 07:56 AM] blackjok3r#0000
had to create another docker volume, hope it all works.

[31-May-18 08:15 AM] smk762#0000
I have a function to derive payments from tx and blocksize, but it's only tuned to 20 or 100. Could tweak it with some more txblast tests.

[31-May-18 08:16 AM] jl777#0000
estimates dont need to be perfect

[31-May-18 08:17 AM] jl777#0000
can always do a bruteforce scan to fill in the actuals

[31-May-18 08:17 AM] jl777#0000
after the blast

[31-May-18 08:17 AM] smk762#0000
it should be pretty accurate if all chains are sending the same payments per tx. Gets a bit tricker with mixed blocks.

[31-May-18 08:19 AM] smk762#0000
to slim down the data / calc load, are any stat bars I'm currently tracking that are not worth the effort?

[31-May-18 08:20 AM] smk762#0000
or any missing worth adding in?

[31-May-18 08:22 AM] smk762#0000
9176 Total transactions (last 5 min)
 173.96 Transactions per block (last 5 min) 
 509.77 Transactions per Asset Chain (last 5 min) 
 126657 Total payments (last 5 min) 
 2401.19 Payments per block (last 5 min) 
 7036.51 Payments per Asset Chain (last 5 min)
 88 / 1024 APIs connected
 58/ 88 Asset Chains Active (last 5 min)
 121 Blocks Solved (last 5 minutes)
 2.08 Blocks per Asset Chain (last 5 min)
 67.82 Payments per transaction (last 5 min)

[31-May-18 08:22 AM] smk762#0000
Ignore the numbers (randomly generated)

[31-May-18 08:30 AM] blackjok3r#0000
You should be ok with those, except the API's connected... not sure how you would calculate this?

[31-May-18 08:30 AM] jl777#0000
seems sufficient to gauge overall status

[31-May-18 08:30 AM] blackjok3r#0000
Also the way the TxBlaster is made, its pretty much totally imposible to mix up the diffrent transactions

[31-May-18 08:31 AM] blackjok3r#0000
You pass the docker-compose file the outputs array for the TX that is sent, and after its run long enough you kill it.

