==============================================================
Guild: Komodo
Channel: cc-pegs
Topic: The Pegs Antara modules is a mechanism for creating a decentralized stable coin, pegged to any asset like fiat currency, stock, crypto that has a reliable price source 
Intro + RPC: https://docs.komodoplatform.com/basic-docs/antara/antara-api/pegs.html
User tutorial: https://docs.komodoplatform.com/basic-docs/antara/antara-tutorials/pegs-module-user-tutorial.html
Peg Creator tutorial: https://docs.komodoplatform.com/basic-docs/antara/antara-tutorials/pegs-module-creator-tutorial.html
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[04-Dec-19 06:50 PM] jl777c#5810
to make different nodes select different utxos, you can make them search the utxo list in a sorted order, offset by their msig id

[04-Dec-19 06:51 PM] jl777c#5810
so first msig node would scan offset 0, N, 2*N, ..., 1, N+1, 2*N+1, ...

[04-Dec-19 06:51 PM] Mihailo#5902
That is not a problem, for now there is only one withdraw at a time processed.

[04-Dec-19 06:51 PM] jl777c#5810
what do you mean by "sync the oraclfeed nodes so that there is no race condition"

[04-Dec-19 06:51 PM] Mihailo#5902
But the problem is that for example the first sign that happens, 2 nodes take it at the same time and broadcast signtx. I want to sync them like that only one signs at the moment.

[04-Dec-19 06:53 PM] Mihailo#5902
Before the first node that signed the tx broadcasted it to mempool and that tx reached 2nd node mempool, at that point other node thinks it needs to take the withdraw for signing.

[04-Dec-19 06:53 PM] jl777c#5810
use the same idea

[04-Dec-19 06:53 PM] jl777c#5810
each node gets a msig id

[04-Dec-19 06:53 PM] jl777c#5810
and each node only signs when the timestamp is id % N

[04-Dec-19 06:54 PM] Mihailo#5902
Hmmm, nice...

[04-Dec-19 06:54 PM] jl777c#5810
maybe 1 second is too fast, as the tx needs to propagate, if so, you can make it 2 seconds

[04-Dec-19 06:57 PM] Mihailo#5902
Yeah, so this would allow 30 nodes (which is enough) and each node can take id % N *2 second to process. Eventualy if some nodes are not live it could be that it will need 1 minute to sign it completely, but that is acceptable.

[04-Dec-19 06:58 PM] Mihailo#5902
And I would use the time from komodo (GetTime()) to check ?

[04-Dec-19 07:00 PM] jl777c#5810
assume all msig signing nodes have done ntp recently so they are in sync to the millisecond

[04-Dec-19 07:00 PM] jl777c#5810
as long as each node can process multiple withdraws during their timeslot, it is all good

[04-Dec-19 07:00 PM] jl777c#5810
we get a pipelined signing process with minimal collisions

[04-Dec-19 07:00 PM] jl777c#5810
another way to avoid collisions is to add random sleeps

[04-Dec-19 07:01 PM] jl777c#5810
and make sure to update state often so if a node sees another node did something, it wont do anything to contradict it

[04-Dec-19 07:01 PM] Mihailo#5902
Well, nodes will not process multiple withdraws as only one withdraw at the time is processed. But maybe we could expand it later with this idea to choose different utxos, and monitor which utxos are already used...

[04-Dec-19 07:04 PM] jl777c#5810
maybe a better way is to go as fast as possible, but wait for an earlier msig id to sign it

[04-Dec-19 07:04 PM] jl777c#5810
so at first second, msig.0 would be the only one that signs it

[04-Dec-19 07:05 PM] jl777c#5810
if he doesnt, then the next second msig,1 (and msig.0) are eligible to sign

[04-Dec-19 07:05 PM] jl777c#5810
etc.

[04-Dec-19 07:05 PM] jl777c#5810
once a single signature tx is seen, then the next msig.id is first to sign, the next second the next msig id is eligibile, etc.

[04-Dec-19 07:06 PM] jl777c#5810
i think a tx will get M signatures in close to N seconds

[04-Dec-19 07:06 PM] Mihailo#5902
Yeah, maybe serialization is good. But how long should it wait until next msig.id takes for signing? msig.0 can be down...

[04-Dec-19 07:07 PM] jl777c#5810
1 second

[04-Dec-19 07:07 PM] jl777c#5810
if nothing appears, then msig.1 takes the lead

[04-Dec-19 07:07 PM] jl777c#5810
after 2 seconds if nothing, then msig.2 takes the lead

[04-Dec-19 07:08 PM] jl777c#5810
then 3, 4, 5, ... to N-M

[04-Dec-19 07:08 PM] jl777c#5810
that is for the first signature

[04-Dec-19 07:08 PM] jl777c#5810
then once there is a single signature tx in the mempool, the next msig.id has one second to sign and broadcast

[04-Dec-19 07:08 PM] jl777c#5810
if not, then first+2, first+3, ... to N-M-1

[04-Dec-19 07:09 PM] jl777c#5810
now we have a 2 signature tx, so the msig.second+1 is eligible the first timeslot

[04-Dec-19 07:09 PM] jl777c#5810
second is the msig.id of the second signer

[04-Dec-19 07:13 PM] Mihailo#5902
Ok, but there is still a problem. If in 1st second msig.1 took the tx for signing and it broadcasted but it didn't propagate to msig.2 node in 2nd second msig.2 will take the initial withdraw to sign.

[04-Dec-19 07:14 PM] Mihailo#5902
Basically if in 2 seconds it still doesn't propagate same will happen, but mostly it will be ok in 2 seconds.

[04-Dec-19 07:21 PM] jl777c#5810
msig.3 would see both and then only pick one of the two, so maybe it is not a big issue?

[04-Dec-19 07:21 PM] jl777c#5810
msig.2 would refrain from signing the first one, as it already signed it as the initial signer

[04-Dec-19 07:21 PM] Mihailo#5902
Ohhh

[04-Dec-19 07:21 PM] Mihailo#5902
Ok, get it

[04-Dec-19 07:22 PM] jl777c#5810
maybe there are some edge cases i dont see as this is just an intuitive design off the top of my head, but i think it should allow pretty decent practical performance

[04-Dec-19 07:22 PM] Mihailo#5902
But it may be the issue with this. 1&2 sign the same and spend same input, 3 sees both and chooses 1, but 2 gets mined and 1 is invalid then...

[04-Dec-19 07:23 PM] jl777c#5810
if 1 and 2 sign the same one, then only one will be accepted by 3 into its mempool

[04-Dec-19 07:23 PM] jl777c#5810
also, if each node is choosing utxo in an interleaved fashion, they wouldnt be choosing the same utxo

[04-Dec-19 07:24 PM] jl777c#5810
let us imagine 1 and 2 both submit singly signed tx. now 3 will either accept 1 or 2, if it accepts 1, it will wait one second for 2 to sign it, but it wont happen and then it will sign it the next second

[04-Dec-19 07:24 PM] jl777c#5810
if it accepts 2, then it just immediately signs it

[04-Dec-19 07:24 PM] Mihailo#5902
utxos cannot be chosen interleaved for siging. So when signing there is a marker which is spent in each signing iteration. So it must be serialezed.

[04-Dec-19 07:25 PM] jl777c#5810
ok

[04-Dec-19 07:25 PM] jl777c#5810
still the waiting for the signing time slot should resolve these tx signing forks

[04-Dec-19 07:25 PM] Mihailo#5902
I think it may work. Let me try....

[04-Dec-19 07:26 PM] jl777c#5810
if 3 and 4 have the same issue, then msig.5 would choose between 1+3 or 2+3 or 1+4 and 2+4

[04-Dec-19 07:26 PM] jl777c#5810
oh, the same utxo can be accepted into all the mempools as it is a multisig

[04-Dec-19 07:27 PM] jl777c#5810
oh, its the mempool on the assetchain!

[04-Dec-19 07:27 PM] Mihailo#5902
No, it is not a multisig. The signing is regular!

[04-Dec-19 07:27 PM] jl777c#5810
so you can have a baton to get mutual exclusion

[04-Dec-19 07:27 PM] Mihailo#5902
There are two types of utxos. The external utxos, and AC utxos.

[04-Dec-19 07:27 PM] Mihailo#5902
baton is basically marker

[04-Dec-19 07:27 PM] jl777c#5810
anyway, i think you have the idea of how to solve this now

[04-Dec-19 07:27 PM] Mihailo#5902
Yes

[04-Dec-19 07:27 PM] jl777c#5810
let me know if anything comes up that makes it not work so well

[04-Dec-19 07:28 PM] Mihailo#5902
I'll try it. Thnx

[04-Dec-19 08:03 PM] Mihailo#5902
@jl777c BTW, @Alright put my attention to it. The N for MofN is now limitted to 15. Do we want to make it little bit more, like 30?

[04-Dec-19 08:04 PM] Alright#0419
was thinking like a matrix of signers could work?

[04-Dec-19 08:04 PM] Alright#0419
many b addresses

[04-Dec-19 08:15 PM] jl777c#5810
15 is the max that fits

[04-Dec-19 08:15 PM] jl777c#5810
practically speaking 7 of 13 signers should be sufficient

[04-Dec-19 08:16 PM] Alright#0419
can't scale it up with additional multisigs?

[04-Dec-19 08:16 PM] Alright#0419
7 nodes down at once doesn't seem unlikely

[04-Dec-19 08:16 PM] Alright#0419
especially if purposefully taken down

[04-Dec-19 08:17 PM] jl777c#5810
when they come back up, it should process whatever was missed

[04-Dec-19 08:17 PM] jl777c#5810
finding 30 long term reliable operators will be a lot harder than 13

[04-Dec-19 08:19 PM] Alright#0419
keep them behind tor if possible ðŸ˜…

[04-Dec-19 08:22 PM] Mihailo#5902
Signers will be notary opreators.

[04-Dec-19 08:51 PM] Alright#0419
not saying this is at all practical, just a bit curious about the math behind it now that I'm thinking about it. Given for example 60 signers, there are 386206920 subsets of 7 signers. Obviously you couldn't have this amount of addresses, but I'm trying to figure out how much more "coverage"(not sure what the term would be) we could get by having say 10 deposit multisigs.

[04-Dec-19 08:54 PM] Mihailo#5902
I don't get why you keep thinking about multiple msgi addresses? For one set of pubkeys you have one address. You don't get anything by having more addresses, it is still the same pubkeys.
What is your concern about 15 signers exactly?

[04-Dec-19 08:54 PM] Alright#0419
Am just brain storming, will take it elsewhere if you don't want to hear it

[04-Dec-19 08:55 PM] Alright#0419
again, `not saying this is at all practical` literally just curious about this math problem

[04-Dec-19 08:56 PM] Mihailo#5902
`but I'm trying to figure out how much more "coverage" we could get by having say 10 deposit multisigs.`
What you mean by this?

[04-Dec-19 08:56 PM] Alright#0419
so with 386206920 total addreses, any 7/60 could sign, this would be 100% "coverage"

[04-Dec-19 08:56 PM] Alright#0419
sorry, I know that's confusing ðŸ¤£

[04-Dec-19 08:57 PM] Mihailo#5902
Don't get `any 7/60 can sign`. Now also any 7/60 could sign (if N could be 60)

[04-Dec-19 08:57 PM] Alright#0419
eh never mind, don't let me waste your time

[04-Dec-19 08:58 PM] Mihailo#5902
I'm just checking if you didn't maybe get something right so you are thinking in wrong direction.

[04-Dec-19 08:58 PM] Alright#0419
it's not relevant

[04-Dec-19 08:58 PM] Mihailo#5902
That is why I asked what is your concern exactly

[04-Dec-19 09:03 PM] Alright#0419
to be frank, the concern would be the gateway going defunct. I know it's unlikely to happen given the signers, but I wouldn't want to hold coins on these chains for anything but short term

[04-Dec-19 09:04 PM] SHossain#0007
as of today i have collected 7 pubkeys from signers for the test phase. once we have parallel processing ready and initially tested, we can ask them to setup node for testing.

[04-Dec-19 09:04 PM] SHossain#0007
i guess others will submit their keys too soon

[04-Dec-19 09:04 PM] Alright#0419
so was just brain storming on how it might be possible to decrease point of failures(signers)

[04-Dec-19 09:05 PM] Mihailo#5902
Increasing point of failures can be just with bigger N (more different pubkeys and nodes).

[04-Dec-19 09:05 PM] Alright#0419
yes, but 15 is a hard limit unless we hack script code

[04-Dec-19 09:05 PM] Alright#0419
Jl is right though, 7of15 is practical and will work

[04-Dec-19 09:06 PM] Mihailo#5902
I can increase the limit to 10000. But the gateways that will be setup for now will have 13 signers.

[04-Dec-19 09:06 PM] Mihailo#5902
6of13

[04-Dec-19 09:06 PM] SHossain#0007
7 of 13

[04-Dec-19 09:06 PM] Mihailo#5902
Yes

[04-Dec-19 09:06 PM] Mihailo#5902
sorry

[04-Dec-19 09:06 PM] Alright#0419
why 13 not 15?

[04-Dec-19 09:06 PM] Mihailo#5902
That is not a question for me ðŸ˜‰

