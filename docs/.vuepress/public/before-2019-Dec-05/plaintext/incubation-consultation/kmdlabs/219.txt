==============================================================
Guild: Komodo
Channel: kmdlabs
Topic: Please read pinned messages
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[13-Jan-19 04:21 AM] blackjok3r#3181
Yes, I always wondered what happens of many poracles are used on one chain, and filled blocks with them etc... this seemed likea  good way to test this

[13-Jan-19 04:21 AM] blackjok3r#3181
as we are already running heaps of scritps that are just sitting in sleep waiting... add oracle tx inside this wait time

[13-Jan-19 04:22 AM] TonyL#3577
Publish data to oracle is super fast yeah

[13-Jan-19 04:23 AM] TonyL#3577
But definitely make separate chain for these tests oracles

[13-Jan-19 04:23 AM] blackjok3r#3181
I already made oracle chain

{Reactions}
👌 

[13-Jan-19 04:23 AM] TonyL#3577
Blocks will be filled by all these migrations and oraclesdata

[13-Jan-19 04:24 AM] blackjok3r#3181
its working well... I should have made seperate branch with large faucet get

[13-Jan-19 04:24 AM] blackjok3r#3181
but as it is I cna just send everyone coins...

[13-Jan-19 04:24 AM] blackjok3r#3181
working on this soon... taking a while to get started today lol

[13-Jan-19 04:29 AM] TonyL#3577
```{"src_chain":"CFEK", "dest_chain":"CFEKED", :src_sum":10, "export_txid": <txid>, "timeofexport":1546341430, "hex": <export tx full hex>, "payouts":<payouts hash> }
{"dest_chain":"CFEKED", "dest_sum":10, "import_txid": <txid>, "timeofimport":1546341430}```
@blackjok3r is it up to date proposed saving data format?
Can grab  it right now in python script and publish to oracle. Just want to code something much but don't know what haha 😃

[13-Jan-19 04:30 AM] blackjok3r#3181
Thats what I came up with yes... work with smk though

[13-Jan-19 04:30 AM] smk762 -  dracocanis ominator#7640
I'll let you know how oracles goes, I have some scripts too wich can form the foundation, just need to test and then link to vis and see what's useful

{Reactions}
👌 

[13-Jan-19 04:30 AM] smk762 -  dracocanis ominator#7640
tbh, not sure yet the final methods, but I'm sure a bit of poking will reveal

[13-Jan-19 04:31 AM] blackjok3r#3181
changing the data format is trivial once the scritps all work

[13-Jan-19 04:31 AM] blackjok3r#3181
So I guess use that for now

[13-Jan-19 04:31 AM] TonyL#3577
Yeah, it's easy to change

[13-Jan-19 04:32 AM] blackjok3r#3181
I also suggest using D... to save space...

[13-Jan-19 04:33 AM] TonyL#3577
Definitely best format

[13-Jan-19 04:33 AM] TonyL#3577
For this format we can use BSON maybe?

[13-Jan-19 04:59 AM] blackjok3r#3181
dont know what that is lol

[13-Jan-19 04:59 AM] blackjok3r#3181
what ever you think is best... as long as smk can get the data for some kind of vis

[13-Jan-19 05:01 AM] gt#2812
@smk762 -  dracocanis ominator  thanks! the credentials created needed to be edited. works now

[13-Jan-19 05:02 AM] smk762 -  dracocanis ominator#7640
👍  that one took me a couple of days lol

[13-Jan-19 05:02 AM] blackjok3r#3181
what is the exact problem ? its pulling wrong data from .conf or the data in the .conf is wrong?

[13-Jan-19 05:03 AM] smk762 -  dracocanis ominator#7640
https://twitter.com/lukechilds/status/1082966316170932226

{Embed}
Luke Childs (@lukechilds)
https://twitter.com/lukechilds/status/1082966316170932226
Alternatively you can Base64 encode the bytes:

`openssl rand -base64 32`

That will give a shorter string but with the same amount of entropy. And it will contain some special chars in case that's a signup requirement.

I prefer hex though 😎
https://pbs.twimg.com/media/Dwd4EOWU0AAuFCW.png:large
Twitter

[13-Jan-19 05:04 AM] smk762 -  dracocanis ominator#7640
the specialchars break the rpc auth

[13-Jan-19 05:04 AM] TonyL#3577
@blackjok3r I guess RPC library which I use for RPC connections establishing not parse some symbols

[13-Jan-19 05:04 AM] blackjok3r#3181
for KMD or the AC's?

[13-Jan-19 05:04 AM] smk762 -  dracocanis ominator#7640
KMD in my case

[13-Jan-19 05:04 AM] gt#2812
for me what ever generated the conf file created user and pass with "/" and "="

[13-Jan-19 05:04 AM] blackjok3r#3181
we can just amke the install script not generate thes characters

{Reactions}
💯 👆 

[13-Jan-19 05:04 AM] blackjok3r#3181
ok cool I will change it

[13-Jan-19 05:05 AM] TonyL#3577
Quite strange because it's worked fine on my side with special symbols in password

[13-Jan-19 05:05 AM] blackjok3r#3181
```echo "rpcuser=user`head -c 32 /dev/urandom | base64`" > komodo.conf
echo "rpcpassword=password`head -c 32 /dev/urandom | base64`" >> komodo.conf```

[13-Jan-19 05:05 AM] TonyL#3577
Maybe it's python version related

[13-Jan-19 05:05 AM] blackjok3r#3181
thats what its using atm...

[13-Jan-19 05:05 AM] TonyL#3577
3.6+ is needed

[13-Jan-19 05:05 AM] blackjok3r#3181
I had another one of those that only does letters and numbers need to find it

[13-Jan-19 05:05 AM] smk762 -  dracocanis ominator#7640
Im on py3, I think it was a backslash that was the issue but I tok out allspec chars so not sure

[13-Jan-19 05:06 AM] TonyL#3577
Did you have same problems when used it without a parser from file?

[13-Jan-19 05:06 AM] blackjok3r#3181
i'll just remvoe those chars from conf generator for KMD.

[13-Jan-19 05:06 AM] blackjok3r#3181
its no problem

[13-Jan-19 05:06 AM] gt#2812
yeah i believe the "/" made python stop reading it at that point

[13-Jan-19 05:07 AM] TonyL#3577

{Attachments}
https://cdn.discordapp.com/attachments/497080413387489291/533874719703957514/unknown.png

[13-Jan-19 05:07 AM] blackjok3r#3181
``` rpcuser=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 24 | head -n 1)
rpcpassword=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 24 | head -n 1)```

[13-Jan-19 05:08 AM] blackjok3r#3181
that should work

[13-Jan-19 05:08 AM] TonyL#3577
If input string with `/` it still remains a `/`

[13-Jan-19 05:08 AM] smk762 -  dracocanis ominator#7640
🤷

[13-Jan-19 05:09 AM] gt#2812
does "" make a difference?

[13-Jan-19 05:11 AM] blackjok3r#3181
updated staked notary and staked to only use letters and numbers

[13-Jan-19 05:11 AM] blackjok3r#3181
staked didnt have a komodo.conf generator at all

[13-Jan-19 05:11 AM] TonyL#3577
"" - it's a python string @gt (On screenshot it's python environment )

[13-Jan-19 05:13 AM] TonyL#3577
And for RPC Proxy creation password as a string needed

[13-Jan-19 05:16 AM] gt#2812
ok, just curious if it wasn’t being called a string from the conf file

[13-Jan-19 05:16 AM] gt#2812
but this is still relatively new to me

[13-Jan-19 05:34 AM] TonyL#3577
Problem is in this config parser (https://github.com/StakedChain/PoS_scripts/blob/master/CC_scripts/migrations_python/migration_script_v2.py#L102)
 When using `/` in KMD password  it's parsing first part of password as rpc port by some reason

{Embed}
https://github.com/StakedChain/PoS_scripts/blob/master/CC_scripts/migrations_python/migration_script_v2.py
StakedChain/PoS_scripts
various scripts we have developed on STAKED so far, none of these are perfect and some might not even work. use them as examples of what you can do. - StakedChain/PoS_scripts
https://avatars0.githubusercontent.com/u/42953759?s=400&v=4

[13-Jan-19 05:52 AM] TonyL#3577
Haha it's even parser in library which calling by this parser

[13-Jan-19 05:52 AM] blackjok3r#3181
hmm making a way to withdraw funds from staking node is probablyt going to end up a TUI for creating raw transactions 😂

[13-Jan-19 05:52 AM] TonyL#3577
Parsers paradise, so easiest way is just to not use passwords with `/` to not confuse mr. Python much

[13-Jan-19 05:53 AM] blackjok3r#3181
Yes aleady updated generators... I dont hink the daemon does this on its own, pretty sure its random creds generator is all letters adn numbers already

[13-Jan-19 05:53 AM] blackjok3r#3181
The bash random generator staked notary was using however was using all chars.

[13-Jan-19 05:54 AM] TonyL#3577
@blackjok3r I have a design already hahaha

{Attachments}
https://cdn.discordapp.com/attachments/497080413387489291/533886464233177099/unknown.png

[13-Jan-19 05:54 AM] blackjok3r#3181
the staking scripts iteslf already has most of the code... all thats needed is some custom filters for utxo inputs

[13-Jan-19 05:55 AM] blackjok3r#3181
Main thing is withdrawing one utxo from each segid then I guess the change can be sent to wich ever segid has the lowest stakes or something 🤔

[13-Jan-19 05:56 AM] blackjok3r#3181
I wonder how sendtoaddress will handle it already

[13-Jan-19 05:56 AM] blackjok3r#3181
in POSTEST I used creat raw transaction with jq filters... but it was all hard coded in bash and quite clunky

[13-Jan-19 05:58 AM] TonyL#3577
Let's pythonise it so 😃

[13-Jan-19 05:58 AM] blackjok3r#3181
I will get some working code maybe and you can add it to TUI later ?

[13-Jan-19 05:58 AM] blackjok3r#3181
or should I fork TUI and do it there

[13-Jan-19 05:59 AM] blackjok3r#3181
was going to modify staker.py

[13-Jan-19 06:00 AM] TonyL#3577
I can wrap it into TUI sure

{Reactions}
😎 

[13-Jan-19 06:02 AM] TonyL#3577
Would be great if your code will looks like a functions which have input params and return something

{Reactions}
👌 

[13-Jan-19 06:02 AM] blackjok3r#3181
https://github.com/StakedChain/pos64staker/blob/master/kmdrpc.py
I am using this kmdrpc lib from Alright ? does the TUI use something liek this or diffrent?

{Embed}
https://github.com/StakedChain/pos64staker/blob/master/kmdrpc.py
StakedChain/pos64staker
Automated staker for PoS assetchains. Contribute to StakedChain/pos64staker development by creating an account on GitHub.
https://avatars0.githubusercontent.com/u/42953759?s=400&v=4

[13-Jan-19 06:03 AM] TonyL#3577
Actually I'm using same lib as here https://github.com/StakedChain/PoS_scripts/blob/master/CC_scripts/migrations_python/migration_script_v2.py#L102 for RPC

{Embed}
https://github.com/StakedChain/PoS_scripts/blob/master/CC_scripts/migrations_python/migration_script_v2.py
StakedChain/PoS_scripts
various scripts we have developed on STAKED so far, none of these are perfect and some might not even work. use them as examples of what you can do. - StakedChain/PoS_scripts
https://avatars0.githubusercontent.com/u/42953759?s=400&v=4

[13-Jan-19 06:03 AM] TonyL#3577
```from slickrpc import Proxy``` this one

[13-Jan-19 06:03 AM] TonyL#3577
https://github.com/StakedChain/PoS_scripts/blob/master/CC_scripts/migrations_python/migration_script_v2.py#L132 and such rpc connection object will be fully compatible

{Embed}
https://github.com/StakedChain/PoS_scripts/blob/master/CC_scripts/migrations_python/migration_script_v2.py
StakedChain/PoS_scripts
various scripts we have developed on STAKED so far, none of these are perfect and some might not even work. use them as examples of what you can do. - StakedChain/PoS_scripts
https://avatars0.githubusercontent.com/u/42953759?s=400&v=4

[13-Jan-19 06:04 AM] TonyL#3577
https://github.com/tonymorony/GatewaysCC-TUI/blob/master/lib/tuilib.py so when project your functions, just keep in mind that rpc_connection is needed as an argument

{Embed}
https://github.com/tonymorony/GatewaysCC-TUI/blob/master/lib/tuilib.py
tonymorony/GatewaysCC-TUI
Terminal user interfaces for Komodo CryptoConditions smart-contracts - tonymorony/GatewaysCC-TUI
https://avatars1.githubusercontent.com/u/24797699?s=400&v=4

[13-Jan-19 06:05 AM] blackjok3r#3181
yeah this is diffrent.... Alrights/emanuals is just using requests module

[13-Jan-19 06:06 AM] TonyL#3577
In this tuilib I'm using an additional rpclib (thought that additional exceptions handling might be needed for CC), but you can call directly `rpc_connection.rpccall` without `rpclib`

[13-Jan-19 06:06 AM] TonyL#3577
Like a `rpc_connection.getinfo()`

[13-Jan-19 06:06 AM] blackjok3r#3181
hmmm this is totally not something that works with the staker repo... totally diffrent all toghether 😦

[13-Jan-19 06:07 AM] blackjok3r#3181
I would be better off re-writing the entiree thing yusing your base files 😂

[13-Jan-19 06:07 AM] TonyL#3577
Oh there is nothing special actually

[13-Jan-19 06:08 AM] TonyL#3577
Just creating rpc_connection, and then making RPC  calls 😃

[13-Jan-19 06:08 AM] blackjok3r#3181
yours is probably better/easier to use.... this method has a fucntion for every RPC.... and it cant take optional params... its all hard coded... I thaught when first using ti it seems a weird way of doing it

[13-Jan-19 06:08 AM] TonyL#3577
I just found this library https://github.com/barjomet/slick-bitcoinrpc super fast and stable

{Embed}
https://github.com/barjomet/slick-bitcoinrpc
barjomet/slick-bitcoinrpc
Just another Python bitcoin-rpc client. Contribute to barjomet/slick-bitcoinrpc development by creating an account on GitHub.
https://avatars1.githubusercontent.com/u/7434416?s=400&v=4

[13-Jan-19 06:08 AM] blackjok3r#3181
I think I will do that... just rewrite it using proper RPC lib...

[13-Jan-19 06:09 AM] blackjok3r#3181
it wont take long I dont hink

[13-Jan-19 06:09 AM] blackjok3r#3181
we should all be using same abse code... otherwise this will end up a giant spagetti mess

[13-Jan-19 06:15 AM] TonyL#3577
I propose this object oriented way of interacting with daemon - you have RPC connection object to which you can address your rpc calls

[13-Jan-19 06:15 AM] blackjok3r#3181
looks much cleaner. 😃

[13-Jan-19 06:15 AM] TonyL#3577
So operate with connections to multiply servers is not hard and understandable

[13-Jan-19 06:16 AM] TonyL#3577
*daemons not servers (but servers is possible too hehe)

{Reactions}
😎 

[13-Jan-19 06:16 AM] blackjok3r#3181
will have a play with it shouldnt be too hard to figure out... its not much code to change to get the returns I need

[13-Jan-19 06:18 AM] TonyL#3577
Cool! It's super easy:
```pip3 install slick-bitcoinrpc```
```from slickrpc import Proxy

rpc_connection = Proxy("http://%s:%s@127.0.0.1:%d"%(rpcuser, rpcpassword, port))

txid = rpc_connection.sendrawtransaction(rawtransaction_hex_which_i_get_somewhereelse["hex"]```

{Reactions}
👌 

[13-Jan-19 06:21 AM] blackjok3r#3181
thanks! better to fix this mess now before people start using it. 😃

[13-Jan-19 06:22 AM] TonyL#3577
Yeah, have to refactor my TUI as well

[13-Jan-19 06:23 AM] TonyL#3577
https://github.com/tonymorony/GatewaysCC-TUI/blob/master/lib/rpclib.py this is stupidest thing I made ever I think

{Embed}
https://github.com/tonymorony/GatewaysCC-TUI/blob/master/lib/rpclib.py
tonymorony/GatewaysCC-TUI
Terminal user interfaces for Komodo CryptoConditions smart-contracts - tonymorony/GatewaysCC-TUI
https://avatars1.githubusercontent.com/u/24797699?s=400&v=4

[13-Jan-19 06:23 AM] TonyL#3577
So many sense lol
```def oracles_info(rpc_connection, oracle_id):
    oracles_info = rpc_connection.oraclesinfo(oracle_id)
    return oracles_info```

[13-Jan-19 06:24 AM] TonyL#3577
Why need to use it when can directly `rpc_connection.oraclesinfo(oracle_id)` have no idea

