==============================================================
Guild: Komodo
Channel: kmdlabs
Topic: Please read pinned messages
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[20-Jan-19 10:33 AM] blackjok3r#3181
changing the name of it means chanign MakeFiles ... and well fuck that... never again will i try and change one of those

[20-Jan-19 10:33 AM] ComputerGenie üë¥üèºüì¢#7004
lol

[20-Jan-19 10:33 AM] blackjok3r#3181
üòÇ

[20-Jan-19 10:34 AM] Alright#0419
if you can make ac_founders=1440 work with 0BR, that would be helpful

[20-Jan-19 10:34 AM] Alright#0419
otherwise, we'll have to combine UTXOs in the multisig txs

[20-Jan-19 10:35 AM] Alright#0419
not sure how that might work

[20-Jan-19 10:41 AM] blackjok3r#3181
That may need another pram added ... I will see what I can workout after I have dinner.

[20-Jan-19 10:50 AM] Alright#0419
edited my post on the proposal issue to reflect what we just talked about

[20-Jan-19 10:53 AM] blackjok3r#3181
cool thanks.. I think it should be fairly easy to do.

[20-Jan-19 10:53 AM] blackjok3r#3181
-ac_founders_reward=

[20-Jan-19 10:54 AM] blackjok3r#3181
If that does not equal 0, then use it instead of the coinbase percentage.

[20-Jan-19 11:10 AM] blackjok3r#3181
@Alright  Pushed test for ac_founders _reward to a branch called that in StakedChain/komodo. Please test it... the input is simply -ac_founders=<numnber of blocks> and -ac_founders_reward=<amount in satoshies>

[20-Jan-19 11:10 AM] blackjok3r#3181
It should print the amount for you on chain start if it is being set... The assetchains args part of the code is getting a little comploicated

[20-Jan-19 11:10 AM] Alright#0419
can do later today

[20-Jan-19 11:11 AM] blackjok3r#3181
Im havent even tested it it builds ping me if any problems.

[20-Jan-19 11:13 AM] jl777c#5810
CClib_methods[] =
{
    { (char *)"faucet2_fund", (char *)"amount", 1, 1, 'F' },
    { (char *)"faucet2_get", (char *)"<no args>", 0, 0, 'G' },
};
->
./komodo-cli -ac_name=CLIB cclibinfo
{
  "result": "success",
  "CClib": "faucet2",
  "methods": [
    {
      "funcid": "F",
      "name": "faucet2_fund",
      "help": "amount",
      "params_required": 1,
      "params_max": 1
    },
    {
      "funcid": "G",
      "name": "faucet2_get",
      "help": "<no args>",
      "params_required": 0,
      "params_max": 0
    }
  ]
}

./komodo-cli -ac_name=CLIB cclib faucet2_fund "[\"10\"]"

[20-Jan-19 11:13 AM] jl777c#5810
{
  "result": "success",
  "method": "faucet2_fund",
  "rawtx": "0400008085202f890400405fb43f540d2381cb2c07c07c99ba1dcc65e0e80909565191e10d6717f6300000000049483045022100a17fa7b0da7d9db93d0400fc2db4d23e408e11c455b0d4917ca8e26c034414760220343c3595aa957c9cba137fcae309de4182fac3aa808a4b17fe62b6ec5cc4ad5601ffffffff02b858d726329d683c3354560b276f3909b6f8804ad2ad2899341b2a0bfaf5e30000000048473044022068400018e450551cf09ea32cdab3ecd2d60c016cce80cdc9dc63d901fa1d3f58022001beaa4a14fafbcab390ccfd26380ad4e98d87ee0dc24e59d8958c2a47e6afb801ffffffff0053f9b107f5295fe30244f7de5294e62cb63a94e8f8783f4ab1a70e4d740d850000000049483045022100b95a992236339d0988d285e24ac20505ce96d1dfcf888e6b86cb0bed5ee2698802200c3a34237de48edbe533d08638449f22ff506685b74914165cf3a2e7a8dae18601ffffffff004ab782c576f02aa0eaae2fc6baded6003be63d1e147e21e5be10cc9e233f2000000000484730440220726877e0e79f5a423453e0d618b319ed2e299a4e2ae1ea0165222b2df62aa59402206b320d20e009e0ed3c38a657ecae1fd8b37994b98c2538dd762d5614e081a29d01ffffffff0200ca9a3b00000000302ea22c80202a790bf58f0a9fb564707cf6ca52cd3e1a32a2efd655d1a0ff3e27d8f0f458a78103120c008203000401ccf09aeb0b000000002321039433dc3749aece1bd568f374a45da3b0bc6856990d7da3cd175399577940a775ac00000000c21a00000000000000000000000000"
}

[20-Jan-19 11:14 AM] jl777c#5810
now cclib has support to define all the methods in the cclib via a data structure and then you can invoke the method via cclib rpc call. i put in the faucet as a demo for the minimal cclib

[20-Jan-19 11:15 AM] jl777c#5810
with this only cclib needs to be build (cc/makecclib) and it dynamically links with komodod which is looking for cclib.so

[20-Jan-19 11:17 AM] jl777c#5810
./komodo-cli -ac_name=CLIB cclib faucet2_get "[]"

[20-Jan-19 11:17 AM] jl777c#5810
{
  "result": "success",
  "method": "faucet2_get",
  "rawtx": "0400008085202f8901db2438ba4c991e2e0e256092b0ea9fa62c1247acb66f868beb89d2bc5315e38a000000007b4c79a276a072a26ba067a5658021032447d97655da079729dc024c61088ea415b22f4c15d4810ddaf2069ac6468d2f81400cfd581a8492302b7b8158ce69297dc86c013135d36027b5f8696594021a56c109559621eda1f12817bb12ade3fdb2b06f2d426c61f5ea878a99f323676e65a4a100af03800110a10001ffffffff03f0c1a43500000000302ea22c80202a790bf58f0a9fb564707cf6ca52cd3e1a32a2efd655d1a0ff3e27d8f0f458a78103120c008203000401cc00e1f505000000002321039433dc3749aece1bd568f374a45da3b0bc6856990d7da3cd175399577940a775ac0000000000000000086a0610477d6a1f0300000000d01a00000000000000000000000000"
}

{Reactions}
Komodo (2) 

[20-Jan-19 11:32 AM] grewalsatinder#9653
@jl777c so the cclib.so file has to be placed in the same directory where `komodod` binary would be located, correct?

[20-Jan-19 11:33 AM] jl777c#5810
yes

[20-Jan-19 11:34 AM] grewalsatinder#9653
cool üòÉ

[20-Jan-19 11:34 AM] jl777c#5810
i made #cclibs channe

[20-Jan-19 11:43 AM] blackjok3r#3181
This is pretty cool. I will help test it in comming days if there isnt somehting else I need to be doing.

[21-Jan-19 06:46 AM] blackjok3r#3181
I managed to add -ac_algo=verushash2 pretty easily. But I dont like how it works. 
Most of its fine, apart from the miner. I had to delcare both hash classes as ss and ss2 then use an IF inside the mining loop to choose which one to get the hashresult from. 
If we were to add more hashing algos, this would start to get very messy and possibly slow it down. I tried to read the code of how mike solved this on VerusHash2b but it doesn't seem to apply as that hashalgo  is height activated. 
I would really like to avoid copying the entrie mining function for every hashing algo. If one thing needs a big fix, it needs to be done to every function.
For now and what we need this for it will be fine, but to add more algos this needs to be done diffrently.
@jl777c

[21-Jan-19 06:48 AM] jl777c#5810
the path of least resistance is often a nice place to visit, but not really a good place for a home. Maybe a custom UniversalMiner() needs to be written that can be the miner for N algos

[21-Jan-19 06:49 AM] jl777c#5810
and in the event verushash2 survives the fpga then really it is one of the few hash algos of interest

[21-Jan-19 06:50 AM] blackjok3r#3181
verushash2 is identical to verushash 1 that is the default in KMD right now, but it uses a random key instead of null. So the existing FPGA's and GPU miners are not compatible, The current VerusHash algo is VerusHash2b, we are not using that... that is a LOT of extra work to add.

[21-Jan-19 06:51 AM] jl777c#5810
oh wait, i thought verushash2 was what is live with VRSC now

[21-Jan-19 06:51 AM] jl777c#5810
that is what I was interested in

[21-Jan-19 06:52 AM] blackjok3r#3181
nope. There was V2 already in our code but was unused. So I used that.

[21-Jan-19 06:53 AM] blackjok3r#3181
With the correct mindif set in chainparams.h its working very well, at least for 100% PoW.

[21-Jan-19 06:54 AM] blackjok3r#3181
Well I guess I will leave these changes just for us. Maybe later on we can look at doing it properly and adding VerusHash2b.

[21-Jan-19 07:15 AM] jl777c#5810
ok, MARMARA is the first chain that could use 2b

[21-Jan-19 07:16 AM] blackjok3r#3181
2b is a lot of extra work.

[21-Jan-19 07:16 AM] blackjok3r#3181
I'm not even sure I could do it

[21-Jan-19 07:19 AM] jl777c#5810
its not localized to the miner?

[21-Jan-19 07:24 AM] Mylo#8306
VH2 is live in VRSC now.   it loops, stalls and takes more space - does things FPGAs don't like to do.

[21-Jan-19 07:24 AM] Mylo#8306
paraphrased miket

[21-Jan-19 07:25 AM] Mylo#8306
GPU mining works on VH2, it's not as competitive as CPU though.

[21-Jan-19 07:30 AM] jl777c#5810
v2 is not v2b

[21-Jan-19 07:31 AM] blackjok3r#3181
The confsion is mike made a verushashV2 in the code, but never sued it... its VerusHash 1.1 I have renamed it for the ac_algo param to avoid this confusion

[21-Jan-19 07:31 AM] blackjok3r#3181
V2b in the code is what everyone calls VerusHash2

[21-Jan-19 07:32 AM] blackjok3r#3181
VerusHash 1.1 is GPU and FPGA reistant, in that nobody has made a FPGA or GPU miner for it. Unless some chain that has value uses this algo, nobody will either.

[21-Jan-19 07:33 AM] blackjok3r#3181
We will be using it for chains that have no block reward, so there is no point someone bothering to do this.

[21-Jan-19 07:33 AM] blackjok3r#3181
IF they want GPU/FPGA algo, they can just use V1.

[21-Jan-19 07:37 AM] jl777c#5810
fpga bitstream wont be hard to make for it though

[21-Jan-19 07:37 AM] jl777c#5810
like an afternoon for a dev who did the v1 bitstream

[21-Jan-19 07:42 AM] blackjok3r#3181
Even so... we use PoS % with a maxiumum block time, so if they hash attack it, it can't stall.

[21-Jan-19 07:43 AM] blackjok3r#3181
Can't see why anyone would go though all that effort just to troll us, they gain nothing from it.

[21-Jan-19 07:45 AM] jl777c#5810
maybe LABS becomes worth $100

[21-Jan-19 09:19 AM] blackjok3r#3181
Even so, the chains this is used for have no block reward.

[21-Jan-19 09:20 AM] blackjok3r#3181
I guess if they are used very heavily, the transaction fees may play a part

[21-Jan-19 09:20 AM] jl777c#5810
should be ok then

[21-Jan-19 09:24 AM] blackjok3r#3181
@Alright  Dont worry aoout testing the VHT2 branch. I managed to get it working with an ac_param. I need to make sure it works then you can test. Maybe a few hours from now. Just need to get a few chains over block 100.

[21-Jan-19 09:24 AM] blackjok3r#3181
How did the ac_founders_reward go? Do I need to fix anything?

[21-Jan-19 10:01 AM] Mylo#8306
Is fpga pipelining same as bitstream?

[21-Jan-19 10:09 AM] CMaurice#1685
the bitstream is usually the format/protocol used to program the device

[21-Jan-19 10:41 AM] blackjok3r#3181
Found a bug in getinfo... really not sure why its doing it for me here... must be the combination of chain params I am using.. Never noticed it before and havent changed anything there.

[21-Jan-19 10:41 AM] blackjok3r#3181
Causing a seg fault.

[21-Jan-19 11:13 AM] blackjok3r#3181
@jl777c  There are a bunch of variables that are declared wrong. Not sure why. I have manage to fix them but they are in code that I modifed heavily. Not sure if its in komodod or not they are:
```
ASSETCHAINS_LASTERA:
    declared as uint_32t but used as uint64_t in places causing overflows, to fix this I just changed the declaration to uint64_t in komodo_globals.h and fixed the prints in komodo_utils.h that use this variable. 
ASSETCHAINS_VERUSHASH:
    Seems to be the same type f thins nut wasnt making bugs, when I added V2 I had to declare it as uint32_t.  In chainparams.cpp it is extern as a long unsigned int but declared in komodo_globals.h as a unnsigned int. ```
There may be more of these, they seem extremly touchy when they start overflowing, and also appear randomly and for what seems no reason. I think you should be able to fix it, by checking they are all delcared as the same type for `extern` as their global declaration.

[21-Jan-19 11:19 AM] jl777c#5810
fixing

{Reactions}
üëç 

[21-Jan-19 11:19 AM] blackjok3r#3181
Just by a quick look there appears more of these.. but its a big job to check them all..

[21-Jan-19 11:20 AM] jl777c#5810
yes

[21-Jan-19 11:53 AM] jl777c#5810
pushed fix to jl777 branch. what I did was copied all the externs into komodo_defs.h and put a #include "komodo_defs.h" in files that had a bunch of externs. this way the compiler can do all the consistency checks

[21-Jan-19 11:55 AM] blackjok3r#3181
Nice fix. I will try to merge it down here once it gets to FSM. We need to merge down, but I want to get these algos working first. It seems the reason it worked so well was blind luck and getting it to work again has been harder than I thaught üòÖ

[21-Jan-19 12:53 PM] jl777c#5810
updated FSM

[21-Jan-19 12:59 PM] blackjok3r#3181
Cool will look at that tomorrow and merge new code down. I expect a few conflics to need plenty of time to do it.

[21-Jan-19 01:49 PM] smk762 -  dracocanis ominator#7640
heya, checking in for where we at... heard Feb 1 is tentative date for greatness? Got a few things to juggle, but wouldnt mind knocking up something for migration vis if I can get it done in time. 
have we figured out parameters for the brute migration test?

[21-Jan-19 01:49 PM] blackjok3r#3181
I dont think so... I kind of left it to you guys to sort out. Have been working on other stuff.

[21-Jan-19 01:50 PM] smk762 -  dracocanis ominator#7640
In terms of recording on oracle, I can think of a two options
- create a function to be included in any scripts used to send relevant data into an oracle (or one for each participant)
- or, try and get the info from rpcs

[21-Jan-19 01:51 PM] smk762 -  dracocanis ominator#7640
from there I just need to aggregate and format to some json whcich whatever visualisation used will understand

[21-Jan-19 01:51 PM] blackjok3r#3181
You can get the imports easy with the RPC I made... Alright did a crude scoreboard script already.  But this cant record export attempts... for that you NEED to log to oracle.

[21-Jan-19 01:52 PM] smk762 -  dracocanis ominator#7640
so script function will be needed then

[21-Jan-19 01:52 PM] blackjok3r#3181
Yes each participant should submit at least export to oracle maybe both.

[21-Jan-19 01:53 PM] smk762 -  dracocanis ominator#7640
if its per user I'll need to crete them beforehand to avoid the time it takes to start

[21-Jan-19 01:53 PM] smk762 -  dracocanis ominator#7640
I'm wary of just using one oracle to store it all though cos it might be overwhelmed

[21-Jan-19 01:54 PM] smk762 -  dracocanis ominator#7640
basically, I'd need participants to apply for a txid to put in their script so it sends to their oracle.

[21-Jan-19 01:55 PM] smk762 -  dracocanis ominator#7640
I could probably reuse some of dragonhound to make a web form to make that easy enough

[21-Jan-19 01:55 PM] smk762 -  dracocanis ominator#7640
until then I can test on my end re: json and vis methods when I have a spare minute

[21-Jan-19 01:56 PM] smk762 -  dracocanis ominator#7640
glad we have a public holiday coming up üòÑ üá¶üá∫

{Reactions}
abusedsmily 

[21-Jan-19 01:59 PM] blackjok3r#3181
yeah üòÉ

[21-Jan-19 04:45 PM] Alright#0419
if we slow start, how long should it take to get to full block reward?

[21-Jan-19 04:45 PM] Alright#0419
Joker says a week and I think that's fine

[21-Jan-19 08:48 PM] Alright#0419
@blackjok3r ac_algo=verushash11 -ac_staked not working properly

[21-Jan-19 08:48 PM] Alright#0419
`setgenerate true 0` starts the verushash11 miner instead of the staker

[21-Jan-19 08:49 PM] Alright#0419
maybe I misunderstood something here

[21-Jan-19 08:49 PM] Alright#0419
was verushash11 intended to be used for 100% POW chains?

[21-Jan-19 09:08 PM] Alright#0419
Ah nevermind, got some chains started

[21-Jan-19 09:14 PM] kmdkrazy#8280
What does FSM stand for. ? Just curious

[21-Jan-19 09:15 PM] kmdkrazy#8280
I missed that months ago

[21-Jan-19 09:15 PM] Alright#0419
finite state machine

[21-Jan-19 09:16 PM] kmdkrazy#8280
Perfection

[21-Jan-19 09:18 PM] kmdkrazy#8280
Missed that class.....love it

[21-Jan-19 09:23 PM] kmdkrazy#8280
You guys are going deep...almost beyond imagination.... the kraziest dreams are here... i love watching this shit...

[21-Jan-19 09:46 PM] kmdkrazy#8280
Automated blockchain that creates blockchain on demand ......i mean in reality you are creating a human brain but 10x better.... be carefull please

{Reactions}
üíØ 

[22-Jan-19 01:21 AM] blackjok3r#3181
@Alright  Guess I've missed you, I'm seeing bad results with 10,000 coins are 60% PoS... after 800 blocks. Its useable but basically is 100s blocktimes... Always hitting the cap. Going to try something else. I will also test ac_founders_reward today seems maybe the instructions on how it works were lost. It would need exact chain params to activate.

[22-Jan-19 04:13 AM] blackjok3r#3181
`percPoS = ((percPoS * n) + (goalperc * (100-n))) / 100;  `
@jl777c  
When your around, can you explain to me how this is meant to work, its calcuating the PoS under 100 blocks inversly, and it seems to be this is the cause of the problems. Instead fo the PoS blocks being dispersed, the first 100 blocks are nearly all PoW... then when it gets to block 100, it instantly changes to the correct %. throws out the entire calcuation. By changing it to this:
`percPoS = (percPoS*100) / (m+n); ` 
It seems to work much better. Although it also means PoS weight must be distributed in the first 10 blocks, or the chain cant start.  There is one diffrence that the VerusMiner uses over equihash, and that is the first 50 blocks have a `sleep` enforced 10s block time, to prevent chain forks on start, which I think is a great idea, as thats a real issue... However this means the chain diff is all wrong under 200 blocks.

