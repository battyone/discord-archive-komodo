==============================================================
Guild: Komodo
Channel: dev-students
Topic: A channel for students and academics to talk.
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[21-Aug-18 04:08 PM] jl777c#5810
once you understand points (you will already need to understand memory) and then you can cut through all the abstractions that try to hide these details

[21-Aug-18 04:08 PM] if(!destiny){return slave}#0736
i have the C programming language bible

[21-Aug-18 04:09 PM] grewalsatinder#9653
>you will already need to understand memory
I also found this:

https://github.com/shihyu/CSAPP2e/blob/master/Computer%20Systems%20-%20A%20Programmer's%20Perspective%20(2nd).pdf

Computer Systems - A Programmer's Perspective (2nd).pdf

{Embed}
https://github.com/shihyu/CSAPP2e/blob/master/Computer%20Systems%20-%20A%20Programmer's%20Perspective%20(2nd).pdf
shihyu/CSAPP2e
Contribute to CSAPP2e development by creating an account on Github.
https://avatars2.githubusercontent.com/u/1113188?s=400&v=4

[21-Aug-18 04:09 PM] if(!destiny){return slave}#0736
its the second edition

[21-Aug-18 04:10 PM] if(!destiny){return slave}#0736
the c programming language second edition

[21-Aug-18 04:10 PM] grewalsatinder#9653
I do have understanding on hardware level, but sure reading up on all that again from a programmer's point of view is what I need to read again.

[21-Aug-18 04:10 PM] if(!destiny){return slave}#0736
i have the pdf

[21-Aug-18 04:12 PM] if(!destiny){return slave}#0736
@grewalsatinder  i just download this book thanks

[21-Aug-18 04:12 PM] grewalsatinder#9653
I got away from C/C++ mainly because of practices/exercises given to us in study was mostly maths exercises.

[21-Aug-18 04:12 PM] grewalsatinder#9653
np @if(!destiny){return slave}

[21-Aug-18 04:12 PM] grewalsatinder#9653
and I'm not good with maths. jus a OK level.

[21-Aug-18 04:12 PM] if(!destiny){return slave}#0736
i pretty decent with math

[21-Aug-18 04:13 PM] grewalsatinder#9653
now that I know what I need to do, and the problems I have in hand to solve, I don't care what I will go through to learn and complete them.

[21-Aug-18 04:13 PM] if(!destiny){return slave}#0736
so c./c++ , golang, or rust

[21-Aug-18 04:13 PM] grewalsatinder#9653
will get hands dirty and mind bend by maths too if required.

[21-Aug-18 04:13 PM] grewalsatinder#9653
my choice is C and golang.

[21-Aug-18 04:14 PM] grewalsatinder#9653
do your research a bit online, and learn about them. it'll help you chose what you want.

[21-Aug-18 04:14 PM] if(!destiny){return slave}#0736
how long have you been programming

[21-Aug-18 04:15 PM] grewalsatinder#9653
I'm mainly a GUI programmer. but did my studies on Computer Science in 2004

[21-Aug-18 04:16 PM] grewalsatinder#9653
have learnt basics of these long ago, but haven't practiced.

[21-Aug-18 04:16 PM] grewalsatinder#9653
I'm on fresh start here. again....

[21-Aug-18 04:16 PM] grewalsatinder#9653
for C

[21-Aug-18 04:16 PM] grewalsatinder#9653
coding some in golang already

[21-Aug-18 04:16 PM] grewalsatinder#9653
if you used BarterDEX GUI, that's my GUI code.

[21-Aug-18 04:24 PM] if(!destiny){return slave}#0736
ok

[21-Aug-18 04:24 PM] if(!destiny){return slave}#0736
where are you from ?

[21-Aug-18 04:28 PM] grewalsatinder#9653
internet

{Reactions}
üòÇ 

[21-Aug-18 04:29 PM] if(!destiny){return slave}#0736
fair enough

[21-Aug-18 04:30 PM] if(!destiny){return slave}#0736
i know someone i met at a conference tells me he builds blockchain tech in go

[21-Aug-18 04:32 PM] if(!destiny){return slave}#0736
@grewalsatinder what resources did you use to learn go

[21-Aug-18 04:32 PM] grewalsatinder#9653
udemy video course helped

[21-Aug-18 04:33 PM] grewalsatinder#9653
and reading documentation

[21-Aug-18 04:33 PM] grewalsatinder#9653
https://docs.iris-go.com/

[21-Aug-18 04:34 PM] grewalsatinder#9653
https://www.udemy.com/learn-how-to-code/

{Embed}
https://www.udemy.com/learn-how-to-code/
Learn How To Code: Google's Go (golang) Programming Language
Learn programming from a University Professor in Computer Science with over 15 years of teaching experience.
https://udemy-images.udemy.com/course/480x270/642102_4e20_2.jpg

[21-Aug-18 04:51 PM] if(!destiny){return slave}#0736
what is iris

[24-Aug-18 12:57 PM] jl777c#5810
I will be writing a document explaining how to write KMD CC contracts, so if you have any questions about this, please ask in #ask-jl777

{Reactions}
Komodo (2) 

[26-Aug-18 06:06 PM] if(!destiny){return slave}#0736
hello

[26-Aug-18 06:06 PM] if(!destiny){return slave}#0736
i am interested in learning C and C++

[26-Aug-18 06:06 PM] if(!destiny){return slave}#0736
any good resources

[26-Aug-18 06:23 PM] jorian#4555
code from jl777

[26-Aug-18 06:50 PM] if(!destiny){return slave}#0736
i see

[26-Aug-18 06:50 PM] if(!destiny){return slave}#0736
https://www.youtube.com/watch?v=9_goo9L5Uko&list=PL_c9BZzLwBRKKqOc9TJz1pP0ASrxLMtp2&index=2

{Embed}
Caleb Curry
https://www.youtube.com/watch?v=9_goo9L5Uko&list=PL_c9BZzLwBRKKqOc9TJz1pP0ASrxLMtp2&index=2
C Programming Tutorial 2 - Installing GCC
In order to get started programming with C, we need to have an operating system to work on. Now, in order to be on the same page, I highly recommend being on...
https://i.ytimg.com/vi/9_goo9L5Uko/maxresdefault.jpg

[26-Aug-18 06:50 PM] if(!destiny){return slave}#0736
is this tutorial any good ?

[26-Aug-18 08:17 PM] Alright#0419
The third week of STAKED will begin tomorrow at 3PM UTC. If anyone is interested in learning the ins and outs of komodo and it's contracts, it's a great place to learn. Check out the #private-staked channel for more information. Purpose of the chain is to incentivize testing smart contracts and various KMD features. Find a bug, and you'll be rewarded

[26-Aug-18 09:35 PM] TonyL#3577
@if(!destiny){return slave} When I needed to code some labs on C in university I read this book at weekend and used it as a     
handbook then: https://en.wikipedia.org/wiki/The_C_Programming_Language

{Embed}
https://en.wikipedia.org/wiki/The_C_Programming_Language
The C Programming Language
The C Programming Language (sometimes termed K&R, after its authors' initials) is a computer programming book written by Brian Kernighan and Dennis Ritchie, the latter of whom originally designed and implemented the language, as well as co-designed the Unix operating system w...
https://upload.wikimedia.org/wikipedia/commons/thumb/9/95/The_C_Programming_Language%2C_First_Edition_Cover_%282%29.svg/1200px-The_C_Programming_Language%2C_First_Edition_Cover_%282%29.svg.png

[27-Aug-18 07:24 AM] jl777c#5810
yes, that is what I used also. there are PDF files of it online. it is really all you need, other than a C compiler

[27-Aug-18 07:31 AM] grewalsatinder#9653
https://github.com/RandyMcMillan/the_c_programming_language_2/blob/master/Resources/the_c_programming_language_2.pdf

{Embed}
https://github.com/RandyMcMillan/the_c_programming_language_2/blob/master/Resources/the_c_programming_language_2.pdf
RandyMcMillan/the_c_programming_language_2
the_c_programming_language_2 - ANSI C Book
https://avatars3.githubusercontent.com/u/152159?s=400&v=4

{Reactions}
üëç 

[27-Aug-18 07:33 AM] grewalsatinder#9653
https://github.com/ccpalettes/the-c-programming-language-second-edition-solutions

{Embed}
https://github.com/ccpalettes/the-c-programming-language-second-edition-solutions
ccpalettes/the-c-programming-language-second-edition-solutions
the-c-programming-language-second-edition-solutions - Solutions for all exercises in the book "The C Programming Language - Second Edition"(referred to as K&R, after its authors' ...
https://avatars2.githubusercontent.com/u/3355011?s=400&v=4

[27-Aug-18 07:56 AM] if(!destiny){return slave}#0736
@jl777c  , @grewalsatinder  , @TonyL thanks guys

[29-Aug-18 01:56 PM] BitDaddy#1453
A song I wrote during the crypto bear market. Gave Komodo a mention , much respect going out. One of the best. üòé   Enjoy and feel free to share.   https://www.youtube.com/watch?v=65mQ-dUmhZo

{Embed}
09Guitarman09
https://www.youtube.com/watch?v=65mQ-dUmhZo
The Crypto Blues Pick Mix
The Crypto Blues - Another take. A song I wrote during this crypto bear market. Enjoy and feel free to like and share. Thanks $BTC - 3Dh3tyGxJ8QbNVbkmNNZcuMx...
https://i.ytimg.com/vi/65mQ-dUmhZo/hqdefault.jpg

{Reactions}
üòÑ (2) üòÇ (2) 

[03-Sep-18 01:59 PM] Alright#0419
If anyone is interested in learning Komodo's bleeding edge tech and being rewarded for it, check out the #private-staked channel. It's a chain to incentivize testing. Week 4 will be starting in ~1 hour.

{Reactions}
üëå 

[03-Sep-18 01:59 PM] Alright#0419
Great place to learn no matter your initial skill level

[05-Sep-18 11:32 PM] Deleted User#0000
@jl777c what do you recommend using as a C compiler?

[06-Sep-18 04:45 AM] jl777c#5810
gcc is fine, but really there are many choices

[06-Sep-18 05:11 AM] grewalsatinder#9653
I'm using gcc on both macos and linux to test and learn

[06-Sep-18 05:11 AM] grewalsatinder#9653
any version of gcc

[06-Sep-18 05:11 AM] grewalsatinder#9653
gcc-6 or gcc-7

[06-Sep-18 05:11 AM] grewalsatinder#9653
I tested

[06-Sep-18 09:08 AM] grewalsatinder#9653
I'm looking for C language examples for bitcoin code. The simplest forms.
like these are for mastring bitcoin, which are in C++
https://github.com/bhinesley/mastering-bitcoin-examples

{Embed}
https://github.com/bhinesley/mastering-bitcoin-examples
bhinesley/mastering-bitcoin-examples
I'm coding up examples/exercises from Mastering Bitcoin by Andreas M. Antonopoulos - bhinesley/mastering-bitcoin-examples
https://avatars0.githubusercontent.com/u/938827?s=400&v=4

[06-Sep-18 09:38 AM] grewalsatinder#9653
no worries, I'll follow another way. üôÇ

[07-Sep-18 12:14 AM] Deleted User#0000
@jl777c what language would you suggest learning if i want to get the most for the time it takes to learn... given my advanced age i think my focus should shift into learning something more efficient .  i know you like C, but i was wondering if you have other suggestions looking into the future of crypto and applications and could suggest something that will be big in the future of Cs and especifically blockchain.

[07-Sep-18 12:28 AM] blackjok3r#3181
Python is the easiest, I started n BASH shell script, which seems to share a lot of syntax with C, so moving to reading C code at least has not been so hard. I think its more understading how it works, like with anything else. If you understand the how, and what, then implementation in any language is pretty simple.

[07-Sep-18 08:20 AM] jl777c#5810
Most all the languages descended from C. C has very little extras, so i think can be learned the quickest. dont be afraid of pointers.

[09-Sep-18 12:31 PM] Mylo#8306
@Deleted User learning how to program is one thing, doing something useful is another unfortunately.   learning C is a good primer for the reasons james mentions.   the main thing to do is do it often for a a few weeks.  if you are new, setting up your dev environment will the the first lesson.  if you start on linux it's easier.  once you understand things like main() function is a entry point for the program, other lanugages have their equivalent entry point.   how languages treat numbers, text, threads so you can manage them then becomes about learning syntax once you have fundamentals learned and can pick up a new language much easier than your first.

[10-Sep-18 11:51 AM] kh4567#1136
Or u can learn c++ where u can learn about link list, pointers, inheritance and polymorphism..

[10-Sep-18 11:53 AM] kh4567#1136
CS101

[10-Sep-18 11:57 AM] Deleted User#0000
got a good link?

[10-Sep-18 11:57 AM] Deleted User#0000
downloaded JL recommended book, pretty cool

[10-Sep-18 12:36 PM] Alright#0419
Here goes my weekly shill for #private-staked .... üòÖ 

If you're interested in learning the inner workings of Komodo, come check out the staked channel. It's an asset chain to incentivize testing contracts and other underlying features of komodo

[10-Sep-18 12:37 PM] Alright#0419
get rewarded for finding bugs and learn a hell of a lot about komodo's tech

[10-Sep-18 04:04 PM] saniales#3650
Awesome...

[13-Sep-18 05:23 AM] iamsaksham#1825
Hey guys. I am new to this Komodo channel.
I am a frontend developer working on React/Redux stack. Also few months back I started learning about Blockchain and smart contracts, tokens etc and now I feel confident enough to participate in some blockchain development going on.
So please let me know how to get my hands on Komodo platform and how can I help the Komodo community in any way, if I can.

[13-Sep-18 06:09 AM] Mylo#8306
@iamsaksham how much ‚Äúbackend‚Äù are you comfortable with?
Ubuntu?
Docker?
NodeJS?
In react, how do you connect to a web service, fetch axios or other framework?

[13-Sep-18 06:10 AM] Mylo#8306
Welcome!!

[13-Sep-18 06:20 AM] Alright#0419
@iamsaksham a good place to learn about Komodo's underlying tech would be #private-staked It's a coin to incentivize testing komodo's features and smart contracts

[13-Sep-18 06:40 AM] jl777c#5810
we have over half a dozen CC contracts now,but none of them have a GUI

[13-Sep-18 06:40 AM] jl777c#5810
and it seems without a GUI, its like it doesnt even exist

{Reactions}
üíØ (5) 

[13-Sep-18 07:27 AM] blackjok3r#3181
we are starting a DICE GUI as soon as I get these damn staked notaries working.

[13-Sep-18 07:40 AM] iamsaksham#1825
I have little experience of backend. I am comfortable with JavaScript. I have worked on docker as well.
I have worked on ubuntu as well, but currently i am on macos.

In react for a web service I've used superagent, axios etc. So I am very much comfortable. I have worked on websockets as well

[13-Sep-18 07:43 AM] iamsaksham#1825
Thanks for the welcome guys.

[13-Sep-18 08:03 AM] designer#4893
https://www.coindesk.com/10-years-after-lehman-bitcoin-and-wall-street-are-closer-than-ever/

{Embed}
https://www.coindesk.com/10-years-after-lehman-bitcoin-and-wall-street-are-closer-than-ever/
10 Years After Lehman: Bitcoin and Wall Street Are Closer Than Eve...
Bitcoin, born into the flames of the credit crisis, seemed like a rebellion against a broken financial system. Ten years later, is that still true?
https://media.coindesk.com/uploads/2018/09/shutterstock_87475942-e1536821799482.jpg

[13-Sep-18 08:35 AM] Mylo#8306
@iamsaksham ok good to know.  we also have different dev teams working on different things, so there really is no wrong answer at the moment - although i'm hoping to get front end coders like yourself up and running in 5 minutes with docker.   you'll be able to build a very elaborate gui in pretty quick time.  The (beta) 5 minute quickstart may be available next week with some light docs - so unfortunately, my own way of getting you going quickly is:


1.  `docker pull imylomylo/jl777-komodo/dev` will get an image from https://hub.docker.com/r/imylomylo/jl777-komodo-dev/ (github link there for Dockerfile)

Works best on ubuntu.

There is no CORS support on the daemon atm, so you need to proxy the RPC requests.   There are nodejs modules to help with this, but i haven't explored them because I'm working on a nodejs rpc lib https://github.com/imylomylo/komodo-rpc-lib/tree/master/src


Otherwise, use a virtual machine with ubuntu - you can then use docker in there or work on building komodo from source http://i.mylomylo.com/build-komodo-source

lmk any questions - this channel and #dev-general channel and any questions should be answered in pretty quick time.

{Embed}
https://github.com/imylomylo/komodo-rpc-lib/tree/master/src
imylomylo/komodo-rpc-lib
ES6 komodo platform rpc for use in gui or nodejs. Contribute to imylomylo/komodo-rpc-lib development by creating an account on GitHub.
https://avatars3.githubusercontent.com/u/19399102?s=400&v=4

{Embed}
Mylo Mylo
http://i.mylomylo.com/build-komodo-source
Build Komodo From Source | iMyloMylo
This is how you build Komodo on Ubuntu 16.04 ¬† sudo apt-get install build-essential pkg-config libc6-dev m4 g++-multilib autoconf libtool ncurses-dev unzip git python zlib1g-dev wget bsdmainutils automake libboost-all-dev libssl-dev libprotobuf-dev protobuf-compiler libqt4-d...
https://i.mylomylo.com/wp-content/uploads/2018/05/komodo-merch-francecs.jpg

[13-Sep-18 08:37 AM] iamsaksham#1825
Cool. Thanks, let me get things set up

[13-Sep-18 08:40 AM] Mylo#8306
building from src is the best if you're comfortable with compiling code, pretty straight forward.  we all build komodo daily multiple times so maybe 
Oh and....if you dont' want to wait for the chain to sync (3.5GB), use `-regtest` to interact with command line quickly to test out curl commands etc.

{Reactions}
üî• (4) 

[25-Sep-18 02:15 PM] saniales#3650
Hello, I would like to start developingKomodo smart contracts? any resource on how to start? anything would be helpful

[25-Sep-18 02:18 PM] jl777c#5810
https://github.com/KomodoPlatform/Mastering_CryptoConditions

{Embed}
https://github.com/KomodoPlatform/Mastering_CryptoConditions
KomodoPlatform/Mastering_CryptoConditions
How to write utxo based CryptoConditions contracts for KMD chains - by jl777 - KomodoPlatform/Mastering_CryptoConditions
https://avatars2.githubusercontent.com/u/21276113?s=400&v=4

{Reactions}
üëç (2) 

[25-Sep-18 03:23 PM] saniales#3650
thx

[03-Oct-18 05:23 PM] C Adi#8432
Hi, I'm trying to understand address generation for KMD- is there a resource like https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses
which anyone can point me to? I'm interested to generate my own addresses with python 3

{Embed}
https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses
Technical background of version 1 Bitcoin addresses

[03-Oct-18 06:33 PM] dukeleto#7326
@C Adi it's basically the same, you just use a different base58 prefix for KMD addresses, which becomes `R` in the final address

[03-Oct-18 06:35 PM] dukeleto#7326
```src/chainparams.cpp
169:        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,60);
170:        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,85);
171:        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,188);``` from komodo.git

[03-Oct-18 06:44 PM] C Adi#8432
@dukeleto that's great info, thanks üëåüèª

[10-Oct-18 06:21 AM] Privatoshi#9487
Evening..  Is there any way to get a daily estimate of how much Verus you could mine, by only having the mh/s?  Its not available on a site, like whattomine. I'd rather know how to do it on my own, if that's possible.
Actually, someone sent me a small tutorial.
I read through  the information here every week & it's helpful. Great job

[10-Oct-18 07:16 AM] blackjok3r#3181
I have 500MH/s CPU and get about 20 VRSC a week, maybe less... the pool says luck of 7days but I am sure its less than that.

[10-Oct-18 08:54 AM] Mylo#8306
ask in #talk-mining it's <your-hashrate>/<network-hashrate>*1440 blocks per day * 24 block reward * 0.5 because it is half mined half staked block reward = approx what you should earn.   but best to ask in mining or in VRSC discord mining channel.

[10-Oct-18 01:29 PM] dukeleto#7326
@blackjok3r I solo mine VRSC with a similar hashrate, it's roughly about a week per block these days, so your number sounds about right

{Reactions}
üëç 

[10-Oct-18 01:59 PM] Hermes#6934
Isn't a calculation like your mh/s divided by the total hashrate of the network ?

[11-Oct-18 03:02 PM] Mylo#8306
@Hermes comment between joker and duke üòÉ

{Reactions}
Komodo 

[12-Oct-18 10:30 AM] jl777c#5810
a new simple project for CC dev is to make a faucet that is configurable
so like the rewards plan it would allow to be parameterized
first step is to define all the parameters
then to implement it as faucet2

{Reactions}
ü§ò 

[12-Oct-18 11:52 AM] blackjok3r#3181
I figured out how to disable parts of it ... but its a hard forking change each time you change one thing ... which is usless.

[12-Oct-18 12:11 PM] jl777c#5810
that is why it needs to be faucet2 a different CC

