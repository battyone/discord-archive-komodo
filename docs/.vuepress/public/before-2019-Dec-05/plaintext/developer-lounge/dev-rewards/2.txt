==============================================================
Guild: Komodo
Channel: dev-rewards
Topic: A channel to discuss claiming Komodo's 5.1% rewards.
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[24-Oct-18 11:40 AM] jl777c#5810
yes 04 is uncompressed

[24-Oct-18 11:41 AM] jl777c#5810
02/03 are compressed, just half the uncompressed

[24-Oct-18 11:41 AM] jl777c#5810
I am trying to find out what pubkey that is, the only other address in the vin is RQm8BNygniNVqVPRYXEosznRZ7uEiooqSm

[24-Oct-18 11:41 AM] jl777c#5810
so either it used that pubkey or some random pubkey

[24-Oct-18 11:47 AM] lukechilds#2707
ok, let me double check the pubkey for that address

[24-Oct-18 11:47 AM] lukechilds#2707
should it not be in the last transaction?

[24-Oct-18 11:47 AM] lukechilds#2707
from RQm8BNygniNVqVPRYXEosznRZ7uEiooqSm to the Ledger address?

[24-Oct-18 11:48 AM] lukechilds#2707
The raw hex for that is here: https://kmdexplorer.io/insight-api-komodo/rawtx/5395828ab01531681d56647d901148d63fc434bec243eb2058e97a24c201f008

[24-Oct-18 11:48 AM] lukechilds#2707
it doesn't contain the string `03e595e6e348e8d8571eef291a2bda3f4d5ee9c7be1d36991108a9815e86b9ed26 `

[24-Oct-18 11:52 AM] jl777c#5810
unless it was a spend to RQm8BNygniNVqVPRYXEosznRZ7uEiooqSm it wont have the pubkey in it. you cant validateaddress RQm8BNygniNVqVPRYXEosznRZ7uEiooqSm

[24-Oct-18 11:52 AM] jl777c#5810
the mystery is why is the wrong pubkey being used...

[24-Oct-18 11:52 AM] jl777c#5810
are you able to make spends at all, with or without rewards

[24-Oct-18 12:14 PM] lukechilds#2707
No, just tried with the same value as the input, same error

[24-Oct-18 12:15 PM] lukechilds#2707
and just got the pubkey for `RQm8BNygniNVqVPRYXEosznRZ7uEiooqSm`, it's `0330b4191bd253364abe8c19976f196bbcc2f3e66724816ef70e7fe472b5f59d0c`

[24-Oct-18 12:17 PM] lukechilds#2707
I thought a TX contained the pubkey for inputs you're signing, and that was how you verify the signature, is that not correct?

[24-Oct-18 12:20 PM] jl777c#5810
not a p2pkh that has the hash of the pubkey so you need to have the signature and the pubkey on the stack via scriptSig to allow the OP_EQUALVERIFY against the p2pkh scriptPubKey

[24-Oct-18 12:24 PM] lukechilds#2707
I know the recipient address is the hash of the pubkey for a P2PKH TX but I thought when you spend a P2PKH input you need to include your pubkey in the TX. How else can you verify it? And how do you "have the signature and the pubkey on the stack" without including the pubkey in the TX?

[24-Oct-18 12:29 PM] lukechilds#2707
I just checked, it does.
The `RQm8BNygniNVqVPRYXEosznRZ7uEiooqSm` pubkey is included in the raw TX I linked above. That was going `RQm8BNygniNVqVPRYXEosznRZ7uEiooqSm` -> `RMqevVxyUkgJdSqYEKj5CK4XcX5UvqFsyj `

[24-Oct-18 12:47 PM] lukechilds#2707
In the `scriptSig.asm`:

```
3044022022047c84f9dc59d57d54022b3a9aa61db2f78bea8edd513befacfb55439e560b02202d5b74c539b17a1785b10084556249fc9882778b8cf593a1eaaece6e6e2cc7e501 03e595e6e348e8d8571eef291a2bda3f4d5ee9c7be1d36991108a9815e86b9ed26
```

is everything after the space the stack?

[24-Oct-18 12:48 PM] lukechilds#2707
and in a normal P2PKH TX will that always be only the pubkey?

[24-Oct-18 12:54 PM] jl777c#5810
3044022022047c84f9dc59d57d54022b3a9aa61db2f78bea8edd513befacfb55439e560b02202d5b74c539b17a1785b10084556249fc9882778b8cf593a1eaaece6e6e2cc7e501 <- sig

[24-Oct-18 12:54 PM] jl777c#5810
03e595e6e348e8d8571eef291a2bda3f4d5ee9c7be1d36991108a9815e86b9ed26 <- pubkey

[24-Oct-18 12:55 PM] jl777c#5810
the rmd160 of the pubkey needs to match the vout that is being spent

[24-Oct-18 12:55 PM] jl777c#5810
and of course the privkey for that pubkey needs to be in the wallet

[24-Oct-18 12:57 PM] jl777c#5810
using https://bitcoinvalued.com/tools.php -> 1L2ppsT9kmDkLNUG4SWLQr4XdaM1u3K7vL
using https://www.dexstats.info/addressconverter.php?fromcoin=BTC&tocoin=KMD&address=1L2ppsT9kmDkLNUG4SWLQr4XdaM1u3K7vL

{Embed}
https://bitcoinvalued.com/tools.php
Bitcoin Hash160 generator, BitCoin address generator, BitCoin publ...
Bitcoin Hash160 generator, BitCoin address generator, Bitcoin public key to Hash160, Bitcoin address validity checker
http://bitcoinvalued.com/bitcoinvalued.com.fb.png

{Embed}
https://www.dexstats.info/addressconverter.php?fromcoin=BTC&tocoin=KMD&address=1L2ppsT9kmDkLNUG4SWLQr4XdaM1u3K7vL
Dexstats Dashboard - BarterDEX
Key Data for BarterDEX

[24-Oct-18 12:57 PM] jl777c#5810
the pubkey is for address RUK1uPLSMb2KQNqTXcVTWNPjPqocVdQVne

[24-Oct-18 02:26 PM] lukechilds#2707
Thanks, I'll raise this on the Ledger dev slack

[25-Oct-18 02:08 PM] luke#8628
Hey! Do I understand this correctly for how the DEX rewards are paid out?

1. Every time an atomic swap happens in BarterDEX, a 0.15% fee is charged to the Taker in the currency they are sending.
2. That fee is sent to an address in that currency owned by someone at Komodo 
3. Once enough fees are collected, the fees are converted into KMD.
4. Once "accumulated amount is of 1$ million worth of revshares" a payout occurs, and everyone gets a percentage of the fees returned to them.

My questions are 1. how do you know what addresses to send the reward KMD to? 2. how do you know how much to send to each address?

[25-Oct-18 03:02 PM] jl777c#5810
a snapshot of the DEX blockchain is made

[25-Oct-18 03:02 PM] jl777c#5810
that allows to solve both Q1 and Q2

[25-Oct-18 03:55 PM] luke#8628
ah, yes makes sense. thanks

[31-Oct-18 05:53 AM] lukechilds#2707
@jl777c I got the incorrect pubkey issue working but I'm nw getting this when trying to broadcast the TX

```
16: mandatory-script-verify-flag-failed (Script evaluated without error but finished with a false/empty top stack element). Code:-26
```

What does this error mean? That the signature is invalid? I’m definitely passing the correct derivation path for the input to the Ledger and the pubkey in `scriptSig` matches the pubkey for the input. Any ideas?

[31-Oct-18 08:53 AM] jl777c#5810
it means the signature was not valid. either you are signing the incorrect sigtxid or using the wrong privkey

[31-Oct-18 09:06 AM] lukechilds#2707
That's really odd, as far as I can see I'm definitely using the correct privkey

[31-Oct-18 09:06 AM] lukechilds#2707
there are no hardcoded values, I'm requesting the address from the Ledger device, looking up the available UTXOs on insight, and then sending them to the same address

[31-Oct-18 09:07 AM] lukechilds#2707
This is the full tx:

[31-Oct-18 09:08 AM] lukechilds#2707
```
$ komodo-cli decoderawtransaction 0100000001cd560aa07d318c0044c17219bdaa64a49e9965dfb04aafe290f43b97b9171a24000000006b483045022100b6347bb40acf4dc4c9b40ac71b91c14b010fbe4531273763862a3b9d3ff6939502203525d25e5a8645eaaadef82185d6547e6e970912a23609434109e2e824bea6a8012102e4f4b2a6fc1b0b04ae652a961658802c94ffdbe5203ff45466b583c2ac6ec4ebffffffff0100ab9041000000001976a91489c53a986872ed85152facda1b3f306061c8234288ac0000000000000000
{
  "txid": "de41f3cb9109d9e93d723aefd1dcc4f396b911d8e6cc6a75dd2e87996b5e2152",
  "size": 192,
  "version": 1,
  "locktime": 0,
  "vin": [
    {
      "txid": "241a17b9973bf490e2af4ab0df65999ea464aabd1972c144008c317da00a56cd",
      "vout": 0,
      "scriptSig": {
        "asm": "3045022100b6347bb40acf4dc4c9b40ac71b91c14b010fbe4531273763862a3b9d3ff6939502203525d25e5a8645eaaadef82185d6547e6e970912a23609434109e2e824bea6a801 02e4f4b2a6fc1b0b04ae652a961658802c94ffdbe5203ff45466b583c2ac6ec4eb",
        "hex": "483045022100b6347bb40acf4dc4c9b40ac71b91c14b010fbe4531273763862a3b9d3ff6939502203525d25e5a8645eaaadef82185d6547e6e970912a23609434109e2e824bea6a8012102e4f4b2a6fc1b0b04ae652a961658802c94ffdbe5203ff45466b583c2ac6ec4eb"
      },
      "sequence": 4294967295
    }
  ],
  "vout": [
    {
      "value": 11.00000000,
      "valueSat": 1100000000,
      "n": 0,
      "scriptPubKey": {
        "asm": "OP_DUP OP_HASH160 89c53a986872ed85152facda1b3f306061c82342 OP_EQUALVERIFY OP_CHECKSIG",
        "hex": "76a91489c53a986872ed85152facda1b3f306061c8234288ac",
        "reqSigs": 1,
        "type": "pubkeyhash",
        "addresses": [
          "RMqevVxyUkgJdSqYEKj5CK4XcX5UvqFsyj"
        ]
      }
    }
  ],
  "vjoinsplit": [
  ]
}
```

[31-Oct-18 09:09 AM] lukechilds#2707
does anything stand out to you as obviously wrong?

[31-Oct-18 09:11 AM] lukechilds#2707
This is going from `RMqevVxyUkgJdSqYEKj5CK4XcX5UvqFsyj` to `RMqevVxyUkgJdSqYEKj5CK4XcX5UvqFsyj` which is the address for the derivation path `"44'/141'/0'/0/0"` on my Ledger.

The Ledger shows the pubkey as `04e4f4b2a6fc1b0b04ae652a961658802c94ffdbe5203ff45466b583c2ac6ec4eb56aaf9d686b1f2035f9f45e63fa156a1bea03cdd67bf20d1735a9cb36c3632c8` which when compressed is `02e4f4b2a6fc1b0b04ae652a961658802c94ffdbe5203ff45466b583c2ac6ec4eb` which matches the pubkey in `scriptSig`.

[31-Oct-18 09:23 AM] jl777c#5810
locktime isnt set

[31-Oct-18 09:24 AM] jl777c#5810
the signing is against a modified tx, I call it is sigtxid, which takes the scriptSig and puts the scriptPubKey there of the entire tx, including nLockTime

[31-Oct-18 09:24 AM] jl777c#5810
if part of the code things nLockTime is set and created the sigtxid based on that, you are signing the wrong sigtxid

[31-Oct-18 09:24 AM] jl777c#5810
signing things properly is the biggest painfullest thing there is

[31-Oct-18 09:51 AM] lukechilds#2707
Yep, learning that the hard way

[31-Oct-18 09:52 AM] lukechilds#2707
From what I understood I thought locktime was required for the UTXO to accrue rewards, but a TX is still valid without it, it just won't accrue rewards

[31-Oct-18 09:52 AM] lukechilds#2707
is that incorrect?

[31-Oct-18 09:52 AM] lukechilds#2707
I was leaving out locktime for now because I just wanted to get the simplest TX possible signed by the Ledger

[31-Oct-18 09:53 AM] lukechilds#2707
I just tried setting the locktime parameter in the Ledger library to 777, the resulting signed TX looks different but still gets rejected with the same error

[31-Oct-18 09:57 AM] jl777c#5810
it is still valid

[31-Oct-18 09:58 AM] jl777c#5810
the vin is a p2pkh and the pubkey matches, and the error indicates it is past the pubkey check, so the signature is failing

[31-Oct-18 09:59 AM] jl777c#5810
the three possible ways it can fail is invalid signature from valid privkey, invalid privkey, the wrong thing is being signed

[31-Oct-18 09:59 AM] jl777c#5810
the first would be rare and doubt it is happening with an already working system

[31-Oct-18 09:59 AM] jl777c#5810
second is likely not the issue as i am assuming the same automatic mechanism that is adding the pubkey is doing the signing, and they are a matched pair

[31-Oct-18 10:00 AM] jl777c#5810
which means it is most likely the sigtxid being wrong and likely it wont printout what it is actually signing, but that is the next step to see what the sigtxid it is signing is and compare it to what it should be

[31-Oct-18 10:01 AM] jl777c#5810
https://en.bitcoin.it/wiki/OP_CHECKSIG explains in detail how the sigtxid is calculated

{Embed}
https://en.bitcoin.it/wiki/OP_CHECKSIG
OP CHECKSIG

[31-Oct-18 10:07 AM] lukechilds#2707
ok, thanks, will look into that

[31-Oct-18 10:07 AM] lukechilds#2707
I can't really print anything out because all the signing is happening on the device

[31-Oct-18 10:09 AM] lukechilds#2707
Do you think it would be useful to dump the privkey from the Ledger, try and create and sign a transaction on my machine using the same key/UTXO and see if it it's valid

[31-Oct-18 10:09 AM] lukechilds#2707
then if it is compare the two

[31-Oct-18 10:09 AM] lukechilds#2707
that might give us some pointers where the Ledger TX is going wrong

[31-Oct-18 10:19 AM] jl777c#5810
signatures are non-deterministic, but if you can sign it on your system, then that eliminates the second issue and makes it pretty certain that the sigtxid is the problem

[31-Oct-18 11:13 AM] lukechilds#2707
Manually crafting the TX on my machine works and doesn't get rejected

[31-Oct-18 11:13 AM] lukechilds#2707
```
$ komodo-cli decoderawtransaction 0100000001cd560aa07d318c0044c17219bdaa64a49e9965dfb04aafe290f43b97b9171a24000000006a47304402203a2dd63eb169c95fd5c0c4dd59f30b2b23cd43da167c3b303fd033f890fc97e602207fc0bdf16fb93a6d3986d4ec199e25c0dd3f2f55b01de0ab005a01e1a32c575b012102e4f4b2a6fc1b0b04ae652a961658802c94ffdbe5203ff45466b583c2ac6ec4ebffffffff0100ab9041000000001976a91489c53a986872ed85152facda1b3f306061c8234288ac00000000
{
  "txid": "52c639ced3eaa5f94f1cc0d63ee84cbed6581d2dfa0df4c394e9157319613ff7",
  "size": 191,
  "version": 1,
  "locktime": 0,
  "vin": [
    {
      "txid": "241a17b9973bf490e2af4ab0df65999ea464aabd1972c144008c317da00a56cd",
      "vout": 0,
      "scriptSig": {
        "asm": "304402203a2dd63eb169c95fd5c0c4dd59f30b2b23cd43da167c3b303fd033f890fc97e602207fc0bdf16fb93a6d3986d4ec199e25c0dd3f2f55b01de0ab005a01e1a32c575b01 02e4f4b2a6fc1b0b04ae652a961658802c94ffdbe5203ff45466b583c2ac6ec4eb",
        "hex": "47304402203a2dd63eb169c95fd5c0c4dd59f30b2b23cd43da167c3b303fd033f890fc97e602207fc0bdf16fb93a6d3986d4ec199e25c0dd3f2f55b01de0ab005a01e1a32c575b012102e4f4b2a6fc1b0b04ae652a961658802c94ffdbe5203ff45466b583c2ac6ec4eb"
      },
      "sequence": 4294967295
    }
  ],
  "vout": [
    {
      "value": 11.00000000,
      "valueSat": 1100000000,
      "n": 0,
      "scriptPubKey": {
        "asm": "OP_DUP OP_HASH160 89c53a986872ed85152facda1b3f306061c82342 OP_EQUALVERIFY OP_CHECKSIG",
        "hex": "76a91489c53a986872ed85152facda1b3f306061c8234288ac",
        "reqSigs": 1,
        "type": "pubkeyhash",
        "addresses": [
          "RMqevVxyUkgJdSqYEKj5CK4XcX5UvqFsyj"
        ]
      }
    }
  ],
  "vjoinsplit": [
  ]
}
```

[31-Oct-18 11:13 AM] lukechilds#2707
https://www.kmdexplorer.io/tx/52c639ced3eaa5f94f1cc0d63ee84cbed6581d2dfa0df4c394e9157319613ff7

[31-Oct-18 11:13 AM] lukechilds#2707
didn't get rejected

[31-Oct-18 11:15 AM] lukechilds#2707
What do you mean by "signatures are non-deterministic"?

That the same input will result in a different signature? Because on the Ledger and on my machine, the same input results in the same output each time.

[31-Oct-18 11:19 AM] jl777c#5810
well, it depends on the entropy that is input, it could be deterministic

[31-Oct-18 11:19 AM] jl777c#5810
based on a specific implementation

[31-Oct-18 11:19 AM] jl777c#5810
but this indicates the ledger is signing the wrong rawtx

[31-Oct-18 11:40 AM] lukechilds#2707
sorted it!

[31-Oct-18 11:40 AM] lukechilds#2707
I was manually creating the output script for the ledger TX

[31-Oct-18 11:40 AM] lukechilds#2707
and I had some null bytes on the end

[31-Oct-18 11:41 AM] jl777c#5810
!!

[31-Oct-18 11:41 AM] jl777c#5810
it does need to be 100% precise to the bit

[31-Oct-18 11:41 AM] jl777c#5810
glad it is sorted

[31-Oct-18 11:41 AM] lukechilds#2707
yeah, thanks a lot for your help 🙌

{Reactions}
👏🏽 🚀 

[31-Oct-18 12:21 PM] lukechilds#2707
First ever reward claim transaction signed from a Ledger!!!
https://kmdexplorer.io/tx/a058096f1996e5cc6c422c35fc0af08bf54c4eff6583fbbfa5396cd8a8c62b98

{Reactions}
👏 (6) shexy (2) rum (2) yassinkomodo 

[31-Oct-18 12:30 PM] jl777c#5810
nLicktime needs to be a unixtimestamp

[31-Oct-18 12:32 PM] lukechilds#2707
why is nLocktime required btw?

[31-Oct-18 12:32 PM] lukechilds#2707
I don't quite understand

[31-Oct-18 12:33 PM] lukechilds#2707
why can't all UTXOs be claimed and just use the block height they were confirmed as their age

[31-Oct-18 12:52 PM] jl777c#5810
speed

[31-Oct-18 12:53 PM] jl777c#5810
things are slow enough as it is, without required block lookups

[31-Oct-18 12:53 PM] jl777c#5810
CCduration uses the timestamp in the block

[31-Oct-18 01:20 PM] lukechilds#2707
but `txheight` is already used in quite a few places in the interest calculations

[31-Oct-18 01:22 PM] lukechilds#2707
so instead of

```
minutes= (tiptime - nLockTime) / 60)
```

it would be

```
minutes= (tipheight - txheight)
```

[31-Oct-18 01:23 PM] jl777c#5810
at the time i couldnt be 100% sure in the accuracy, also height difference only approximates minutes

[31-Oct-18 01:23 PM] jl777c#5810
anyway, it is done and consensus is based on this, to change it would break consensus and create an entire update, for minimal gains

[31-Oct-18 01:24 PM] lukechilds#2707
yeah, not advocating to change it, just wanted to understand why it's like this

[31-Oct-18 01:24 PM] jl777c#5810
it was done years ago

[31-Oct-18 01:25 PM] jl777c#5810
before I had a 100% assured way of having the block timestamp

[31-Oct-18 01:25 PM] jl777c#5810
also, it allows to implement mempool expiration without changing tx serialization

[31-Oct-18 01:55 PM] lukechilds#2707
ok

[31-Oct-18 01:56 PM] lukechilds#2707
and re setting the nLocktime to a unix timestamp

[31-Oct-18 01:56 PM] lukechilds#2707
can I just use the current time or should it be slightly in the future?

[31-Oct-18 01:57 PM] lukechilds#2707
is there a threshold where a nLocktime is too old and it won't get mined or will be rejected?

[31-Oct-18 01:59 PM] jl777c#5810
slightly in the past

[31-Oct-18 01:59 PM] jl777c#5810
cant be more than an hour in the past

[31-Oct-18 01:59 PM] lukechilds#2707
ok

[31-Oct-18 02:01 PM] lukechilds#2707
doesn't that mean someone can just set nLocktime to 59 minutes in the past and claim after 5 minutes and rinse and repeat?

