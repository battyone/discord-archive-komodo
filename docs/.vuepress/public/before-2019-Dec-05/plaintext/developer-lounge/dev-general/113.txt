==============================================================
Guild: Komodo
Channel: dev-general
Topic: A place for general developer talk – for everyone! | Documentation https://developers.komodoplatform.com | MoreDev Docs - https://docs.komodoplatform.com | Mastering CryptoConditions - https://github.com/KomodoPlatform/Mastering_CryptoConditions
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[31-Jan-19 05:45 AM] blackjok3r#3181
There only needs to eb goo segid distribution if your a whale

[31-Jan-19 05:45 AM] blackjok3r#3181
I tested staking with a single address and -pubkey on some of CFEK chains... 50-60,000 txns in wallet

[31-Jan-19 05:46 AM] Alright#0419
I don't understand why what I suggested isn't viable. I'm not saying it's absolutely necessary, just floating the idea

[31-Jan-19 05:46 AM] blackjok3r#3181
I dont really understand what your asking...  the tx HGAS TO BE the last utxo in the block... thats HOW it determines its a stked block... without that it will simply fail to work at all

[31-Jan-19 05:46 AM] Alright#0419
essentially you would add input to staking verification tx of the coinbase itself and make validation compensate for this

[31-Jan-19 05:46 AM] blackjok3r#3181
Im not chaging that

[31-Jan-19 05:46 AM] blackjok3r#3181
you can

[31-Jan-19 05:46 AM] Alright#0419
lol

[31-Jan-19 05:47 AM] Alright#0419
can't*

[31-Jan-19 05:47 AM] blackjok3r#3181
I dont think you understand how hard that is

[31-Jan-19 05:47 AM] blackjok3r#3181
For basically no reason

[31-Jan-19 05:47 AM] Alright#0419
Guess i don't

[31-Jan-19 05:47 AM] blackjok3r#3181
it saves makeing 1 transacion

[31-Jan-19 05:47 AM] blackjok3r#3181
IF you want to stake that way... there are better way to stake than using that method

[31-Jan-19 05:47 AM] Alright#0419
my concern is that the default staker will work fine for a week, a month, maybe 2

[31-Jan-19 05:47 AM] blackjok3r#3181
that is just the easiest with decent results

[31-Jan-19 05:48 AM] blackjok3r#3181
Only if you stake lik 80% of all blocks

[31-Jan-19 05:48 AM] blackjok3r#3181
Its the walelt that breaks... not the staker

[31-Jan-19 05:48 AM] Alright#0419
but then when user wants to add coins or withdraw coins, they will have problems from having too many utxos

[31-Jan-19 05:48 AM] Alright#0419
it will mess up their distributed across segids

[31-Jan-19 05:48 AM] Alright#0419
it just isn't clean

[31-Jan-19 05:49 AM] Alright#0419
what I'm suggesting would keep a steady utxo count

[31-Jan-19 05:49 AM] blackjok3r#3181
You cant have too manty until over 30-40,000

[31-Jan-19 05:49 AM] Alright#0419
and just have them grow in size with each staked block

[31-Jan-19 05:49 AM] blackjok3r#3181
thats reaching stupid whalet territory... noone should ahve that many coins on a real chain LOL

[31-Jan-19 05:49 AM] Alright#0419
ok, I'm making problems where there aren't any

[31-Jan-19 05:50 AM] blackjok3r#3181
The new ram staker and the corrupt wallet code fix should stop any of these issues you ahd on MGNX

[31-Jan-19 05:51 AM] blackjok3r#3181
Its really up to the user to decide hwo they awnt to stake... thats the whole idea of PoS64.... right ... if you make some methoid of staking default behaviour you forcce everyone to use it. And I'm tellingf you that method isnt the best one... I for one dont want to use it... lol

[31-Jan-19 05:52 AM] Alright#0419
default behavior vs proper staking scripts is a *huge* difference

[31-Jan-19 05:52 AM] Alright#0419
even the v1 staker.py makes a very large difference

[31-Jan-19 05:53 AM] Alright#0419
which is basically the behavior I just described

[31-Jan-19 05:53 AM] blackjok3r#3181
The ideal way to stake is to distribute utxos into segid that are more likely to stak in the future, not ones that have been lucky in the past.

[31-Jan-19 05:54 AM] Alright#0419
I'm not sure the current staker is the proper way to accomplish that. I really need to figure out exactly how it works, but isn't it just checking which segids staked in the previous 100 blocks and distributing coins to the least staked segid?

[31-Jan-19 05:54 AM] Alright#0419
if so, that doesn't quite make sense

[31-Jan-19 05:55 AM] Alright#0419
because by the time that utxo is eligible to stake, another 100 blocks have happened

[31-Jan-19 05:55 AM] Alright#0419
and your distribution is tweaked to the 100 previous blocks

[31-Jan-19 05:55 AM] blackjok3r#3181
But you also need to take into account utxo age... so moving them too often is a terrible idea.
I tried to make somehting for mined blocks, that move utxos based on age and size into segids that have stked the least in the last 100 blocks.. its nto perfect it was mroe an example on how to use the RPCs...

[31-Jan-19 05:55 AM] blackjok3r#3181
Unless you ahev 5000+ utxos they dont work so well

[31-Jan-19 05:56 AM] Alright#0419
once I have enough OUR to setup a couple decent staking nodes, I'll try a few different methods and log stats

[31-Jan-19 05:56 AM] blackjok3r#3181
Thats the ebst idea... I was hopeing ppl onLABS would to that 😃

[31-Jan-19 05:57 AM] blackjok3r#3181
give them the RPCs to get data and an example script

[31-Jan-19 05:57 AM] blackjok3r#3181
see who comes up with best staker... and ifg htey will share it back 😂

[31-Jan-19 06:36 AM] niksmac#0421
@cipi I was checking this https://github.com/cipig/electrumx/tree/kmdassets

{Embed}
https://github.com/cipig/electrumx/tree/kmdassets
cipig/electrumx
Alternative implementation of spesmilo/electrum-server - cipig/electrumx
https://avatars0.githubusercontent.com/u/32116761?s=400&v=4

[31-Jan-19 06:37 AM] niksmac#0421
Question: does this supports all assetchin coins by default or do i have to modify the `coins.py` file here https://github.com/cipig/electrumx/blob/kmdassets/electrumx/lib/coins.py

{Embed}
https://github.com/cipig/electrumx/blob/kmdassets/electrumx/lib/coins.py
cipig/electrumx
Alternative implementation of spesmilo/electrum-server - cipig/electrumx
https://avatars0.githubusercontent.com/u/32116761?s=400&v=4

[31-Jan-19 07:48 AM] jl777c#5810
Maybe a review of the jl777 staker? it seems there have been many changes made in LABS but not all of them got into a pull request and this difference is creating some rare crash?

[31-Jan-19 09:33 AM] blackjok3r#3181
I only half fixed the segid fix it seems it still did not set for proof of work blocks, but I don't this k this can cause a crash, I think maybe the changes made to the flow logic of the staked inadvertently fixed the crash... I'm just not sure what it was... I can try to just copy komodo_bitcoind.h and miner.cpp to FSM and see if that works, but that seems like it won't work as I've added verushash2 and changed how it selects mindiff and other things which depend on changes elsewhere

[31-Jan-19 09:34 AM] blackjok3r#3181
The Easiest way to do this is for me maybe to list what changes are in labs, and you to tell em what to remove..

[31-Jan-19 09:35 AM] blackjok3r#3181
Rather than you havung to go through everything... I can also just disable all staked function's by making every chain staked = 0.

[31-Jan-19 09:39 AM] blackjok3r#3181
Is staked notary and komodo notary are mutually exclusive, maybe I can test this build on my notary node for a few days and make sure it works as expected... Then just disable staked chain functions, and disable the wallet filter... I this k that's all that will be needed... Any rpc that need is staked to be true can just return error.

[31-Jan-19 09:39 AM] blackjok3r#3181
@jl777c

[31-Jan-19 09:40 AM] jl777c#5810
is this crash only on OUR when staking? that seems strange...

[31-Jan-19 09:41 AM] jl777c#5810
i have so little info on the crash, it is hard to tell where it can be

[31-Jan-19 09:41 AM] jl777c#5810
maybe that zcash fix will fix it?

[31-Jan-19 09:43 AM] blackjok3r#3181
I'm not sure haven't tested it... You should really get the stalker bugs fixed from labs, there was many many days of debugging to get it working that well, but a crash was never something I came across... My only guess is that moving the submit block in future wait loop now bring inside createblock likely stops some null pointer issue Outside of lock cs_main..  But even that doesn't make a lot of sense.

[31-Jan-19 09:44 AM] jl777c#5810
how about a pull request that adds in all the staker bug fixes?

[31-Jan-19 09:44 AM] blackjok3r#3181
OUR is working fine on labs... I just do t know how to merge this in as its mixed with code for labs to let people use different sets of pubkeys

[31-Jan-19 09:45 AM] blackjok3r#3181
I don't have all these fixes just in one branch or something... They all got added over time through multiple branches and then pushed our master

[31-Jan-19 09:46 AM] blackjok3r#3181
Don't really have time to manually do this, and I think doing it manually is error prone and might break something... Not to mention making a merge back down from upstream have about 5 billion conflicts

[31-Jan-19 09:46 AM] jl777c#5810
i guess a diff and reviewing it for things that are bug fixes. manual is the only way sometimes

[31-Jan-19 09:47 AM] blackjok3r#3181
Maybe I can get to this tomorrow but I'm still busy working on the notary pay chain and temp file fix...

[31-Jan-19 09:48 AM] jl777c#5810
ok

[31-Jan-19 09:48 AM] blackjok3r#3181
Temp file is working, just trying to move it after all validation, seems to be causing issues so likely the last few steps will need to have the file in main chai n, it starts flooding GetTransaction read errors, seems to be to do with cc validation

[31-Jan-19 09:49 AM] jl777c#5810
moving it seems like it would break anything that started in tmp. I had it so it stays in tmp until the next restart, of course restart didnt see the new blocks

[31-Jan-19 09:51 AM] blackjok3r#3181
Yeah it seems there are things happening async to connect block which is weird as its inside a lock I thought... I think I will just move where it saves the file to main back where it was, as long as its after check PoW with slowflag set it will be safe enough. Its working perfectly for days here like that

[31-Jan-19 09:52 AM] blackjok3r#3181
Cycles through 4 16mb files

[31-Jan-19 09:52 AM] jl777c#5810
seems on the small side...

[31-Jan-19 09:52 AM] blackjok3r#3181
That's only for testing you can change the max temp file siE

[31-Jan-19 09:52 AM] jl777c#5810
4MB * 20 blocks is 80MB

[31-Jan-19 09:52 AM] jl777c#5810
ok, I will tweak it once it is stable

[31-Jan-19 09:53 AM] jl777c#5810
it toggles behavior based on the usetmp variable?

[31-Jan-19 09:53 AM] jl777c#5810
if so I can make it only usetmp when it is unclear

[31-Jan-19 09:54 AM] blackjok3r#3181
I thought the goal is to pruge blocks older than a notarization... But it seems all we can do is give a long enough buffer to assume 5 notarizations should have happened. 500mb of extra disk space isn't too bad.. and yes you can use the flag for those blocks only I guess...

[31-Jan-19 09:54 AM] jl777c#5810
so for pure PoW chains, usetmp is never set

[31-Jan-19 09:54 AM] blackjok3r#3181
Yes

[31-Jan-19 09:54 AM] jl777c#5810
why are you assuming there isnt spam blocks in the tmp files?

[31-Jan-19 09:55 AM] blackjok3r#3181
What do u mean?

[31-Jan-19 09:55 AM] jl777c#5810
if 90% spam blocks, will take 10x the space to have all the valid blocks for notarization

[31-Jan-19 09:55 AM] blackjok3r#3181
I just used 16mb as waiting for 128mb files to sync was stopping em from getting enough sleep

[31-Jan-19 09:55 AM] blackjok3r#3181
Its only an issue o. The first chain sync

[31-Jan-19 09:56 AM] blackjok3r#3181
With out a Max temp file size you allocate 2x the disk space as what the chain is

[31-Jan-19 09:56 AM] jl777c#5810
not sure there can be any size limit to the tmp files, will end up with tx without any HDD presence

[31-Jan-19 09:56 AM] blackjok3r#3181
And this is never recovered the files just stay on disk

[31-Jan-19 09:56 AM] jl777c#5810
yes, but you can just manually delete these files

[31-Jan-19 09:57 AM] blackjok3r#3181
Nobody will do that

[31-Jan-19 09:57 AM] jl777c#5810
ok, maybe we need to delete them on startup

[31-Jan-19 09:58 AM] jl777c#5810
so let the tmp files grow and dont do runtime pruning. prune them all on restart

[31-Jan-19 09:58 AM] jl777c#5810
that seems safest

[31-Jan-19 09:58 AM] blackjok3r#3181
You need to cycle files on initial sync then after that u can leave it u capped and just remove the files on startup

[31-Jan-19 09:58 AM] blackjok3r#3181
I doubt an attack can happen with requested blocks

[31-Jan-19 09:58 AM] jl777c#5810
oh. on initial sync usetmp should be 0

[31-Jan-19 09:58 AM] blackjok3r#3181
Only on blocks submitted to you

[31-Jan-19 09:59 AM] jl777c#5810
since only valid blocks would be in the headers

[31-Jan-19 10:00 AM] jl777c#5810
usetmp is 0 if  initial blockloading

[31-Jan-19 10:21 AM] blackjok3r#3181
Hmm that does work, I used it as 1 for testing ad we have no attack to test it against so it was easier to just sync a chain... 
I think we can detect if a temp file has any valid blocks that are not notarised in it before purging... I don't like that a user is forced to constantly re-start their node, it seems a backwards step... Notary nodes are already complaining about disk space...

[31-Jan-19 10:23 AM] blackjok3r#3181
Under attack conditions it would need to allocate more temp file space... But under normal conditions it will just cycle through a small amount of temp files

[31-Jan-19 10:24 AM] blackjok3r#3181
Also using prune on it, all these blocks still exist in the index and can be redownloaded if needed

[31-Jan-19 10:24 AM] blackjok3r#3181
That is still unsolved how to prune the index without crashing it... :(

[31-Jan-19 10:32 AM] ComputerGenie 👴🏼📢#7004
`Notary nodes are already complaining about disk space...`
Imo, it's our job as notaries (in both KMDLabs and Komodo) to have whatever is needed to store all of every chain we deal with
I get that you're talking about the temp adding space, but as far as the "already", it seems to me that means the nodes are more unprepared for adoption and expansion than anything else.
If we need to buy more storage, isn't that just part of the job?

[31-Jan-19 10:33 AM] blackjok3r#3181
Agreed... But most of them ate use I g rented servers that literally cannot offer enough space 🤣

[31-Jan-19 10:33 AM] ComputerGenie 👴🏼📢#7004
rent 2 😛

