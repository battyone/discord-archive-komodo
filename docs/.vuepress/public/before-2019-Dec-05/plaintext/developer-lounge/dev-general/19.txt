==============================================================
Guild: Komodo
Channel: dev-general
Topic: A place for general developer talk – for everyone! | Documentation https://developers.komodoplatform.com | MoreDev Docs - https://docs.komodoplatform.com | Mastering CryptoConditions - https://github.com/KomodoPlatform/Mastering_CryptoConditions
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[11-Sep-18 12:23 AM] Bryan_Beus#6442
Just makes a transaction index... for what specifically?

[11-Sep-18 12:24 AM] dukeleto#7326
otherwise, nodes only store their own transactions

[11-Sep-18 12:24 AM] Bryan_Beus#6442
Hmm, okay. I'll add that in now. Thank you.

[11-Sep-18 12:24 AM] dukeleto#7326
various things KMD does requires the txindex, like DPoW and JUMBLR and Cryptocoditions

[11-Sep-18 12:25 AM] dukeleto#7326
probably various others, James would know more. It's not enabled by default on most coins, but it is on KMD 😃

[11-Sep-18 12:25 AM] Bryan_Beus#6442
how would you turn it off, if you wanted to?

[11-Sep-18 12:25 AM] Bryan_Beus#6442
-txindex=0
?

[11-Sep-18 12:25 AM] dukeleto#7326
yeah

[11-Sep-18 12:26 AM] dukeleto#7326
not sure Komodo would work at all, it's required to have it on

[11-Sep-18 12:26 AM] dukeleto#7326
not sure you want to document turning it off, but that is for you to decide

[11-Sep-18 12:27 AM] Bryan_Beus#6442
Well, it was just a thought. No need, if there's no use cases.

[11-Sep-18 12:27 AM] Bryan_Beus#6442
```
-txindex
--------
``txindex`` is a coin daemon parameter that instructs a KMD-based coin daemon to track every transaction made on the relevant blockchain.

``txindex`` is enabled by default on all KMD-based coin daemons, and is utilized in dPoW, JUMBLR, and the CryptoConditions smart-contract protocol. Disabling the feature will cause a normal KMD-based coin daemon to malfunction.
```

[11-Sep-18 12:31 AM] dukeleto#7326
sounds good to me

{Reactions}
👌 

[11-Sep-18 12:41 AM] dukeleto#7326
jl777's recent Mastering Cryptoconditions writings have inspired me to start writing something I am calling "Mastering Komodo DPoW", and if anybody here would like to provide feedback, I would enjoy it: https://github.com/leto/mastering_komodo_dpow/blob/master/mastering_komodo_dpow.md

{Embed}
https://github.com/leto/mastering_komodo_dpow/blob/master/mastering_komodo_dpow.md
leto/mastering_komodo_dpow
Mastering Komodo Delayed Proof-of-Work. Contribute to leto/mastering_komodo_dpow development by creating an account on GitHub.
https://avatars1.githubusercontent.com/u/30298?s=400&v=4

[11-Sep-18 12:42 AM] dukeleto#7326
there are various coins contacting me about adding dpow to their coins, and there is no documentation other than some C++ sourcecode to look at, so I hope for this to bridge the gap

[11-Sep-18 12:43 AM] dukeleto#7326
it's specifically aimed at devs wanting to add dpow to their coin, and will get very technical while remaining useful to any coin that wants to join the KMD family

[11-Sep-18 01:28 AM] Bryan_Beus#6442
@jl777c

[11-Sep-18 01:28 AM] Bryan_Beus#6442
On this method

[11-Sep-18 01:28 AM] Bryan_Beus#6442
```
verifychain
-----------

::

  verifychain ( checklevel numblocks )

The ``verifychain`` method verifies the coin daemon's blockchain database.

Arguments:

::

    checklevel           // (numeric, optional, 0-4, default=3)        indicates the thoroughness of block verification
    numblocks            // (numeric, optional, default=288, 0=all)    indicates the number of blocks to verify
```

[11-Sep-18 01:28 AM] Bryan_Beus#6442
in `checklevel`, is 0 considered most thorough, or least thorough?

[11-Sep-18 01:32 AM] Bryan_Beus#6442
@dukeleto This is a great endeavor.

When I'm able, I will try to help.

[11-Sep-18 01:34 AM] dukeleto#7326
👍

[11-Sep-18 01:35 AM] dukeleto#7326
many coins are approaching Komodo about adding 51%/consensus attack prevention, exchanges are requiring it

{Reactions}
Komodo (7) 

[11-Sep-18 01:35 AM] Bryan_Beus#6442
Sweetness...

[11-Sep-18 04:28 AM] Bryan_Beus#6442
@jl777c @dukeleto 

When either of you are available, if you can provide me with more detail for these, that would be great.

If it's not available yet, should we delete it from the docs for now? We can add them back in once they're done? 

```
kvsearch key
------------

``COMING SOON``

kvupdate key value flags/passphrase
-----------------------------------

``COMING SOON``

minerids needs height
---------------------

``COMING SOON``

notaries height timestamp
-------------------------

``COMING SOON``

paxpending
----------

::

  paxpending

``DEPRECATED``

paxprice
--------

::

  paxprice "base" "rel" height

``DEPRECATED``

paxprices
---------

::

  paxprices "base" "rel" maxsamples

``DEPRECATED``
```

[11-Sep-18 05:57 AM] Alright#0419
@Bryan_Beus can help out with the kv stuff

[11-Sep-18 05:57 AM] Alright#0419
I wrote the help docs for both commands

[11-Sep-18 05:57 AM] Alright#0419
the pax stuff is deprecated, no need to document them

[11-Sep-18 06:27 AM] jl777c#5810
the pax ones are deprecated

[11-Sep-18 06:27 AM] jl777c#5810
i will remove them

[11-Sep-18 01:40 PM] dukeleto#7326
BTC 0.17 deprecates signrawtransaction and removes wallet information from validateaddress, which sounds like it could affect a lot of existing code: https://github.com/bitcoin/bitcoin/pull/12490

{Embed}
https://github.com/bitcoin/bitcoin/pull/12490
[Wallet] [RPC] Remove deprecated wallet rpc features from bitcoin_...
The following rpc features were deprecated in V0.17:

validateaddress returning wallet information about an address
signrawtransaction

This PR fully removes those features. It can be merged once V...
https://avatars1.githubusercontent.com/u/1063656?s=400&v=4

{Reactions}
😂 🤣 😆 

[11-Sep-18 01:53 PM] dukeleto#7326
no justification for the `validateaddress` changes were given on github, at least they have 2 new RPCs to replace signrawtransaction

[11-Sep-18 01:54 PM] jl777c#5810
yes, break existing rpc calls, make new ones that sort of do what the old ones use to, insist you care about the installed base

[11-Sep-18 01:54 PM] jl777c#5810
I personally would not update to a post-segwit bitcoin core

[11-Sep-18 01:54 PM] jl777c#5810
it has been all downhill since then

[11-Sep-18 01:55 PM] jl777c#5810
just breaking things like getinfo! without valid reason, treating the ecosystem devs as if they are idiots

[11-Sep-18 01:55 PM] jl777c#5810
thanks but no thanks.

{Reactions}
💯 (4) 

[11-Sep-18 01:57 PM] dukeleto#7326
It's not something I am used to, breaking things so fast and for seemingly little reason

[11-Sep-18 01:57 PM] dukeleto#7326
in the Perl world, you have to deprecate something for 5 or 10 years to remove or change it, there is too much code in the world that depends on existing behavior

{Reactions}
💯 

[11-Sep-18 01:57 PM] jl777c#5810
i think they are trying to break altcoins in general

{Reactions}
🤔 

[11-Sep-18 01:58 PM] dukeleto#7326
they certainly have no regard for anybody downstream, because they are "maximalists"

[11-Sep-18 01:58 PM] jl777c#5810
they think if they do this sort of monkey business, they will regain the 90% market dominance

[11-Sep-18 01:58 PM] jl777c#5810
if only they behaved with some common sense, ETH would have been built on top of BTC

[11-Sep-18 02:08 PM] ComputerGenie 👴🏼📢#7004
There's no "like" about it.
Core "logic" makes perfect sense as long as you pretend that everything they say takes place in 2003

[11-Sep-18 02:10 PM] ComputerGenie 👴🏼📢#7004
The idea seems to be to design Bitcoin around an off-the-self HP purchased from Walmart in 2002 by a guy that makes $4.15 p/h and uses dialup 🙄

[11-Sep-18 07:42 PM] Bryan_Beus#6442
@Alright 

Help on the KV is much appreciated.

How would you describe each of these two commands?

```
kvsearch key
------------

``COMING SOON``

kvupdate key value flags/passphrase
-----------------------------------

``COMING SOON``
```

[11-Sep-18 08:30 PM] Alright#0419
kvupdate is for storing arbitrary data into OP_RETURN, kvsearch is for searching for that data

[11-Sep-18 08:30 PM] Alright#0419
have you seen `help kvsearch` or `help kvupdate`?

[11-Sep-18 10:50 PM] Bryan_Beus#6442
@Alright 

Ahh, yes, lots of information in the ``help`` commands. Much better. Thanks.

[11-Sep-18 10:59 PM] Bryan_Beus#6442
@Alright 

I'm trying to write the example part of the command.

Can you update these two examples so that they have working information, and then copy/paste the full response for me, please?

```
> komodo-cli kvsearch examplekey
> curl --user myusername --data-binary '{"jsonrpc": "1.0", "id":"curltest", "method": "kvsearch", "params": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:7771/
```
Thank you!

[11-Sep-18 11:12 PM] Bryan_Beus#6442
here are some more for which I need to provide a real example

```
curl --user myusername --data-binary '{"jsonrpc": "1.0", "id":"curltest", "method": "kvupdate", "params": [examplekey "examplevalue" 2 examplepassphrase] }' -H 'content-type: text/plain;' http://127.0.0.1:7771/
```

[11-Sep-18 11:12 PM] Bryan_Beus#6442
```
komodo-cli kvupdate examplekey "examplevalue" 2 examplepassphrase
```

[11-Sep-18 11:12 PM] Bryan_Beus#6442
```
komodo-cli kvsearch examplekey
```

[11-Sep-18 11:18 PM] Bryan_Beus#6442
@Mylo I'm trying to input this command, but am getting an error response:

```
curl --user user138763741:pass5ff9f6434ed6405b884fc24ee41e590a64fcf163ee9f9c44e973124935aed7a9fc     --data-binary '{"jsonrpc": "1.0", "id":"curltest", "method": "getgenerate", "params": [] }' -H 'content-type: text/plain;' http://127.0.0.1:9801/
```

When I do the non-curl command, I get a correct response.

```
komodo-cli getgenerate
```

Any ideas why the curl request isn't working?

[11-Sep-18 11:33 PM] Bryan_Beus#6442
Can anyone explain what this means to me? Not familiar with the ``genproclimit`` terminology.

The statement is in the ``setgenerate`` documentation entry.

```
Generation is limited to 'genproclimit' processors. -1 is unlimited.
```

[11-Sep-18 11:53 PM] Alright#0419
@Bryan_Beus looking at the kv curl examples now

[11-Sep-18 11:53 PM] Alright#0419
definitely something wrong the the json format

[11-Sep-18 11:54 PM] Alright#0419
should at least have commas in the json, but there's something else wrong also it seems

[11-Sep-18 11:56 PM] Alright#0419
`curl --user user --data-binary '{"jsonrpc": "1.0", "id":"curltest", "method": "kvupdate", "params": ["examplekey", "examplevalue", "2", "examplepassphrase"] }' -H 'content-type: text/plain;' http://127.0.0.1:<rpcport>/`

[11-Sep-18 11:56 PM] Alright#0419
I'll do a PR to dev branch to fix it. I'll try to find any other incorrect examples also

[11-Sep-18 11:59 PM] Alright#0419
`curl --user myusername --data-binary '{"jsonrpc": "1.0", "id":"curltest", "method": "kvsearch", "params": ["examplekey"] }' -H 'content-type: text/plain;' http://127.0.0.1:7771/`

[12-Sep-18 12:01 AM] Bryan_Beus#6442
@webworker01 Thank you. That helps.

[12-Sep-18 12:02 AM] Bryan_Beus#6442
@Alright Ok, I'll take a look here and see if we can get a valid response.

[12-Sep-18 12:02 AM] Alright#0419
the above will work

[12-Sep-18 12:07 AM] Alright#0419
did you come across any others that gave a json parse error?

[12-Sep-18 12:07 AM] Bryan_Beus#6442
trying it now

[12-Sep-18 12:11 AM] Bryan_Beus#6442
the curl `kvupdate` worked, seeing if I can translate that to the other commands now

[12-Sep-18 12:11 AM] Bryan_Beus#6442
ty

[12-Sep-18 12:12 AM] Bryan_Beus#6442
Does the key need to be unique?

[12-Sep-18 12:12 AM] Alright#0419
key needs to be unique, yes

[12-Sep-18 12:13 AM] Alright#0419
so a user can have a key and store some data corresponding to that key, they can set a password so only they can update it

[12-Sep-18 12:13 AM] Alright#0419
that make sense?

[12-Sep-18 12:14 AM] Bryan_Beus#6442
So the password is hashed, I'm assuming?

[12-Sep-18 12:20 AM] Bryan_Beus#6442
I'm not yet understanding something.

If I remove the passphrase, I still get the same response. 

```
./komodo-cli -ac_name=SIDD kvupdate "examplekey3" "examplevalue" 2 "examplepassphrase"
{
  "coin": "SIDD",
  "height": 561,
  "expiration": 2001,
  "flags": 3,
  "key": "examplekey3",
  "keylen": 11,
  "value": "examplevalue",
  "valuesize": 12,
  "fee": 0.001,
  "txid": "8bfe7bc27ebe44f7ba7ec43968d4f2cdf271b321181fe0434b6ca3c8f2a905c6"
}
siddhartha@aang:/opt/AgamaApp/resources/app/assets/bin/linux64$ ./komodo-cli -ac_name=SIDD kvupdate "examplekey3" "examplevalue3" 2
{
  "coin": "SIDD",
  "height": 561,
  "expiration": 2001,
  "flags": 3,
  "key": "examplekey3",
  "keylen": 11,
  "value": "examplevalue3",
  "valuesize": 13,
  "fee": 0.001,
  "txid": "bfb018cd2664ab04a418707993e3480dd5162886f3b5384ee7991b4c10db0597"
}
```

[12-Sep-18 12:20 AM] Alright#0419
password isn't necessary

[12-Sep-18 12:21 AM] Alright#0419
but that means anyone can update the data in that key

[12-Sep-18 12:21 AM] Bryan_Beus#6442
I used the same key on both...

[12-Sep-18 12:21 AM] Bryan_Beus#6442
hmmm...

[12-Sep-18 12:21 AM] Alright#0419
Oh I see

[12-Sep-18 12:22 AM] Bryan_Beus#6442
shouldn't I get some error or negative response?

[12-Sep-18 12:22 AM] Alright#0419
I'll need to test, but it seems it didn't set the password properly the first time

[12-Sep-18 12:23 AM] Alright#0419
in the second command you did, you put the amount of days and pass in the wrong order

[12-Sep-18 12:23 AM] Bryan_Beus#6442
Here's all the commands I did with that unique key:

```
siddhartha@aang:/opt/AgamaApp/resources/app/assets/bin/linux64$ ./komodo-cli -ac_name=SIDD kvupdate "examplekey3" "examplevalue" 2 "examplepassphrase"
{
  "coin": "SIDD",
  "height": 561,
  "expiration": 2001,
  "flags": 3,
  "key": "examplekey3",
  "keylen": 11,
  "value": "examplevalue",
  "valuesize": 12,
  "fee": 0.001,
  "txid": "d6e4406afee63bc2646d7b902632db541b2d1b7fd7219bd07c32ec0fffaa92a5"
}
siddhartha@aang:/opt/AgamaApp/resources/app/assets/bin/linux64$ ./komodo-cli -ac_name=SIDD kvupdate "examplekey3" "examplevalue" 2 "examplepassphrase"
{
  "coin": "SIDD",
  "height": 561,
  "expiration": 2001,
  "flags": 3,
  "key": "examplekey3",
  "keylen": 11,
  "value": "examplevalue",
  "valuesize": 12,
  "fee": 0.001,
  "txid": "8bfe7bc27ebe44f7ba7ec43968d4f2cdf271b321181fe0434b6ca3c8f2a905c6"
}
siddhartha@aang:/opt/AgamaApp/resources/app/assets/bin/linux64$ ./komodo-cli -ac_name=SIDD kvupdate "examplekey3" "examplevalue3" 2
{
  "coin": "SIDD",
  "height": 561,
  "expiration": 2001,
  "flags": 3,
  "key": "examplekey3",
  "keylen": 11,
  "value": "examplevalue3",
  "valuesize": 13,
  "fee": 0.001,
  "txid": "bfb018cd2664ab04a418707993e3480dd5162886f3b5384ee7991b4c10db0597"
}
```

[12-Sep-18 12:24 AM] Bryan_Beus#6442
In the last command, I deleted the passphrase

[12-Sep-18 12:24 AM] Bryan_Beus#6442
it's otherwise mostly copy/pasted from the other example

[12-Sep-18 12:24 AM] Alright#0419
I'll need to look at it myself. I did test this a couple months ago. Once you set the password properly, you aren't able to change the value without it

[12-Sep-18 12:25 AM] Alright#0419
Let me update these help examples and I'll reproduce what you just did

[12-Sep-18 12:25 AM] Bryan_Beus#6442
ok

[12-Sep-18 12:30 AM] Alright#0419
did you experience the parse error with any other commands?

[12-Sep-18 12:31 AM] Alright#0419
I see that sendmany needs to be fixed

[12-Sep-18 12:31 AM] Alright#0419
fixing sendmany, kvupdate and kvsearch

[12-Sep-18 12:32 AM] joey#9690
HI everyone, how are dPoW notarizations authenticated in the Bitcoin chain? Does the authentication data live in KMD? In other words, how do nodes joining the network know which Bitcoin OP_RETURNs come from the 64 notarization nodes?

[12-Sep-18 12:34 AM] Bryan_Beus#6442
@Alright  I haven't made it that far down yet.

[12-Sep-18 12:36 AM] Bryan_Beus#6442
@joey 

There are actually two transactions for each notarization.

In the first, the child (KMD) writes its hash into the parent (BTC).

In the second, the child writes into itself a record of wherever it stored the information in the parent.

So,  KMD notarization --> BTC.

History of notarization in BTC --> KMD

The notary nodes use their public keys on the child chain to create and sign notarizations, so their decisions are enforced on the child chain.

[12-Sep-18 12:36 AM] Bryan_Beus#6442
Does that make sensee?

[12-Sep-18 12:38 AM] joey#9690
Yes, that makes sense, thank you

[12-Sep-18 12:38 AM] Bryan_Beus#6442
Ok, lmk if you have more questions.

[12-Sep-18 12:39 AM] joey#9690
How do notary nodes come to consensus about what to write into BTC? Is there ever a time when some nodes write wrong information into KMD or BTC?

[12-Sep-18 12:42 AM] Bryan_Beus#6442
Every ten minutes or so, the notary nodes take a certain block height, hash it, and then 13 of them all work together to create an accepted hash.

Then, those 13 perform a transaction on BTC, using a multi-signature function.

then, the same 13 write a notarization on the KMD chain, with the relevant information>

From there, all the nodes on the network can see the most recent notarization.
 
Our lead dev, JL777, hasn't had the time yet to explain the whole process about how the 13 are chosen, as it's very intricate. 

There's 64 notary nodes total, spaced around the world, so to take down the network you have to take down 52 nodes.

[12-Sep-18 12:43 AM] Bryan_Beus#6442
And that would just pause it until it can be rebooted.

