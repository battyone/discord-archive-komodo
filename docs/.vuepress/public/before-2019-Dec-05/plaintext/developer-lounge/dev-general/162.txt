==============================================================
Guild: Komodo
Channel: dev-general
Topic: A place for general developer talk – for everyone! | Documentation https://developers.komodoplatform.com | MoreDev Docs - https://docs.komodoplatform.com | Mastering CryptoConditions - https://github.com/KomodoPlatform/Mastering_CryptoConditions
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[06-Apr-19 12:00 PM] dukeleto#7326
@Alright i will take your advice and use the HUSH ac for any internal changes but try to avoid even that

[06-Apr-19 12:01 PM] dukeleto#7326
i could see changing some of our transaction size + block size values, but not drastically from what KMD has

[06-Apr-19 12:01 PM] dukeleto#7326
i don't see changing crazy low level stuff

[06-Apr-19 12:02 PM] dukeleto#7326
Hush is the R+D dept for private comms, I mostly want to work at RPC layer + above, but will modify things as needed

[06-Apr-19 12:05 PM] Alright#0419
Did you decide on ac_ccenable values?

[06-Apr-19 12:35 PM] Alright#0419
@jl777c the +0.0000000049999 thing works, you can close that

[06-Apr-19 12:35 PM] Alright#0419
figured it wouldn't hurt, but I can live without it

[06-Apr-19 12:39 PM] Alright#0419
@ComputerGenie 👴🏼📢  @dukeleto incase you're wondering
`int(<amount in coins>*100000000+0.0000000049999)`

[06-Apr-19 12:40 PM] ComputerGenie 👴🏼📢#7004
`+0.0000000049999` says to me that there's something wrong with using the `int` function, but I no know py 🤷🏽

[06-Apr-19 12:41 PM] dukeleto#7326
@Alright use `ceil()`

[06-Apr-19 12:42 PM] dukeleto#7326
floor(), int(), ceil()

[06-Apr-19 12:42 PM] dukeleto#7326
learn them well

[06-Apr-19 12:42 PM] dukeleto#7326
@Alright re: ccenable: https://github.com/MyHush/hush3/blob/duke/src/hushd#L25

{Embed}
https://github.com/MyHush/hush3/blob/duke/src/hushd
MyHush/hush3
HUSH fork of KMD. Contribute to MyHush/hush3 development by creating an account on GitHub.
https://avatars0.githubusercontent.com/u/26923909?s=400&v=4

[06-Apr-19 12:44 PM] Alright#0419
lol at the IPs at the bottom 😛

[06-Apr-19 12:44 PM] ComputerGenie 👴🏼📢#7004
I still don't understand why you're that many decimal places out for an 8 place number 😕

[06-Apr-19 12:46 PM] dukeleto#7326
@Alright you gave me those, didn't want to lose them, that is where they went 😃

[06-Apr-19 12:47 PM] dukeleto#7326
@ComputerGenie 👴🏼📢 how rounding works at the edges of data size types in C is undefined, @jl777c probably knows a lot about this as well

[06-Apr-19 12:47 PM] dukeleto#7326
this can cause catastrophic cryptography bugs, or rounding errors, and everything between

[06-Apr-19 12:47 PM] dukeleto#7326
how the higher language binds to the C function `int()` matters

[06-Apr-19 12:48 PM] dukeleto#7326
there are 5000 lines of code just to do that

[06-Apr-19 12:48 PM] Alright#0419
numbers being stored as approximations something something something

[06-Apr-19 12:48 PM] ComputerGenie 👴🏼📢#7004
`how rounding works at the edges of data size types in C is undefined`
he asked about py, so I missed a step in the conversation somewhere 🤷🏽

[06-Apr-19 12:48 PM] jl777c#5810
doubles use IEEE standard for floating point for the most part

[06-Apr-19 12:48 PM] dukeleto#7326
let's just speak of integers

[06-Apr-19 12:48 PM] jl777c#5810
and doubles have 15 decimals of precision

[06-Apr-19 12:48 PM] dukeleto#7326
int32/int64 across all platforms

[06-Apr-19 12:48 PM] dukeleto#7326
long int vs unsigned long int

[06-Apr-19 12:49 PM] jl777c#5810
int32_t and int64_t are 32 and 64 bits, with signed and unsigned variants

[06-Apr-19 12:49 PM] jl777c#5810
to map a double to an int involves a conversion process and ints dont have fractions, so the fractions fall on the floor

[06-Apr-19 12:49 PM] dukeleto#7326
int() in Python does not work the same as int() in Perl because they are binding to the underlying C `int()` differently

[06-Apr-19 12:49 PM] dukeleto#7326
Perl can use bigints behind the scenes, it tries to, which avoids a lot of this madness

[06-Apr-19 12:49 PM] jl777c#5810
the adding of 0.00000000499999 is making it go to the next satoshi in the case it is near the edge, within half a satoshi

[06-Apr-19 12:50 PM] dukeleto#7326
i.e. forcing the rounding rule to be what you want

[06-Apr-19 12:50 PM] jl777c#5810
depending on how many conversions are involved, maybe the you might want to add up to 0.0000000099999999

[06-Apr-19 12:50 PM] jl777c#5810
yes, there are all sorts of rounding modes

[06-Apr-19 12:50 PM] dukeleto#7326
ceil() might require not adding that weird epsilon

[06-Apr-19 12:50 PM] jl777c#5810
i find adding the fractional satoshi to a minimally processed double does the trick

[06-Apr-19 12:50 PM] dukeleto#7326
for ceiling, which rounds up. and `floor()` rounds down

[06-Apr-19 12:51 PM] dukeleto#7326
this trick from jl777 is pretty cool too

[06-Apr-19 12:51 PM] jl777c#5810
yes, but the question of if it is off by one needs to be known

[06-Apr-19 12:51 PM] jl777c#5810
adding a fractional satoshi doesnt require knowing if a satoshi was lost or not. if you do a ceil and indeed you didnt have any 0.000000000000001 residue then it wont end up being 1 satoshi too high

[06-Apr-19 12:52 PM] jl777c#5810
but how to know if there is some very small positive residue. ceil does not seem safe

[06-Apr-19 12:52 PM] ComputerGenie 👴🏼📢#7004
is there a py function that takes `16.129` and turns it into `16.12900000` like tofixed in js or like `echo 123.4567 | awk '{printf "%.8f\n", $1}'`?

[06-Apr-19 12:53 PM] dukeleto#7326
"".format()

[06-Apr-19 12:54 PM] ComputerGenie 👴🏼📢#7004
so, again I ask:
why not use powers?

[06-Apr-19 12:54 PM] Alright#0419
a float in py won't have tailing 0s

[06-Apr-19 12:54 PM] jl777c#5810
remember when I said, the minimum number of floating point operations?

[06-Apr-19 12:54 PM] jl777c#5810
power will have at least N floating point operations, one for each power

[06-Apr-19 12:55 PM] jl777c#5810
each one is like teleporting the rabbit. it might look identical when it comes out of the transporter, but maybe it is changed at the microscopic level

[06-Apr-19 12:55 PM] jl777c#5810
do it enough times and the rabbit ends up as a ball of fur...

[06-Apr-19 12:56 PM] jl777c#5810
iterate enough floating point operations and the various rounding errors can change surprisingly large values, though for doubles the number of operations is quite large. for single precision floats, it doesnt take much at all as they can barely represent numbers with sufficient precision, though there are times where using float are quite useful as it is usually 4x faster, but also losing precision is a good way to smooth out the high entropy noise

{Reactions}
🤔 

[06-Apr-19 12:57 PM] dukeleto#7326
I took multiple classes in college about numerical algorithms

[06-Apr-19 12:58 PM] dukeleto#7326
the math people go deep into studying the error of a given numerical algorithm

[06-Apr-19 01:00 PM] dukeleto#7326
doubles were created so that average coders could ignore this stuff. But with financial math and satoshis, even the tiniest error matters. Which is why you should always do all math all the time with integers, and only render to decimal/float format when printing/etc. And beware of satoshi math and 32 bit datasizes, it's possible to overflow

[06-Apr-19 01:06 PM] jl777c#5810
yes doing a single string to double to int64_t will always be fine if adding half a satoshi

[06-Apr-19 01:07 PM] jl777c#5810
doing unknown number of floating point operations, will create a hard to quantify error (epsilon) and if that goes above 1 satoshi, likely it become non-deterministic as some CPU have built in rounding modes that are different from IEEE default

[06-Apr-19 01:08 PM] jl777c#5810
and if it error is more than 1 satoshi, how to know if to round up or down

[06-Apr-19 01:18 PM] gcharang#6833
this might sound dumb, but can the value be turned to sats using string operations?
It might look like this in python and some pseudo code:
```py
value = 0.00123000
strValue = str(value)
array = strValue.split('.')
strip zeros from the end of array[1]
count number of zeros in the beginning of array[1]
then multiply it with appropriate power of 10 based on the number of zeros
add it to int(array[0])*10^8
this will be the value in satoshis
```

[06-Apr-19 01:20 PM] jl777c#5810
yes, that is how to do it purely

[06-Apr-19 01:20 PM] jl777c#5810
there are many many ways to microwave the rabbit

{Reactions}
👍 

[06-Apr-19 02:10 PM] dukeleto#7326
@ComputerGenie 👴🏼📢 i would write `-ac_cbmaturity`for KMD  if there is a reasonable value that Hush could use to enable your solo zaddr pool idea

[06-Apr-19 02:11 PM] dukeleto#7326
you never want dpow `lag` and `cbmaturity` to be near each other

[06-Apr-19 02:17 PM] ComputerGenie 👴🏼📢#7004
@dukeleto cb maturity "reasonable" would be 1 or 2, imo
anything more than 2 would be because.........?

[06-Apr-19 02:18 PM] jl777c#5810
satoshi wanted there to be some time before miners could sell the newly mined coins

[06-Apr-19 02:18 PM] jl777c#5810
at least that is what I remember reading

[06-Apr-19 02:19 PM] jl777c#5810
so to trade at about the daily rate, rather than whatever instantaneous price changes. maybe he foresaw pool hopping

[06-Apr-19 02:20 PM] ComputerGenie 👴🏼📢#7004
that only kinda holds value on day 1 and assuming the majority of miners are hopping
after day 1 and since most miners never move, it's a revolving 1:1 for the most part

[06-Apr-19 02:26 PM] jl777c#5810
we all make mistakes

[06-Apr-19 02:27 PM] ComputerGenie 👴🏼📢#7004
well, from his perspective, I'm not sure I'd call it a mistake, per se; we have a completely difference space landscape now

[06-Apr-19 02:28 PM] jl777c#5810
being able to forsee any and all things now and in the future is a requirement for an omniscient god

{Reactions}
PeepoThink 

[06-Apr-19 02:29 PM] ComputerGenie 👴🏼📢#7004
😛

[06-Apr-19 02:44 PM] ComputerGenie 👴🏼📢#7004
`you never want dpow lag and cbmaturity to be near each other`
@dukeleto can you give me an example of what you mean by that where confirms vs rawconfirms doesn't avoid issues?

[06-Apr-19 02:46 PM] dukeleto#7326
coinbase maturity is specified in raw confirmations

[06-Apr-19 02:47 PM] dukeleto#7326
@jl777c what are the implications of only allowing notarized coinbase to be mature?

{Reactions}
🤔 

[06-Apr-19 02:48 PM] ComputerGenie 👴🏼📢#7004
why not leave it to the pool/miner to decide if they are willing to take that risk?

[06-Apr-19 02:50 PM] ComputerGenie 👴🏼📢#7004
seems to me that 'only allowing notarized coinbase to be mature' might get heavy in the code, no?

[06-Apr-19 02:50 PM] Alright#0419
the purpose of coinbase maturity 100 is to prevent mined coins from being sold then reorged as far as I understand

[06-Apr-19 02:51 PM] Alright#0419
if you check confirmations > 1

[06-Apr-19 02:51 PM] Alright#0419
you're fine

[06-Apr-19 02:51 PM] ComputerGenie 👴🏼📢#7004
right, that's my line of thinking too

[06-Apr-19 03:05 PM] dukeleto#7326
@ComputerGenie 👴🏼📢 what is the core issue with trying to do a solo zaddr pool on hush?

[06-Apr-19 03:05 PM] dukeleto#7326
i don't think i fully understand

[06-Apr-19 03:06 PM] ComputerGenie 👴🏼📢#7004
not just the solo or the z
I'm trying to understand the non-market rational of holding them back

[06-Apr-19 03:11 PM] ComputerGenie 👴🏼📢#7004
and *also* specifically the issue of what it takes on a solo zaddr pool to interleave payments from 100 minutes ago with current shields and all else

[06-Apr-19 03:12 PM] dukeleto#7326
zaddr funds use an internal coinbase maturity of 10 blocks, i recently learned, because they "anchor" themselves to a previous shielded note

[06-Apr-19 03:14 PM] dukeleto#7326
@ComputerGenie 👴🏼📢 put this in your hopium bong and smoke it, while you imagine how much of the ecosystem will need to change to support this: https://github.com/zcash/zips/blob/845ca0f8113bc73c42deb809cad3976d8cb7baa9/drafts/zip-str4d-shielded-coinbase.rst

{Embed}
https://github.com/zcash/zips/blob/845ca0f8113bc73c42deb809cad3976d8cb7baa9/drafts/zip-str4d-shielded-coinbase.rst
zcash/zips
Zcash Improvement Proposals. Contribute to zcash/zips development by creating an account on GitHub.
https://avatars0.githubusercontent.com/u/16122764?s=400&v=4

[06-Apr-19 03:14 PM] dukeleto#7326
which is fine, it's worth it

[06-Apr-19 03:14 PM] ComputerGenie 👴🏼📢#7004
`zaddr funds use an internal coinbase maturity of 10 blocks`
then we have a broken issue somewhere, because PIRATE solo payments are shielded on 1 conf and sent out on 2

[06-Apr-19 03:14 PM] dukeleto#7326
a re-org larger than 10 could potentially do something fishy to shielded notes

[06-Apr-19 03:15 PM] ComputerGenie 👴🏼📢#7004
if the reorg happens, then notarizations are broken

[06-Apr-19 03:17 PM] dukeleto#7326
i am talking about a re-org larger than 10 and smaller than dpow lag

[06-Apr-19 03:17 PM] dukeleto#7326
lag can very likely be > 10

[06-Apr-19 03:17 PM] dukeleto#7326
i am trying to find where I read Daira talking about this recently

[06-Apr-19 03:18 PM] dukeleto#7326
this is the original gh issue: https://github.com/zcash/zcash/issues/2488

{Embed}
https://github.com/zcash/zcash/issues/2488
Shield immediately in coinbase · Issue #2488 · zcash/zcash
If we follow #2171 and the general approach of the Sapling design that Ian/Matt/I are working on, it will be more than feasible to "mint" (as in Zerocash) in the coinbase transaction, all...
https://avatars1.githubusercontent.com/u/3794471?s=400&v=4

[06-Apr-19 03:18 PM] ComputerGenie 👴🏼📢#7004
`lag can very likely be > 10`
even if it's 5x that, you're still only at 1 conf

[06-Apr-19 03:19 PM] ComputerGenie 👴🏼📢#7004
notarization = conf 2

[06-Apr-19 03:20 PM] ComputerGenie 👴🏼📢#7004
if a pool is silly enough to send it out on less than 2, then it's on them what it breaks in their wallet

[06-Apr-19 03:20 PM] ComputerGenie 👴🏼📢#7004
😛

[06-Apr-19 03:21 PM] dukeleto#7326
you need to say dpowconf or rawconf to be clear 😃

[06-Apr-19 03:21 PM] dukeleto#7326
just "conf" means "rawconf" to me

