==============================================================
Guild: Komodo
Channel: dev-general
Topic: A place for general developer talk ‚Äì for everyone! | Documentation https://developers.komodoplatform.com | MoreDev Docs - https://docs.komodoplatform.com | Mastering CryptoConditions - https://github.com/KomodoPlatform/Mastering_CryptoConditions
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[11-Feb-19 03:44 PM] D.rabbani#9094
i cant post a link its on my local host

[11-Feb-19 03:45 PM] D.rabbani#9094
just about a minute ago

[11-Feb-19 03:49 PM] CHMEX#0686
Do you have all the indexes set?

[11-Feb-19 03:49 PM] CHMEX#0686
I have seen that when they are not set

[11-Feb-19 03:50 PM] CHMEX#0686
txindex,¬†addressindex,¬†timestampindex,¬†spentindex all to 1

[11-Feb-19 03:52 PM] CHMEX#0686
Set it manualy in your .conf remove blocks and chainstate and resynch

{Reactions}
‚òù 

[11-Feb-19 04:17 PM] blackjok3r#3181
explorer bug easy fix. After you start it all the first time.. use pkill to kill all aemons the n delete everything apart form conf file. and start all daemons again üëç

{Reactions}
üëå 

[11-Feb-19 07:53 PM] D.rabbani#9094
Wow

[11-Feb-19 07:53 PM] D.rabbani#9094
Awesome

[11-Feb-19 07:53 PM] D.rabbani#9094
Will do tha

[11-Feb-19 10:00 PM] Alright#0419
is there anyway to set `-blocknotify` without restarting the daemon?

[11-Feb-19 10:03 PM] ComputerGenie üë¥üèºüì¢#7004
iirc it's early in the init, so likely not

[11-Feb-19 10:12 PM] Alright#0419
I want to make the pos64staker as simple as possible, so I don't want the user to have to restart the daemon manually. Any suggestions? I know I could do it with subprocess in python for linux, but I'm not sure how to make it OS agnostic

[11-Feb-19 10:13 PM] ComputerGenie üë¥üèºüì¢#7004
short of py already being in nix, it should already be 'OS agnostic' by being py

[11-Feb-19 10:14 PM] ComputerGenie üë¥üèºüì¢#7004
they'd just have to install py

[11-Feb-19 10:53 PM] dukeleto#7326
https://twitter.com/taoeffect/status/1094701778765983744

{Embed}
Greg Slepak @taoeffect@mstdn.io (@taoeffect)
https://twitter.com/taoeffect/status/1094701778765983744
Is there a human alive who has successfully verified the #Zcash Sapling MPC parameters?

The entire point of the ceremony is to verify this number!

https://t.co/ciW1Uooad5 Cc @Zooko @AlyssaHertig @DefuseSec @AdjyLeak @IanAMunoz @ebfull #Zcash
https://pbs.twimg.com/media/DzEpcOoUwAAAbd9.jpg:large
Twitter

[12-Feb-19 12:40 AM] grewalsatinder#9653
@dukeleto tried compiling `dev` branch of komodo. Just sharing what I did to fix my issues

[12-Feb-19 12:40 AM] grewalsatinder#9653
```
/Library/Developer/CommandLineTools/usr/bin/ranlib libbitcoin_wallet.a
make[2]: *** No rule to make target `libcc.so', needed by `komodod'.  Stop.
make[1]: *** [all-recursive] Error 1
make: *** [all-recursive] Error 1
```

[12-Feb-19 12:41 AM] grewalsatinder#9653
This is the end result after git clone and executing `./zcutil/build-mac.sh `

[12-Feb-19 12:41 AM] grewalsatinder#9653
```# changed `CC = gcc` in src/cc/Makefile
CC = gcc-6
```

[12-Feb-19 12:42 AM] grewalsatinder#9653
I was not sure if `CC=gcc-6 ./zcutil/build-mac.sh` will just set `gcc-6` to all, because it's the `libcc` which needs this change, so I just changed the `Makefile` of `cc`, and tried again.

[12-Feb-19 12:42 AM] grewalsatinder#9653
This was the result after that

[12-Feb-19 12:42 AM] grewalsatinder#9653
```/Library/Developer/CommandLineTools/usr/bin/ranlib: file: libbitcoin_util.a(libbitcoin_util_a-strnlen.o) has no symbols
/Library/Developer/CommandLineTools/usr/bin/ranlib libbitcoin_util.a
/Library/Developer/CommandLineTools/usr/bin/ranlib: file: libbitcoin_util.a(libbitcoin_util_a-strnlen.o) has no symbols
/Library/Developer/CommandLineTools/usr/bin/make  -C secp256k1 libsecp256k1.la OPTFLAGS="-O2 -march=x86-64 -g "
/Library/Developer/CommandLineTools/usr/bin/make  -C cryptoconditions libcryptoconditions_core.la OPTFLAGS="-O2 -march=x86-64 -g "
make[3]: `libcryptoconditions_core.la' is up to date.
make[2]: *** No rule to make target `libcc.so', needed by `komodod'.  Stop.
make[1]: *** [all-recursive] Error 1
make: *** [all-recursive] Error 1```

[12-Feb-19 12:43 AM] grewalsatinder#9653
more errors üòÑ

[12-Feb-19 12:43 AM] grewalsatinder#9653
anyway I saw the `dev` branch did not hat the makecclib script, so I just executed the command from my earlier tests

[12-Feb-19 12:44 AM] grewalsatinder#9653
```satinders-MacBook-Pro-2:komodo_test satinder$ cd src/
satinders-MacBook-Pro-2:src satinder$ cd cc

satinders-MacBook-Pro-2:cc satinder$ gcc-6 -std=c++11 -I../univalue/include -I../cryptoconditions/include -I../cryptoconditions/src -I../cryptoconditions/src/asn -I.. -I. -fPIC -shared -c -o ../libcc.so cclib.cpp -L/usr/local/Cellar/boost/1.68.0_1/lib -I/usr/local/Cellar/boost/1.68.0_1/include -L/usr/local/Cellar/libsodium/1.0.17/lib -I/usr/local/Cellar/libsodium/1.0.17/include -L/usr/local/opt/berkeley-db@4/lib -I/usr/local/opt/berkeley-db@4/include

satinders-MacBook-Pro-2:cc satinder$ ls -lh ../libcc.so 
-rw-r--r--  1 satinder  staff   297K 12 Feb 13:34 ../libcc.so
```

[12-Feb-19 12:44 AM] grewalsatinder#9653
Now that it created the `libcc.so` I just executed the build mac command again

[12-Feb-19 12:44 AM] grewalsatinder#9653
```make[1]: Nothing to be done for `all'.
Makefile:1129: warning: overriding commands for target `Agama.dmg'
Makefile:1119: warning: ignoring old commands for target `Agama.dmg'
make[1]: Nothing to be done for `all-am'.
satinders-MacBook-Pro-2:komodo_test satinder$ ls -lh src/komodod
-rwxr-xr-x  1 satinder  staff    18M 12 Feb 13:37 src/komodod
satinders-MacBook-Pro-2:komodo_test satinder$ ls -lh src/komodo-cli
-rwxr-xr-x  1 satinder  staff   1.2M 12 Feb 13:37 src/komodo-cli
satinders-MacBook-Pro-2:komodo_test satinder$ ```

[12-Feb-19 12:44 AM] grewalsatinder#9653
got the `komodod` and `komodo-cli` built from `dev` branch.

[12-Feb-19 12:44 AM] grewalsatinder#9653
üôÇ

[12-Feb-19 12:46 AM] grewalsatinder#9653
@ComputerGenie üë¥üèºüì¢ your komodod build issues solved on mac mate?

[12-Feb-19 01:53 AM] ComputerGenie üë¥üèºüì¢#7004
@grewalsatinder yes, it was the qt that I was building, but the issue was the same since they use the same make setup, and I didn't even think about the fact that they did use the same

[12-Feb-19 01:55 AM] ComputerGenie üë¥üèºüì¢#7004
Out of curiosity, why does your komodod make file have agama bits?

[12-Feb-19 02:50 AM] grewalsatinder#9653
I have no idea üòÑ

[12-Feb-19 02:50 AM] grewalsatinder#9653
It just says that, I noticed ealier too

[12-Feb-19 02:50 AM] grewalsatinder#9653
Must be CI process in Makefile... not sure

[12-Feb-19 02:51 AM] grewalsatinder#9653
@ca333 might know

[12-Feb-19 03:55 AM] josephnicholas GMT+8#5904
Hi all, I am quite new to the blockchain world, and I am reading some articles about KMD, and I glanced into this.

```First, UTXO-based smart contracts can be written in C, C++, or any other compiled programming language that can create a linkable library capable of calling and being called by C/C++ functions. In that sense, Komodo‚Äôs UTXO-based smart contracts are language agnostic. This also means Komodo‚Äôs smart contracts are Turing complete and can be programmed to do just about anything.```

I just want to make sure that the one referred to above is the Smart Contract language `Crypto Conditions`

[12-Feb-19 03:55 AM] josephnicholas GMT+8#5904
Thanks

[12-Feb-19 03:58 AM] gcharang#6833
It is not exactly a language. It is a specification: https://datatracker.ietf.org/doc/draft-thomas-crypto-conditions/
It can be implemented in any programing language. there are js,python,C,C++ versions of it available
The one we use is: https://github.com/libscott/libcryptoconditions

{Embed}
https://datatracker.ietf.org/doc/draft-thomas-crypto-conditions/
draft-thomas-crypto-conditions-04 - Crypto-Conditions
Crypto-Conditions (Internet-Draft, 2018)

{Embed}
https://github.com/libscott/libcryptoconditions
libscott/libcryptoconditions
Interledger crypto-conditions implemented in C, including simple JSON api - libscott/libcryptoconditions
https://avatars3.githubusercontent.com/u/125019?s=400&v=4

[12-Feb-19 04:02 AM] josephnicholas GMT+8#5904
@gcharang thanks for the information, so the information above is like a draft of Crypto Conditions where on the time the info was written, it was C/C++ as language of choice, and now it has JS and Python as additions.

[12-Feb-19 04:02 AM] josephnicholas GMT+8#5904
correct?

[12-Feb-19 04:05 AM] gcharang#6833
Yes. It is a specification. We are using its implementation in C

[12-Feb-19 04:16 AM] josephnicholas GMT+8#5904
Thanks @gcharang

[12-Feb-19 04:16 AM] josephnicholas GMT+8#5904
Another question, is it okay?

[12-Feb-19 04:17 AM] gcharang#6833
Sure. if not me, someone else will answer

[12-Feb-19 04:17 AM] josephnicholas GMT+8#5904
So VerusCoin is an Asset Chain right?

[12-Feb-19 04:19 AM] gcharang#6833
All Assetchains are runtime forks of komodo. But Verus coin forked our project and added new assetchain options to it to start their chain. Now those options are available for anyother assetchain created through Komodo. In a way, it is a fork. In another way it is an assetchain. But there are many other features that are in development there that are not in Komodo. So it is not a pure assetchain

[12-Feb-19 04:24 AM] josephnicholas GMT+8#5904
Okay, it makes sense, so VerusCoin by itself is a Komodo fork, but it has Asset chains from Komodo and it also has a different PoW algorithm right?

So, I asked this question because, I was thinking that, when you create an asset chain, and since asset chains inherit Komodo's technology, will that asset chain be also able to create its own asset chain?

[12-Feb-19 04:24 AM] josephnicholas GMT+8#5904
just curious

[12-Feb-19 04:27 AM] gcharang#6833
It depends on how they are doing it.
It is entirely possible for a project to fork Komodo, add new features and it will have assetchain creation available.

[12-Feb-19 04:28 AM] gcharang#6833
See: https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html
To see what assetchains enable a developer to have out of the box.

{Embed}
https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html
Asset Chain Parameters | Komodo Documentation
Documentation for developers building on Komodo

[12-Feb-19 04:30 AM] gcharang#6833
https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html#ac-cc
https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html#ac-ccenable
These are the options that dictate the smartcontract availability on an assetchain.

{Embed}
https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html
Asset Chain Parameters | Komodo Documentation
Documentation for developers building on Komodo

{Embed}
https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html
Asset Chain Parameters | Komodo Documentation
Documentation for developers building on Komodo

[12-Feb-19 04:31 AM] josephnicholas GMT+8#5904
Thank you very much.

[12-Feb-19 04:33 AM] josephnicholas GMT+8#5904
One thing also, I see 2 source repos for Komodo, the `komodo` and `KomodoPlatform`? Is komodo the cryptocurrency and the latter the platform that implements the Smart Contracts and putting the snapshots in the Bitcoin block?

[12-Feb-19 04:34 AM] josephnicholas GMT+8#5904
I am really confused on the part where Komodo is protected by Bitcoin's Hash power, so how is KMD inheriting that hash power? and how are the snapshots placed in the bitcoin blocks by the notary nodes?

[12-Feb-19 04:34 AM] gcharang#6833
> will that asset chain be also able to create its own asset chain?
This mostly doesn't make sense. There are two distinct things: 1)The coin daemon
2) The blockchain
The daemon has the rules the chain needs to follow but, the same coin daemon can allow different blockchains to exist.
i.e., ex: the BTC daemon controls the BTC blockchain, but using the same daemon, I can create a new chain that will be mined from block 1 but it is not BTC eventhough it has the same rules

[12-Feb-19 04:36 AM] gcharang#6833
komodo repo: Is the Komodo blockchain repo
Komodoplatform repo: has the dPOW (BTC hashrate security) and marketmaker which is a DEX

[12-Feb-19 04:36 AM] gcharang#6833
dPOW part is called iguana. It is a completely different program seperate from the standard daemon and our notaries run it to backup Komodo hashes to BTC

[12-Feb-19 04:41 AM] gcharang#6833
https://github.com/KomodoPlatform/KomodoPlatform/tree/master/iguana the dPOW code
Explanation from whitepaper: https://docs.komodoplatform.com/whitepaper/section-1.html
https://docs.komodoplatform.com/whitepaper/chapter3.html

{Embed}
https://github.com/KomodoPlatform/KomodoPlatform/tree/master/iguana
KomodoPlatform/KomodoPlatform
Contribute to KomodoPlatform/KomodoPlatform development by creating an account on GitHub.
https://avatars2.githubusercontent.com/u/21276113?s=400&v=4

[12-Feb-19 05:51 AM] josephnicholas GMT+8#5904
Thank you very much for the information, looking forward on learning more on this awesome project.

[12-Feb-19 06:47 AM] josephnicholas GMT+8#5904
Hi all, may I ask what is theory behind having 2 blockchains linked together to increase performance? How does that work on asset chains? I understand the part where asset chains are created but how do we create another one and link the 2 together?

[12-Feb-19 06:57 AM] jorian#4555
i think @blackjok3r might be able to answer that

[12-Feb-19 06:57 AM] jorian#4555
also try #cc-general

[12-Feb-19 06:58 AM] blackjok3r#3181
You need notary nodes that place block hashes onto both chains and also a full KMD node.. #kmdlabs  has had many fungible clusters...

[12-Feb-19 06:58 AM] blackjok3r#3181
There is one live right now I think.. although we just broke one of the chains. The other 2 work lol

[12-Feb-19 06:59 AM] gcharang#6833
https://komodoplatform.com/komodo-platforms-new-scalability-tech/ has a general overview

{Embed}
https://komodoplatform.com/komodo-platforms-new-scalability-tech/
The Road To 1 Million: Komodo Platform‚Äôs New Scalability Tech - ...
Komodo Platform is eliminating the scalability problem for the blockchain industry. Komodo's solution has achieved over 20,000 tx/sec. Learn more here.
https://komodoplatform.com/wp-content/uploads/2018/07/the-road-to-1-million.png

[12-Feb-19 06:59 AM] blackjok3r#3181
ha thats what I was trying to link he too, thanks üòÉ

[12-Feb-19 07:01 AM] josephnicholas GMT+8#5904
Thanks @blackjok3r  and @gcharang so I don't know if my question was answered before, but how does SuperNET get Bitcoin's HASH Power? Since this is part of Komodo's star feature.

[12-Feb-19 07:02 AM] josephnicholas GMT+8#5904
So the Notary nodes run on `iguana` -> `SuperNET`?

[12-Feb-19 07:03 AM] josephnicholas GMT+8#5904
The notary nodes themselves will be the one to put the snapshots to Bitcoin Blocks right?

[12-Feb-19 07:03 AM] josephnicholas GMT+8#5904
How does the backup work?

[12-Feb-19 07:04 AM] CHMEX#0686
https://blog.komodoplatform.com/delayed-proof-of-work-explained-9a74250dbb86

{Embed}
https://blog.komodoplatform.com/delayed-proof-of-work-explained-9a74250dbb86
Delayed Proof of Work Explained ‚Äì Komodo Platform
It‚Äôs 2018, and we have recently witnessed many 51% attacks (Double Spending) on various Proof of Work (PoW) based blockchains.
https://cdn-images-1.medium.com/max/1200/1*UdeyCiUcELkn4pWfADKEMA.jpeg

[12-Feb-19 07:04 AM] CHMEX#0686
It's a long article but It should explain it well

[12-Feb-19 07:09 AM] josephnicholas GMT+8#5904
@CHMEX Thanks, hope I can really digest all of this, was just really curious on how you write backups on Bitcoin blocks, I mean since you are writing on BTC blocks would it mean, it is affecting Bitcoin's block sizes?

[12-Feb-19 07:11 AM] CHMEX#0686
That it does is writing the latest KMD blockhash into a BTC transaction. That Transaction gets mined into a BTC Block by BTC miners ( not notary nodes )
This is a very simple explenation

[12-Feb-19 07:13 AM] CHMEX#0686
blockchain.com/de/btc/tx/3c096c86577156b60d45fd097fda70a0732f60ab4048add17fe4799dc58bf236 this is a notarization on BTC
it's 1580 (Bytes)  so not that large

[12-Feb-19 07:15 AM] CHMEX#0686
1P3rU1Nk1pmc2BiWC8dEy9bZa1ZbMp5jfg  is the address where the notarization fee ( excl. miners fee ) is sent to.

[12-Feb-19 07:19 AM] josephnicholas GMT+8#5904
(Scratches head!)
> That it does is writing the latest KMD blockhash into a BTC transaction. That Transaction gets mined into a BTC Block by BTC miners ( not notary nodes )

So you are writing it into the BTC Transaction? I thought the transaction's were non-editable?

[12-Feb-19 07:20 AM] gcharang#6833
Each transaction has a optional data part called OP_RETURN

[12-Feb-19 07:20 AM] gcharang#6833
https://en.bitcoin.it/wiki/OP_RETURN

{Embed}
https://en.bitcoin.it/wiki/OP_RETURN
OP RETURN

[12-Feb-19 07:27 AM] josephnicholas GMT+8#5904
Ok got it, so yo add it on the bitcoin vout--scriptPubKey--asm/hex part of the transaction? Like in here? https://insight.bitpay.com/api/tx/c1213daba694b3ecbc0ef4ff506b46af4b3fd3843c78614bbd02e4eaea7bd088

[12-Feb-19 07:29 AM] josephnicholas GMT+8#5904
Or is it just like creating a simple bitcoin transaction and just adding the KMD latest hash on the script part?

[12-Feb-19 07:37 AM] josephnicholas GMT+8#5904
okY maybe I am making progress now.

[12-Feb-19 07:37 AM] josephnicholas GMT+8#5904
```json
{
value: "0.00000000",
n: 1,
scriptPubKey: {
hex: "6a28a9a0086a2a381637cf54e4d1ef075fac50c8105314be7b58e6230c29000000008cb112004b4d4400",
asm: "OP_RETURN a9a0086a2a381637cf54e4d1ef075fac50c8105314be7b58e6230c29000000008cb112004b4d4400"
},
spentTxId: null,
spentIndex: null,
spentHeight: null
}
],```

[12-Feb-19 07:46 AM] josephnicholas GMT+8#5904
Block size of KOMODO is still 1MB right?

[12-Feb-19 07:46 AM] CHMEX#0686
no it's 4MB and was 2MB before

[12-Feb-19 07:57 AM] josephnicholas GMT+8#5904
@CHMEX is there a documentation on that?

[12-Feb-19 07:58 AM] CHMEX#0686
https://komodoplatform.com/komodos-sapling-upgrade-success/

{Embed}
https://komodoplatform.com/komodos-sapling-upgrade-success/
Komodo‚Äôs Sapling Upgrade Was A Huge Success - Komodo
On December 15, the Komodo Sapling upgrade was activated smoothly across the entire ecosystem of 40 independent blockchains. Learn more here.
https://komodoplatform.com/wp-content/uploads/2018/12/sapling-upgrade-complete.jpg

[12-Feb-19 07:58 AM] CHMEX#0686
The recent Komodo update included the Sapling upgrade, originally developed by zCash, which greatly reduces the amount of processing power needed to complete a private z-transaction; a number of technologies upstreamed from Verus Coin that provide new options in the customization of independent blockchains launched with Komodo‚Äôs technology; and an increase in block size from 2 MB to 4 MB.

[12-Feb-19 08:00 AM] josephnicholas GMT+8#5904
Thank you @CHMEX and also Komodo is already supporting Segwit right?

[12-Feb-19 08:02 AM] CHMEX#0686
I don't think we do that no

[12-Feb-19 08:06 AM] jorian#4555
no segwit in komodo

[12-Feb-19 08:36 AM] josephnicholas GMT+8#5904
Ok thanks @CHMEX and @jorian

[12-Feb-19 08:39 AM] josephnicholas GMT+8#5904
How do I get the current Komodo stats? Including the Notary node counts as well as number of asset chains?

[12-Feb-19 08:43 AM] CHMEX#0686
https://komodostats.com/

{Embed}
https://komodostats.com/
Komodo Notary Nodes Stats
Statistics for the Komodo Platform's dPOW notarization of KMD and supported blockchains.

[12-Feb-19 08:44 AM] jorian#4555
those are the notarized ones. and i think all assetchains within the platform are notarized

[12-Feb-19 08:44 AM] jorian#4555
https://dexstats.info is also a nice place

{Embed}
https://dexstats.info
Dexstats Dashboard - BarterDEX and Komodo ECO System
Key Data and statistics for BarterDEX, KMD and the Komodo Eco System.

[12-Feb-19 08:48 AM] josephnicholas GMT+8#5904
So there aren't alot of nodes right?

[12-Feb-19 08:48 AM] josephnicholas GMT+8#5904
Compared to others?

