==============================================================
Guild: Komodo
Channel: dev-general
Topic: A place for general developer talk â€“ for everyone! | Documentation https://developers.komodoplatform.com | MoreDev Docs - https://docs.komodoplatform.com | Mastering CryptoConditions - https://github.com/KomodoPlatform/Mastering_CryptoConditions
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[25-Jan-19 01:44 AM] Mylo#8306
faucet stuck on "processsing"

[25-Jan-19 01:49 AM] smk762 -  dracocanis ominator#7640
@Bryan_Beus  looks to be missing a second closing square bracket `]`

{Reactions}
ðŸ‘Œ 

[25-Jan-19 02:06 AM] Mylo#8306
that ðŸ‘†  but still doesn't work for me unforch

[25-Jan-19 02:26 AM] Bryan_Beus#6442
It's something to do with -ac_name

[25-Jan-19 02:27 AM] Bryan_Beus#6442
Or, maybe not...

[25-Jan-19 02:29 AM] smk762 -  dracocanis ominator#7640
I've had issues with assetchain auth in curl where a special char exists to make everything break

[25-Jan-19 02:30 AM] smk762 -  dracocanis ominator#7640
check rpc user and pass, take out anything with potential to destroy

[25-Jan-19 03:33 AM] Mylo#8306
`komodo-cli` of the same command works, not curl.   tried a few combinations of \" and " but to no success with curl command line.

[25-Jan-19 03:34 AM] Mylo#8306
curl getinfo works, so not a problem with user/pass

[25-Jan-19 05:29 AM] CHMEX#0686
@Mylo BEER and PIZZA sent enjoyðŸ™‚

[25-Jan-19 05:49 AM] Mylo#8306
thank you!

[25-Jan-19 06:49 AM] grewalsatinder#9653
updated existing methods in kmdgo to accept optional arguments.

[25-Jan-19 06:50 AM] grewalsatinder#9653
adding next set of base APIs to it now: Mining and Rawtransactions

[25-Jan-19 06:50 AM] grewalsatinder#9653
After that will start adding CC API sets

[25-Jan-19 06:50 AM] grewalsatinder#9653
Also updated all examples for methods using optional args with better example code.

[25-Jan-19 02:30 PM] dukeleto#7326
@Bryan_Beus your curl command is missing commans in `params`

[25-Jan-19 02:31 PM] dukeleto#7326
@Bryan_Beus the error you got from z_listunspent is correct

[25-Jan-19 02:31 PM] dukeleto#7326
it is saying "that is not a valid-looking address", and it's not, because you have an invalid prefix

[25-Jan-19 02:32 PM] dukeleto#7326
use a test address that is valid

[25-Jan-19 02:33 PM] dukeleto#7326
such as `zs18tu5wr4hlyg7m9tlkl0nhj65jmyxmvufcjpve2e6ada8k5vwn0cdfp4v0luxnwc8fa26szrfaas`

[25-Jan-19 02:57 PM] Alright#0419
fair warning, many of the addresses in help examples are invalid on purpose

[25-Jan-19 02:58 PM] Alright#0419
not sure that relates to what you're talking about now that I read that again

[25-Jan-19 03:00 PM] SHossain#0007
@Alright in regtest examples? or in wiki docs examples?

[25-Jan-19 03:00 PM] Alright#0419
the daemon itself

[25-Jan-19 03:00 PM] Alright#0419
hold on, I'll show you

[25-Jan-19 03:01 PM] SHossain#0007
ah...ok.

[25-Jan-19 03:02 PM] Alright#0419
https://github.com/jl777/komodo/blob/7598204bf98d5316c3dad7c40a458810b6c71d55/src/wallet/rpcwallet.cpp#L1282

{Embed}
https://github.com/jl777/komodo/blob/7598204bf98d5316c3dad7c40a458810b6c71d55/src/wallet/rpcwallet.cpp
jl777/komodo
Komodo. Contribute to jl777/komodo development by creating an account on GitHub.
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[25-Jan-19 03:02 PM] Alright#0419
>RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPVMY

[25-Jan-19 03:02 PM] Alright#0419
not a real address

[25-Jan-19 03:03 PM] Alright#0419
Well shit

[25-Jan-19 03:03 PM] Alright#0419
I guess it is

[25-Jan-19 03:04 PM] Alright#0419
I thought I intentionally messed up the checksum on that so people wouldn't accidentally send coins to it

[25-Jan-19 03:08 PM] SHossain#0007
https://kmdexplorer.io/address/RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPVMY

[25-Jan-19 03:08 PM] SHossain#0007
100 KMD in there ðŸ˜ƒ

[25-Jan-19 03:08 PM] dukeleto#7326
just saw that ðŸ˜ƒ

[25-Jan-19 03:09 PM] Alright#0419
https://github.com/jl777/komodo/blob/7598204bf98d5316c3dad7c40a458810b6c71d55/src/wallet/rpcwallet.cpp#L4027

{Embed}
https://github.com/jl777/komodo/blob/7598204bf98d5316c3dad7c40a458810b6c71d55/src/wallet/rpcwallet.cpp
jl777/komodo
Komodo. Contribute to jl777/komodo development by creating an account on GitHub.
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[25-Jan-19 03:09 PM] Alright#0419
lol don't blame me for that 100 ðŸ˜‚

[25-Jan-19 03:10 PM] Alright#0419
was there before I knew komodo existed

[25-Jan-19 03:10 PM] SHossain#0007
yeah, july, 2017

[25-Jan-19 03:10 PM] dukeleto#7326
if examples use REGTEST, nobody can ever lose any real money . Just sayin'

[25-Jan-19 03:10 PM] dukeleto#7326
doesn't require a sync either

[25-Jan-19 03:11 PM] Alright#0419
I don't understand why anyone would use regtest for anything other than testing KMD specific things

[25-Jan-19 03:11 PM] dukeleto#7326
it's easy?

[25-Jan-19 03:11 PM] Alright#0419
will it always give the same result as the real assetchain though?

[25-Jan-19 03:11 PM] Alright#0419
you can test a chain that acts exactly the same just by changing ac_name

[25-Jan-19 03:12 PM] Alright#0419
regtest not exactly guaranteed to act the same

[25-Jan-19 03:12 PM] dukeleto#7326
REGTEST assetchain is just a run-time fork of KMD, just like all other assetchains

[25-Jan-19 03:12 PM] dukeleto#7326
other "real" assetchains have more differences from KMD than regtest does

[25-Jan-19 03:12 PM] Alright#0419
yea that's my point actually

[25-Jan-19 03:12 PM] dukeleto#7326
there are very very few places in the code that do something based on NetworkID

[25-Jan-19 03:12 PM] dukeleto#7326
i know, because i added one ðŸ˜ƒ

[25-Jan-19 03:13 PM] TonyL#3577
`generate` call is dope

[25-Jan-19 03:13 PM] dukeleto#7326
that allows simulating DPoW in regtest. Every 7th block in regtest is automagically notarized

[25-Jan-19 03:13 PM] dukeleto#7326
this allows testing dpowconfs in regtest mode

[25-Jan-19 03:14 PM] Alright#0419
I've never actually tried to use it. Does it support any ac_param that is in daemon?

[25-Jan-19 03:14 PM] dukeleto#7326
regtest mode also has very easy N,K params I think, so blocks can be mined very fast. Very few other changes to regtest

[25-Jan-19 03:14 PM] dukeleto#7326
@Alright https://github.com/jl777/komodo/blob/master/qa/rpc-tests/cryptoconditions.py

{Embed}
https://github.com/jl777/komodo/blob/master/qa/rpc-tests/cryptoconditions.py
jl777/komodo
Komodo. Contribute to jl777/komodo development by creating an account on GitHub.
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[25-Jan-19 03:14 PM] Alright#0419
I've used regtest for other chains, but never bothered with KMD/assetchains

[25-Jan-19 03:14 PM] dukeleto#7326
arbitrary -ac params here: https://github.com/jl777/komodo/blob/master/qa/rpc-tests/cryptoconditions.py#L44

{Embed}
https://github.com/jl777/komodo/blob/master/qa/rpc-tests/cryptoconditions.py
jl777/komodo
Komodo. Contribute to jl777/komodo development by creating an account on GitHub.
https://avatars2.githubusercontent.com/u/5962559?s=400&v=4

[25-Jan-19 03:15 PM] dukeleto#7326
these are the tests I am working on for dpowconfs: https://github.com/letolabs/komodo/blob/dpowminconfs/qa/rpc-tests/dpowconfs.py

{Embed}
https://github.com/letolabs/komodo/blob/dpowminconfs/qa/rpc-tests/dpowconfs.py
letolabs/komodo
Komodo. Contribute to letolabs/komodo development by creating an account on GitHub.
https://avatars0.githubusercontent.com/u/648647?s=400&v=4

{Reactions}
treasure 

[25-Jan-19 03:16 PM] dukeleto#7326
we can hook up these tests to continuous integration, which KMD desperately needs

[25-Jan-19 03:16 PM] dukeleto#7326
more automated tests via CI would catch a lot of annoying bugs before we find out later

[25-Jan-19 03:17 PM] dukeleto#7326
mostly it's large ZEC/VRSC merges that would really benefit from CI

[25-Jan-19 03:17 PM] Alright#0419
I have some ac_perc ac_pubkey test scripts I can put here once I make them a little prettier

[25-Jan-19 03:17 PM] dukeleto#7326
James tests his code very thorougly, but when thousands of lines are being merged in, it's impossible to test all the things

[25-Jan-19 03:17 PM] Alright#0419
I test James' code very thoroughly

{Reactions}
ðŸ˜‚ 

[25-Jan-19 03:18 PM] dukeleto#7326
once my tests for dpowconfs work in KMD, they will flow down to all other dpow coins (which have working test suites)

[25-Jan-19 03:18 PM] TonyL#3577
I can try to start with CI from cryptoconditions tests

[25-Jan-19 03:18 PM] dukeleto#7326
my dpowconfs stuff, which change how minconf param works, make me feel uncomfortable without having automated tests

[25-Jan-19 03:19 PM] dukeleto#7326
@TonyL KMD already has travis CI setup, i think for a build pipeline, but I don't think the test suite is hooked up, or it doesn't notify anywhere useful. @ca333 knows about Travis

[25-Jan-19 03:20 PM] dukeleto#7326
iirc, travis builds some kind of daily builds of KMD/agama for a few OS's, haven't looked recently

[25-Jan-19 03:21 PM] TonyL#3577
That would be great if python tests will execute continuously

[25-Jan-19 03:22 PM] dukeleto#7326
@Alright manual testing is a great addition to automated testing. Either by itself is less valuable than a bit of both

[25-Jan-19 03:22 PM] Alright#0419
I'm excited to see if I can get libcc working with current EVAL codes

[25-Jan-19 03:22 PM] Alright#0419
make some automated tests to break contracts

[25-Jan-19 03:22 PM] dukeleto#7326
I use travis ci to test against matrices of dependencies. That stuff is just not viable via manual testing

[25-Jan-19 03:22 PM] Alright#0419
right now you can't automate creating malformed CC txs at all

[25-Jan-19 03:22 PM] dukeleto#7326
CCfuzzer ?

[25-Jan-19 03:22 PM] Alright#0419
workflow is, make change, save, rebuild, restart daemon, test

[25-Jan-19 03:22 PM] Alright#0419
YES

[25-Jan-19 03:23 PM] dukeleto#7326
sounds like we could use a fuzzer

[25-Jan-19 03:23 PM] dukeleto#7326
fuzz dem CC's

[25-Jan-19 03:23 PM] Alright#0419
would save me soooo much time

[25-Jan-19 03:23 PM] dukeleto#7326
this is the most complex travis CI config I've ever written: https://github.com/leto/math--gsl/blob/master/.travis.yml

{Embed}
https://github.com/leto/math--gsl/blob/master/.travis.yml
leto/math--gsl
Perl interface to the GNU Scientific Library. Contribute to leto/math--gsl development by creating an account on GitHub.
https://avatars1.githubusercontent.com/u/30298?s=400&v=4

[25-Jan-19 03:24 PM] dukeleto#7326
it tests every commit against many versions of GSL *AND* many versions of Perl

[25-Jan-19 03:24 PM] TonyL#3577
` make change, save, rebuild, restart daemon, test`
Isn't it possible with bash script?

[25-Jan-19 03:24 PM] Alright#0419
yea I have it scripted once I make the change

[25-Jan-19 03:24 PM] Alright#0419
but rebuild and restart can be 10 minutes sometimes

[25-Jan-19 03:25 PM] dukeleto#7326
we could, for instance, make sure that KMD `dev` branch always compiles with our set of supported compilers on supported platforms

[25-Jan-19 03:25 PM] SHossain#0007
Decker also has few scripts which does something like that

[25-Jan-19 03:25 PM] SHossain#0007
i.e.:  Notary Nodes wallet-reset scripts

[25-Jan-19 03:28 PM] Alright#0419
I have no idea where I would begin to write a fuzzer, but I can explain exactly where and what to fuzz

[25-Jan-19 03:28 PM] Alright#0419
have been manually "fuzzing" for about a month

[25-Jan-19 03:30 PM] dukeleto#7326
automate the fuzz

[25-Jan-19 03:30 PM] dukeleto#7326
there are libraries and frameworks

[25-Jan-19 03:31 PM] dukeleto#7326
all you need to do, is teach a fuzz library how to start

[25-Jan-19 03:31 PM] dukeleto#7326
you give it a valid CC xtn, and then it will mutate/modify/corrupt it and test a bajillion combinations

[25-Jan-19 03:32 PM] dukeleto#7326
google has a program where they spend massive cycles on fuzzing open source projects, they hired the worlds best fuzzer coder, basically

[25-Jan-19 03:32 PM] Alright#0419
I need to write C/C++ to be able to sign a tx, can't just create unsigned, modify it's hex then signed atm

[25-Jan-19 03:32 PM] dukeleto#7326
https://en.wikipedia.org/wiki/American_fuzzy_lop_(fuzzer)

{Embed}
https://en.wikipedia.org/wiki/American_fuzzy_lop_(fuzzer)
American fuzzy lop (fuzzer)
American fuzzy lop is a fuzzer that employs genetic algorithms in order to efficiently increase code coverage of the test cases. So far it helped in detection of significant software bugs in dozens of major free software projects, including X.Org Server, PHP, OpenSSL, pngcrus...
https://upload.wikimedia.org/wikipedia/commons/0/05/American_fuzzy_lop%27s_afl-fuzz_running_on_a_test_program.png

