==============================================================
Guild: Komodo
Channel: dev-security
Topic: Discussion of KMD security related topics for all Komodo APIs, web, wallets, dapps.
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[05-Jun-19 01:25 PM] Andy#1801
Having one of our js dependencies target our app is one of my worst nightmares.

[05-Jun-19 01:25 PM] Andy#1801
Hope nobody loses their money in this one

[05-Jun-19 01:28 PM] jl777c#5810
seems about 10% of addresses we could not save

[05-Jun-19 01:30 PM] Andy#1801
damn

[05-Jun-19 01:30 PM] KomodoWorld#8282
could those be people that moved the coins to a new address on their own? I just did with mine

[05-Jun-19 01:30 PM] KomodoWorld#8282
even if I always used native

[05-Jun-19 01:32 PM] jl777c#5810
we have a few cases where we know the attacker took the funds as the user was in transit and not online

[05-Jun-19 01:35 PM] Andy#1801
I'm very interested in how the exact exploit looks like and what we as a wallet-developer-community can do to prevent those

[05-Jun-19 01:36 PM] Andy#1801
When can we expect an announcement?

{Reactions}
🍻 

[05-Jun-19 01:40 PM] jl777c#5810
i heard that a CVE will be published in a few hours

[05-Jun-19 01:40 PM] jl777c#5810
after that, then we can disclose more details

[05-Jun-19 01:57 PM] Andy#1801
ok good to hear

[05-Jun-19 02:46 PM] Deleted User#0000
any more info on the vulneraility?

[05-Jun-19 02:47 PM] Deleted User#0000
which libraries are affected?

[05-Jun-19 02:47 PM] Deleted User#0000
oh hi @Andy

[05-Jun-19 02:49 PM] Deleted User#0000
guess i just asked the same question as others

[05-Jun-19 03:03 PM] Deleted User#0000
is this a backdoor type situation?

[05-Jun-19 03:03 PM] Deleted User#0000
like with dash copay?

[05-Jun-19 03:03 PM] Deleted User#0000
targetted at agama?

[05-Jun-19 03:04 PM] Deleted User#0000
https://github.com/KomodoPlatform/Agama/blob/master/package.json looking at this mess it's like it was bound to happen

{Embed}
https://github.com/KomodoPlatform/Agama/blob/master/package.json
KomodoPlatform/Agama
Discontinued software - DONT USE - only for educational purpose - KomodoPlatform/Agama
https://avatars2.githubusercontent.com/u/21276113?s=400&v=4

[05-Jun-19 03:12 PM] Andy#1801
hi @Deleted User 😃

[05-Jun-19 03:13 PM] Andy#1801
Dependency management is very difficult. I mean they use a lot of custom repos, which is actually good if they are the ones maintaining them

[05-Jun-19 03:13 PM] Andy#1801
And very bad if it's just a random repo

[05-Jun-19 03:13 PM] jl777c#5810
yes, agama was specifically targeted with an exploit in an upstream module

[05-Jun-19 03:14 PM] Andy#1801
I've been thinking a lot about how we can make apps more secure and not (or less) vulnerable to those kind of attacks. But it's hard...

[05-Jun-19 03:14 PM] Andy#1801
There is basically no way of protecting yourself unless you can ensure that your code is run BEFORE ANY OTHER CODE, which is just not the case in most situations...

[05-Jun-19 03:14 PM] Deleted User#0000
how bout not using 10 different bitcoinjs forks when bitgo one supports most of alts out of box

[05-Jun-19 03:15 PM] Deleted User#0000
also two sha256 modules when js does that already

[05-Jun-19 03:15 PM] Andy#1801
Well yeah that is definitely true ;).

[05-Jun-19 03:15 PM] Deleted User#0000
but that’s just my opinion

[05-Jun-19 03:15 PM] Andy#1801
But we'll see where the hack originated

[05-Jun-19 03:16 PM] Andy#1801
They said it's something specifically targeted at agama, so maybe `agama-wallet-lib`?

[05-Jun-19 03:18 PM] Andy#1801
Last week I've gone down the rabbit hole of trying to secure our library and sadly I wasn't satisfied with the options we have. Is anyone else interested in starting a small group where we can discuss best-practices regarding dependency management, specifically in the crypto space?

[05-Jun-19 03:19 PM] Andy#1801
It happened to bitpay, now to agama. We found a vulnerability that was luckily never exploited, but it affected bitpay, Ark, our wallet. So it's only a matter of time until it happens again.

[05-Jun-19 03:23 PM] Andy#1801
I don't know who else is here, we have 3 wallets and the app from unko. I know that the maintainer of web3 would also be interested to talk about that.

[05-Jun-19 04:15 PM] Deleted User#0000
@Andy what vulnerability?

[05-Jun-19 05:23 PM] Deleted User#0000
can anyone ping me when the CVE is released? am developer of largest tipbot on discord rn and i'd like to know my users are not affected

[05-Jun-19 05:25 PM] jl777c#5810
unless you used agama code, you are safe

[05-Jun-19 05:27 PM] Deleted User#0000
oki

[05-Jun-19 08:10 PM] Deleted User#0000
CVE released yet?

[05-Jun-19 08:11 PM] jl777c#5810
havent seen it yet

[05-Jun-19 08:11 PM] jl777c#5810
they did remove the offending package

[05-Jun-19 08:11 PM] jl777c#5810
so if your code builds fine now, it means for sure you are not affected

[05-Jun-19 08:12 PM] Deleted User#0000
@jl777c what was the package?

[05-Jun-19 09:13 PM] Andy#1801
@Deleted User We found a bug in the native implementation of the `ionic-webview` plugin. To serve the content, they started an internal server. But this server is accessible to the whole operating system, so if you manage to start your own server before it, then someone could inject any code into your app. Granted, it's not that easy to exploit. But not only crypto-currency related apps were affected, we even found a microsoft app that was affected. Here's a small proof of concept video we made: https://www.youtube.com/watch?v=RR1r323otOQ

{Embed}
papersDev
https://www.youtube.com/watch?v=RR1r323otOQ
Copay - vulnerability cordova-plugin-ionic-webview for iOS
https://i.ytimg.com/vi/RR1r323otOQ/hqdefault.jpg

[05-Jun-19 09:13 PM] Deleted User#0000
well that's hella hard to exploit

[05-Jun-19 09:14 PM] Deleted User#0000
how is the port determined

[05-Jun-19 09:14 PM] Deleted User#0000
for the app?

[05-Jun-19 09:14 PM] Andy#1801
You will have to release an app to the app store, but the webserver keeps running for minutes after the app has been suspended

[05-Jun-19 09:14 PM] Andy#1801
You can set it in the config, but everyone leaves it on the default

[05-Jun-19 09:15 PM] Andy#1801
But the webserver is now gone from the plugin, so this is not an issue anymore

[05-Jun-19 09:16 PM] Andy#1801
And it might seem like it's hard to exploit, but if you release some kind of "companion app" for bitpay, for example a contact book or something that then deeplinks into bitpay (not sure if they enabled it), then it would be very easy and completely invisible to the user.

[05-Jun-19 09:16 PM] Deleted User#0000
true

[05-Jun-19 09:17 PM] Andy#1801
But the apps we reported it to did fix it fast, so it was all good

[05-Jun-19 09:17 PM] Andy#1801
That attack would also have to be planned really well, so I guess it's easier to just inject code into some random npm dependency 😃

[05-Jun-19 09:18 PM] Andy#1801
Do you manually review (the code) of the dependencies you use?

[05-Jun-19 09:18 PM] Andy#1801
I have always taken a look at the dependencies we use (author, if it's maintained, etc.), but you would also have to check the compiled code on npm to be completely sure

[05-Jun-19 09:19 PM] Andy#1801
I'm now thinking about simply copy/pasting the dependencies directly into our app, at least the ones that don't have too many dependencies themselves

[05-Jun-19 09:19 PM] Andy#1801
And then you just have to check updates manually

[05-Jun-19 09:20 PM] Andy#1801
Ideally there would be a way to "recursively" add dependencies directly from github, so it would always pull the source rather than some minified version

[05-Jun-19 09:21 PM] Andy#1801
But you would still have to review every sub dependency...

[05-Jun-19 09:22 PM] Andy#1801
It's like, once you go down that rabbit hole, you'll probably only be doing dependency review the whole day. But especially in our field it is getting more and more important.

[05-Jun-19 09:24 PM] Andy#1801
Anyway, I'm curious how this attack looked like exactly, then we can think about how we can protect ourselves from it in the future.

{Reactions}
💯 

[05-Jun-19 09:24 PM] Deleted User#0000
i don't really hhave many dependencies

[05-Jun-19 09:25 PM] Andy#1801
Have you checked how many you have in total (including sub-dependencies)?

[05-Jun-19 09:25 PM] Deleted User#0000
i use package lock etc

[05-Jun-19 09:25 PM] Andy#1801
Can a package on npm not be changed once hit has been released? (a specific version)

[05-Jun-19 09:26 PM] Deleted User#0000
well a version cannot be overriden i believe

[05-Jun-19 09:26 PM] Andy#1801
And if then probably the hash would change in the package lock

[05-Jun-19 09:26 PM] Deleted User#0000
use package lock and you will be stuck with the same versions, even on sub-modules

[05-Jun-19 09:26 PM] Andy#1801
but then you still have to review the code that is hosted on NPM

[05-Jun-19 09:27 PM] Deleted User#0000
i only use a custom fork of bitcoinjs-lib and bip32 for crypto operations

[05-Jun-19 09:27 PM] Andy#1801
the scary part is that any package can just overwrite critical functions, even if you use your own libs for the critical functions

[05-Jun-19 09:28 PM] Andy#1801
One could simply do `crypto.getRandomValues = () => { return 1 }` somewhere, and then your libs would probably use that...

[05-Jun-19 09:28 PM] Deleted User#0000
scoping bro

[05-Jun-19 09:28 PM] Deleted User#0000
lol

[05-Jun-19 09:28 PM] Andy#1801
that doesn't work

[05-Jun-19 09:28 PM] Deleted User#0000
really

[05-Jun-19 09:29 PM] Andy#1801
it might be different in node

[05-Jun-19 09:29 PM] Andy#1801
but in the browser you can overwrite window.crypto.getRandomValues and it is changed EVERYWHERE it is used

[05-Jun-19 09:29 PM] Andy#1801
The only thing you can do is create a secure copy of that function at the beginning of your code, so in the case of an app in your index.html

[05-Jun-19 09:29 PM] Deleted User#0000
i generated my seed outside of my app anyway

[05-Jun-19 09:30 PM] Andy#1801
hopefully there was no code injected there 😉

[05-Jun-19 09:30 PM] Deleted User#0000
into my node repl?

[05-Jun-19 09:30 PM] Deleted User#0000
dont htihnk so

[05-Jun-19 09:31 PM] Andy#1801
yeah then it's probably pretty safe 😛

[05-Jun-19 09:31 PM] Andy#1801
(unless you distrust node + dependencies or your hardware RNG), but at some point you just have to trust something/someone...

[05-Jun-19 09:31 PM] Deleted User#0000
true

[05-Jun-19 09:32 PM] Andy#1801
There is an interesting TC39 proposal open that would solve this problem by introducing proper scoping, or "realms" into javascript: https://github.com/tc39/proposal-realms

{Embed}
https://github.com/tc39/proposal-realms
tc39/proposal-realms
ECMAScript Proposal, specs, and reference implementation for Realms - tc39/proposal-realms
https://avatars3.githubusercontent.com/u/1725583?s=400&v=4

[05-Jun-19 09:33 PM] Deleted User#0000
well i'm working with node so i can just use child processes i guess

[05-Jun-19 09:33 PM] Andy#1801
lucky you 😉

[05-Jun-19 09:34 PM] Andy#1801
I also thought about using WebWorkers, but guess what, someone can simply overwrite `window.WebWorker`...

[05-Jun-19 09:34 PM] Deleted User#0000
hmm

[05-Jun-19 09:34 PM] Deleted User#0000
i know discord locks window.localStorage somehow

[05-Jun-19 09:35 PM] Deleted User#0000
see how they do that

[05-Jun-19 09:35 PM] Andy#1801
Yeah you can use Object.freeze to make objects immutable (to some extent)

[05-Jun-19 09:35 PM] Andy#1801
But then again, `Object.freeze = () => {}`

[05-Jun-19 09:35 PM] Andy#1801
But I'll look into that

[05-Jun-19 09:36 PM] Andy#1801
I assume they make a copy of that function somewhere in the beginning.

[06-Jun-19 07:51 AM] jl777c#5810
https://blog.npmjs.org/post/185397814280/plot-to-steal-cryptocurrency-foiled-by-the-npm

{Embed}
The npm Blog
https://blog.npmjs.org/post/185397814280/plot-to-steal-cryptocurrency-foiled-by-the-npm
Plot to steal cryptocurrency foiled by the npm security team
Yesterday, the npm, Inc. security team, in collaboration with Komodo, helped protect over $13 million USD in cryptocurrency assets as we found and responded to a malware threat targeting the users of...
https://i.ytimg.com/vi/6Guadww8CnU/hqdefault.jpg

