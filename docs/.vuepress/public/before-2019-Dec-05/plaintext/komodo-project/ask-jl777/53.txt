==============================================================
Guild: Komodo
Channel: ask-jl777
Topic: Ask questions about the core tech here, but not questions about prices or personal questions or GUI and  please don't DM JL777.
https://dexstats.info/richlistlookup.php?address=RLVzC4tr9cNKvuw2z4m8KuMfZURwCehx55
https://medium.com/@jameslee777
Messages: 100
Range: before 05-Dec-19 12:00 AM
==============================================================

[16-Mar-19 05:27 AM] Mylo#8306
From C, you can learn anything.   Javascript, maybe some bad habits.

[16-Mar-19 08:31 AM] jl777c#5810
C

{Reactions}
üòÑ (3) üòé üòÜ 

[16-Mar-19 10:11 AM] grewalsatinder#9653
@Shinzo Abe 
I'd like to add. If you are going to start learning programming, try avoiding JavaScript if you can.

[16-Mar-19 10:12 AM] grewalsatinder#9653
The substitute to that can be other languages, including Dart, QT, WASM etc

[16-Mar-19 10:21 AM] grewalsatinder#9653
learn core languages like C to clear programming fundamentals.
you may or may not like it, depending on how you like the level of programs you want to code.
explore what type of programs you want to code.
But learn C to make your programming fundamentals strong.
Then C++ if you want to extend to Object Oriented Programming
As you will learn C/C++ and practice it will make clear to you how they fit in the ecosystem of different levels for different purposes.
for web fundamentals HTML5, CSS3 and JavaScript fundamentals.
When you understand these, you'll have clarity what kind of programming you want to do. Backend code or frontend Web.
Emphasis more on native code than web, because as the native programming languages now evolving, web is going to be more flexible to adopt the same native languages to web, examples like WebAssembly. Different frameworks will emerge in your fav native language to make web apps or native desktop/mobile apps to make them with ease so you don't have to learn HTML/CSS/JavaScript to much extend.

[16-Mar-19 10:21 AM] grewalsatinder#9653
But having fundamental knowledge of HTML/CSS/Js is essential to make sense of those expected good future WASM frameworks for different native languages.

[16-Mar-19 10:24 AM] grewalsatinder#9653
I myself chose to learn Go language. So, can advise it's good to learn after C -> Go üôÇ

[16-Mar-19 11:45 AM] mrlynch#5735
@grewalsatinder so C/C++ & WASM covers backend & front end and in theory, you don't need much else?

[16-Mar-19 11:46 AM] mrlynch#5735
i'm starting my journey with CC's and was looking at the WASM wrapper as well and I was wondering if i can use these 2 to write my own projects

[16-Mar-19 11:48 AM] mrlynch#5735
while i'm aware that C + WASM might be harder to learn to build a web app rather than just doing it in python if it's better in the long run i'm willing to invest my time & efforts into them

[16-Mar-19 11:51 AM] jl777c#5810
CC is linked inside komodod, it isnt a webapp

[16-Mar-19 11:51 AM] jl777c#5810
the webapp side would be calling rpc calls that the CC provide

[16-Mar-19 11:55 AM] mrlynch#5735
sorry, let me rephrase.
if i know C++ and learn WASM is it enough to build somewhat complex web apps?

[16-Mar-19 11:58 AM] mrlynch#5735
basis for that is:
1. starting journey with CC's <- need C
2. interested in building the WASM wrapper <- need to learn WASM

therefore if i take the time to learn and become proficient in these 2 it would be wise on my part to use them in my projects, rather than doing things in python

[16-Mar-19 12:11 PM] jl777c#5810
there is a way to compile C -> WASM, so C seems to be all you need

[16-Mar-19 12:12 PM] jl777c#5810
https://github.com/emscripten-core/emscripten

{Embed}
https://github.com/emscripten-core/emscripten
emscripten-core/emscripten
Emscripten: An LLVM-to-Web Compiler. Contribute to emscripten-core/emscripten development by creating an account on GitHub.
https://avatars2.githubusercontent.com/u/46011144?s=400&v=4

[16-Mar-19 12:23 PM] mrlynch#5735
cool. thanks!

[16-Mar-19 12:25 PM] Mylo#8306
https://www.youtube.com/watch?v=D4fNcX0Q9gA

{Embed}
Marcus O'Brien
https://www.youtube.com/watch?v=D4fNcX0Q9gA
AutoCAD @ Google IO 2018
AutoCAD web app at Google IO 2018
https://i.ytimg.com/vi/D4fNcX0Q9gA/maxresdefault.jpg

[16-Mar-19 12:26 PM] Mylo#8306
re: WASM.   autocad was able to open 30 year old design files in a browser using a C++ -> WASM compiler.
it is quite interesting tech.

[16-Mar-19 12:33 PM] mrlynch#5735
üëÄ üò≥ just watched the vid. that is so cool üòÉ

[16-Mar-19 12:50 PM] mrlynch#5735
thank you for your time. my path is now clearer

[16-Mar-19 01:02 PM] dukeleto#7326
@mrlynch if you considers an "equihash webminer" a complex web app, yes: https://github.com/MyHush/hushwebminer/tree/master/js-emscripten

{Embed}
https://github.com/MyHush/hushwebminer/tree/master/js-emscripten
MyHush/hushwebminer
HUSH JS miner. Contribute to MyHush/hushwebminer development by creating an account on GitHub.
https://avatars0.githubusercontent.com/u/26923909?s=400&v=4

[16-Mar-19 01:04 PM] dukeleto#7326
that repo has example code in C, which is also ported to Emscripten, to allow webmining. It's a good example of taking non-trivial C code and making a wasm binary which can be executed by browsers

[16-Mar-19 01:05 PM] jl777c#5810
I saw unix run in a browser, along with C compiler

[16-Mar-19 01:08 PM] mrlynch#5735
@dukeleto bookmarked üòÉ 
i'm reading now and watching vids on wasm. my understanding so far is that whatever you can come up with in C you can run in a browser
i'll be moving my stuff to C üò¨ 
thy journey begins

[16-Mar-19 02:38 PM] dukeleto#7326
C or C++ is supported

[16-Mar-19 02:39 PM] jl777c#5810
first paragraph from readme: Emscripten is an LLVM-to-JavaScript compiler. It takes LLVM bitcode - which can be generated from C/C++, using llvm-gcc (DragonEgg) or clang, or any other language that can be converted into LLVM - and compiles that into JavaScript, which can be run on the web (or anywhere else JavaScript can run).

[16-Mar-19 02:39 PM] jl777c#5810
but you need to make sure all the libraries are also ported

[16-Mar-19 09:59 PM] allbits#5898
That was a great link Mylo. Thanks

{Reactions}
üëç 

[17-Mar-19 04:18 AM] Shinzo Abe#9369
anyone have a link to a good C programming pdf?

[17-Mar-19 04:22 AM] ph03nix#3115
jl777 advised this one http://www.dipmat.univpm.it/~demeio/public/the_c_programming_language_2.pdf

[17-Mar-19 04:23 AM] Shinzo Abe#9369
i want download link

[17-Mar-19 04:23 AM] Shinzo Abe#9369
used to have it

[17-Mar-19 04:25 AM] ph03nix#3115
click the link and download it

[17-Mar-19 04:26 AM] ph03nix#3115
or wait for james ü§∑

[17-Mar-19 04:26 AM] Shinzo Abe#9369
what do you use to compile C?

[17-Mar-19 04:34 AM] grewalsatinder#9653
gcc

[17-Mar-19 04:39 AM] Shinzo Abe#9369
why not start with python ?  its being used by NASA , google and youtube

[17-Mar-19 04:51 AM] Mylo#8306
Interpreted language vs compiled

[17-Mar-19 04:51 AM] Mylo#8306
Untyped vs typed

[17-Mar-19 04:52 AM] Mylo#8306
Those are a cpl properties of languages that are important to some ppl.  I like typed languages because I find them more orderly

[17-Mar-19 04:53 AM] Mylo#8306
And I prefer object oriented.  All the cool kids like functional programming these days.

Learn C for a week or 2 then branch out

[17-Mar-19 05:00 AM] Mylo#8306
C is about resource management imo, managing CPU memory bytes.  No gui.  If you go from C to gui you'll appreciate the things those gui languages offer, like garbage collection (automatic memory mgmt) but you might not appreciate data structures and programming techniques that make you a better programmer - because the gui language/framework makes those decisions for you

[17-Mar-19 07:44 AM] jl777c#5810
a week or two??

[17-Mar-19 07:44 AM] jl777c#5810
it took me a year to master C

[17-Mar-19 07:44 AM] jl777c#5810
i guess if you are 10x better than me, then a week or two is enough

[17-Mar-19 07:45 AM] jl777c#5810
unix is written in C

[17-Mar-19 07:45 AM] jl777c#5810
crypto math is mostly written in C

[17-Mar-19 07:45 AM] jl777c#5810
C compilers, written in C

[17-Mar-19 07:45 AM] jl777c#5810
compilers for other languages, often written in C

[17-Mar-19 07:46 AM] jl777c#5810
realtime systems written in C

[17-Mar-19 07:46 AM] jl777c#5810
firmware written in C

[17-Mar-19 07:46 AM] jl777c#5810
why not start with C, the base layer of most all computing is written in C.

[17-Mar-19 07:49 AM] ph03nix#3115
did i post the correct pdf to learning C

[17-Mar-19 07:50 AM] jl777c#5810
yes,  http://www.dipmat.univpm.it/~demeio/public/the_c_programming_language_2.pdf
or any equivalent

[17-Mar-19 07:50 AM] jl777c#5810
work through all the examples until you actually fully understand it

[17-Mar-19 07:50 AM] jl777c#5810
master C before branching out to anything else if you want to be useful

[17-Mar-19 07:50 AM] jl777c#5810
it might take you two weeks, or a year or 10 years

[17-Mar-19 07:51 AM] jl777c#5810
C is one of the smallest languages to learn, which means you can master it faster than most any other language

[17-Mar-19 07:51 AM] jl777c#5810
once you master a language, you can actually look at the code and know what it does. removing this as a variable will make you a 100x better coder

[17-Mar-19 07:53 AM] jl777c#5810
from what I can tell, most coders dont really understand what the code they wrote is doing (let alone code someone else wrote), not really sure what they need to write, and unusure of how to solve the problem. 2 out of three aint bad, and pretty required to make progress

[17-Mar-19 07:53 AM] jl777c#5810
so if you can understand what you need to write and can tell what you actuall wrote, you will be able to solve problems

[17-Mar-19 09:54 AM] TonyL#3577
Python most used interpreter CPython written in C

[17-Mar-19 09:58 AM] TonyL#3577
@Shinzo Abe Wanted to say that I'm started from Pyhton - but actually my first programming experience was C in uni with super oldschool BorlandC  compiler. Then passed Harvard CS50 course - have C as programming language for basic things explanation and examples as well. So I wonder it's really good for head wrapping.
I'm not a programmer, but actually CS50 course I'm personally highly recommend for journey start. (it will give you not only basic knowledge in C and Python but also you'll understand how computer works, how data representing in binary, basic algorythms and etc.)

[17-Mar-19 09:59 AM] TonyL#3577
https://online-learning.harvard.edu/course/cs50-introduction-computer-science

{Embed}
https://online-learning.harvard.edu/course/cs50-introduction-computer-science
CS50: Introduction to Computer Science
An introduction to the intellectual enterprises of computer science and the art of programming.
https://online-learning.harvard.edu/sites/default/files/styles/social_share/public/course/cs50x-original.jpg?itok=kR_JV8DW

[17-Mar-19 10:39 AM] Shinzo Abe#9369
@jl777c is there material you could recommend reading before diving into the book "the C programming language ?"

[17-Mar-19 10:40 AM] Shinzo Abe#9369
a lot of the terminology and presumptions here are foreign to me

[17-Mar-19 10:52 AM] grewalsatinder#9653
Computer fundamentals 
I will have to look what books were those that tought me computer and network fundamentals. 
I learned that in O'Level computer science course before my graduation.

[17-Mar-19 10:53 AM] grewalsatinder#9653
There must be a lot many sources to learn computer and network fundamentals, check those, and then C must make sense

[17-Mar-19 10:57 AM] Shinzo Abe#9369
thanks , and what compiler would you recommend if im on a 2012 mac book pro ?

[17-Mar-19 11:01 AM] Shinzo Abe#9369
i already have xcode but have read that its limited for C

[17-Mar-19 11:03 AM] Mylo#8306
Your Mac has gcc.  Just use a simple text editor for learning.  A full IDE will get in your way.  Flick thru the PDF

[17-Mar-19 11:03 AM] Mylo#8306
+ do the exercises as jl directed

[17-Mar-19 11:44 AM] Shinzo Abe#9369
where to find GCC?

[17-Mar-19 11:45 AM] blackjok3r#3181
sudo apt-get install gcc?

[17-Mar-19 11:45 AM] blackjok3r#3181
:troll:

[17-Mar-19 12:03 PM] Mylo#8306
Google?  https://apple.stackexchange.com/questions/348605/any-pitfalls-in-replacing-gcc-and-g-with-gnu-versions

{Embed}
https://apple.stackexchange.com/questions/348605/any-pitfalls-in-replacing-gcc-and-g-with-gnu-versions
Any Pitfalls in Replacing gcc and g++ With GNU Versions?
I understand that Clang is the default and recommended compiler for MacOS. By default macOS has binaries for gcc and g++ in /usr/bin/ which are same as clang and clang++.

What are the possible iss...
https://cdn.sstatic.net/Sites/apple/img/apple-touch-icon@2.png?v=b514451ec60c

[17-Mar-19 12:04 PM] Mylo#8306
/usr/bin btlooks

[17-Mar-19 01:38 PM] grewalsatinder#9653
brew install gcc

[17-Mar-19 01:39 PM] grewalsatinder#9653
Install brew from brew.sh

[17-Mar-19 01:40 PM] grewalsatinder#9653
Sign up for a cheap C video course on udemy.com if you like. That will help with many things.

[17-Mar-19 03:51 PM] jl777c#5810
if you need to find info on something, just google it

[17-Mar-19 03:51 PM] jl777c#5810
wikipedia is decent source too

[17-Mar-19 03:52 PM] jl777c#5810
there should be no excuse to use to prevent progress

[17-Mar-19 03:52 PM] jl777c#5810
convince yourself you will be able to do it, then do it

{Reactions}
üí™ (2) üëå (2) üíØ (2) Komodo (3) 

[18-Mar-19 09:53 AM] Sherdogz#6731
I have started a html css course   on udemy and want to start with a programming language after that... I read everywhere python is the way to go because it's easier to understand ... but C would be better?

[18-Mar-19 09:56 AM] TonyL#3577
CS50 course is great point to start, really. It covers both C and python and also wrapping the head over needed to know stuff. Just programming language syntax knowledge without basic understanding of how computers work and basic algos will not allow you to solve the problems in most of the cases imo

{Reactions}
üëå 

[18-Mar-19 09:57 AM] grewalsatinder#9653
CSS is for web
C is for low level computer stuff

[18-Mar-19 10:25 AM] klunex#3191
hey jl777! Whats the state of pantos? Still working on it? Is the project goiing in a satisfieing direction?

[18-Mar-19 10:39 AM] sœÜldat#8733
@klunex I think it's better to ask here https://t.me/pantosIO

{Embed}
https://t.me/pantosIO
Pantos (Official)
The first multi-blockchain token system. Made with ‚ô•Ô∏è and care in Vienna by Bitpanda.
https://cdn4.telesco.pe/file/MvkVUzp92SlUtD4AmzxkzUmJ5ljdCKcP7IrdmVBlk3G0piX0x4ygPeYy9Q_rz87eeCxWdtFLV9Ql9OVpebTZ74hSjemFEJtstTcbwWKbHAo3zIWDE2B-YWaXDRSUMHuN_5GB1bOcYd105O8lnN-vBdxlD7MZuJoEhZpVMjRALkHehuoVLjnspbASCfVUgSujdItSKHV7NpWW2TDBMvSOUX_5R9rtAovD8_9ysmyC3f_lWROJhuW3eV1tlpg8cP-vyGLLodJg8R0RlKJXayTkoZVs0yBYB-CDR7sw-MjiNXMn5g2Gg7Ec6p-bG_dQHrHmk-VFji2t4dEAreSrRB3I7g.jpg

[18-Mar-19 04:13 PM] grewalsatinder#9653
@klunex pantos is not a project of James.

[18-Mar-19 04:14 PM] grewalsatinder#9653
@jl777c like C programming, do you know any good book on Data Structures and Algorithms ?

[18-Mar-19 04:16 PM] Cryptoon#3362
https://www.datacamp.com

{Embed}
https://www.datacamp.com
Learn R, Python & Data Science Online
Learn Data Science from the comfort of your browser, at your own pace with DataCamp's video tutorials & coding challenges on R, Python, Statistics & more.
https://www.datacamp.com/datacamp-sq.png

[18-Mar-19 04:17 PM] Cryptoon#3362
This one has some solid courses for data analysis

[18-Mar-19 04:19 PM] grewalsatinder#9653
@Cryptoon https://www.udemy.com/clang-algo-ds/learn/v4/content

{Embed}
https://www.udemy.com/clang-algo-ds/learn/v4/content
Online Courses - Anytime, Anywhere | Udemy
Udemy is the world's largest destination for online courses. Discover an online course on Udemy.com and start learning a new skill today.
https://www.udemy.com/staticx/udemy/images/v6/default-meta-image.png

[18-Mar-19 04:19 PM] grewalsatinder#9653
I signed up with this course

[18-Mar-19 04:19 PM] grewalsatinder#9653
I learn from Video + Books

[18-Mar-19 04:20 PM] grewalsatinder#9653
so looking for some good book

[18-Mar-19 04:23 PM] grewalsatinder#9653
I remember I learned this all in my BSc.IT decade ago, since I did not practice C, I forget it all.
but since I did it at least once while learning, I'm grasping C better than Go, so far....

{Reactions}
üëç 

[18-Mar-19 04:44 PM] jl777c#5810
@grewalsatinder for data structures, all you need is Knuth

