AuthorID;Author;Date;Content;Attachments;Reactions;
"352488299077566475";"zawy#5864";"07-Aug-19 12:39 PM";"ok, in my mind, the previous bnTarget  = ctB[0]-ctB[1]";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:40 PM";"If that's not how the code is doing it, I don't nkow how anything's coming out right";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:43 PM";"I mean that is the previous  bnTarget that I have been thinking is  used in the DA.....my understanding is that you have been putting the RST output (or digi or exp)   directly on chain";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:43 PM";"yes, what is onchain is the actual RST or digishield target which was solved";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:44 PM";"so in my terminology, previous  bnTargetA = tA[0] = ctA[0] - ctA[1]";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:44 PM";"but if you go ctB[0] - ctB[W] there is no assurance that ctB[W] is less than ct[0]";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:44 PM";"each blocks bnTarget is derived from its nBits";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:45 PM";"there is no summing of all prior nBits at this level";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:46 PM";"ct is cumulative targets  it can never be higher in the past";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:46 PM";"that is what ct meant!";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:46 PM";"it is just bnTargets[] for now";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:47 PM";"yeah, see how bad I've been in communicating...";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:47 PM";"so when you say ct[0] - ct[W] you actually mean ct[0] + ct[1] + ct[2] ?";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:47 PM";"when W is 3";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:48 PM";"yes";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:48 PM";"ok, fixing. i should have asked what ""ct"" meant and would have caught this sooner";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:48 PM";"so it is totally wrong, yet still working halfway decently!";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:48 PM";"I should have told you to read all my code comments very carefully";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:49 PM";"it's only mentioned in 1 place what ct is";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:49 PM";"yeah, I have not idea how it's even close";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:50 PM";"(ct[0] - ct[1]) is just the last bnTarget";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:50 PM";"yes....but it should be the corrected one when used anywhere in the da";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:50 PM";"yes, i update the ct[] array at the very first. all calcs use the original bnTarget or the RST adjusted";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:51 PM";"OK, while you're correct that disaster I'll work on W/W-1";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:53 PM";"restarted ZAWY18";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:53 PM";"i only saw 2 places that did the ct[] - ct[]";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:56 PM";"OK, undo my W/W-1 changes";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:57 PM";"before we get new results?";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:57 PM";"i wasnt seeing it trigger that often";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:58 PM";"W-1 changes just affect the initial test and that seemed to trigger rarely. oh, i can set the other bit so we can see which part of RST is active";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 12:58 PM";"hmmm, i don't see that you made that chage";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:59 PM";"line 105";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 12:59 PM";"nSPV branch";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:00 PM";"yeah, undo 105 and 109";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:00 PM";"ii loop triggered on 64";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:00 PM";"and restart";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:00 PM";"are you at T=30";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:00 PM";"ok";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:00 PM";"T is 60";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:00 PM";"OK";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:01 PM";"whew...I'm glad the ct[] stuff wasn't so hard to fix";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:06 PM";"selecting chain tip must be based on work determined by ctB";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:06 PM";"restarted";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:07 PM";"what if we just put onchain the ctB?";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:07 PM";"oh, but then we end up where what was mined wont match what the diff is...";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:08 PM";"possible to do, but a bit more messy. more like the original implementation was, all offchain";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:08 PM";"right, you previously realized that";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:08 PM";"which is why you didn't do it which is what I was arguing for";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:09 PM";"I was just thinking about the consequences and figured we could keep it your way as long as chain work is corrected instead of the validation process.  One of the two has to do the correction";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:10 PM";"to make chain selection based on ctB would be possible, would just need to recalculate the bnTargets used in the chainwork calc. never changed that code before, so not sure just what i would be up against";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:11 PM";"if you redid the nBits compression, you could get both targets in the 4 bytes";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:12 PM";"it seems that is an optimization to prevent some attack scenarios, but it feels too complex to understand just how a miner would be able to take advatange of this easily, especially if there is a notarization every 10 blocks";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:12 PM";"i already did the nBits encoding, so it is possible to figure out what bnTarget was used";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:12 PM";"You need 1 byte to determine the number the 2^(1 byte) exponent and 1 byte for the significant figure";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:13 PM";"why not do it like now? just call the zawy_ctB(bnTarget,solvetime) function";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:13 PM";"so the bnTarget to use is zawy_ctB is the lowest two bits are non-zero in nBits";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:13 PM";"i just need to make sure the chainwork logic uses this";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:14 PM";"but it doesnt affect the mining algo, so it seems it can be done after the algo stabilizes";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:29 PM";"60,1565184121,2003eeef,03eeef00000000000000000000000000,00000000000000000000000000000000,3.8,3.9,2
61,1565184134,2003d29e,03d29e00000000000000000000000000,00000000000000000000000000000000,3.9,4.1,13
62,1565184150,2003b732,03b73200000000000000000000000000,00000000000000000000000000000000,4.1,4.2,16
63,1565184153,20039c99,039c9900000000000000000000000000,00000000000000000000000000000000,4.2,4.3,3
64,1565184192,1f6df275,006df275000000000000000000000000,003b26cb3be76c8b4395810624dd2f1a,35.1,4.6,39
65,1565184272,1f1520cd,001520cd000000000000000000000000,002fe5c059db22d0e5604189374bc6a7,182.5,5.0,80
66,1565184400,1f34ee8d,0034ee8d000000000000000000000000,0133376590624dd2f1a9fbe76c8b4395,72.8,5.4,128";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:29 PM";"67,1565184488,200115e9,0115e900000000000000000000000000,02fa4ebc28f5c28f5c28f5c28f5c28f5,13.9,5.7,88
68,1565184531,2001ad14,01ad1400000000000000000000000000,00000000000000000000000000000000,9.0,6.1,43";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:32 PM";"69,1565184602,200184d4,0184d400000000000000000000000000,00000000000000000000000000000000,9.9,6.4,71
70,1565184642,20018a11,018a1100000000000000000000000000,00df0aa5604189374bc6a7ef9db22d0e,9.8,6.7,40";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:36 PM";"71,1565184681,2000c0f5,00c0f500000000000000000000000000,0067cf9604189374bc6a7ef9db22d0e5,20.0,7.1,39
72,1565184735,2000b2e9,00b2e900000000000000000000000000,00b8d06ed916872b020c49ba5e353f7c,21.5,7.5,54
73,1565184786,1f6b1e45,006b1e45000000000000000000000000,0062a7e905604189374bc6a7ef9db22d,36.0,8.3,51
74,1565184844,1f63d515,0063d515000000000000000000000000,0076e67c153f7ced916872b020c49ba5,38.6,9.1,58
75,1565184890,1f5d1dcd,005d1dcd000000000000000000000000,0045be8345e353f7ced916872b020c49,41.4,10.2,46
76,1565184908,1f18bd5d,0018bd5d000000000000000000000000,0002d200dfbe76c8b4395810624dd2f1,155.8,11.8,18";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:42 PM";"77,1565185179,2000c361,00c36100000000000000000000000000,13dbc2570a3d70a3d70a3d70a3d70a3d,19.7,13.3,271
78,1565185186,20017531,01753100000000000000000000000000,000658210624dd2f1a9fbe76c8b43958,10.3,14.8,7
79,1565185198,2001aeec,01aeec00000000000000000000000000,00000000000000000000000000000000,8.9,16.4,12
80,1565185210,2001c7d4,01c7d400000000000000000000000000,00000000000000000000000000000000,8.5,18.2,12
81,1565185243,1f1c32d5,001c32d5000000000000000000000000,000adb4015c28f5c28f5c28f5c28f5c2,136.7,18.5,33
82,1565185247,2001e489,01e48900000000000000000000000000,00026c347ae147ae147ae147ae147ae1,8.0,15.4,4
83,1565185279,2002030d,02030d00000000000000000000000000,00ba72c9374bc6a7ef9db22d0e560418,7.5,13.9,32
84,1565185291,2001fb65,01fb6500000000000000000000000000,0019e08b020c49ba5e353f7ced916872,7.6,13.3,12
85,1565185295,2001cf49,01cf4900000000000000000000000000,0002510147ae147ae147ae147ae147ae,8.3,13.2,4
86,1565185299,2001b6dd,01b6dd00000000000000000000000000,000231beb851eb851eb851eb851eb851,8.8,13.1,4";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:48 PM";"odds are RST?";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:51 PM";"if the second hash value is non-zero, RST activated";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:51 PM";"ok";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:51 PM";"if all 0s, then just digishield. it corresponds to odd/even";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:51 PM";"those three fast blocks 12, 4, 4 got it triggered for a very hard target, exp() coming to the rescue";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:53 PM";"the initial trigger seems to have stopped by ht 68 which means it should not have triggered on 72 if my -2 correction were right";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:53 PM";"i mean 70";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:54 PM";"87 was a very long block and then 3 fast blocks";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:54 PM";"how long was 87?";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:54 PM";"87,1565185958,20009db5,009db500000000000000000000000000,5eca3923126e978d4fdf3b645a1cac08,24.4,14.0,659
88,1565185963,200f0f0f,0f0f0f00000000000000000000000000,001ed728f5c28f5c28f5c28f5c28f5c2,1.0,8.1,5
89,1565185969,200f0f0f,0f0f0f00000000000000000000000000,002e42bd70a3d70a3d70a3d70a3d70a3,1.0,5.7,6
90,1565185972,2006b619,06b61900000000000000000000000000,0005277fbe76c8b4395810624dd2f1a9,2.2,5.1,3";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:54 PM";"ok";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:55 PM";"since the digishield calc is based on the ctB, which goes ""backwards"" as far as raising the diff while slowing things down, the digishield target seems like it is becoming very volatile";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:55 PM";"that is higher than it should be, and we need to figure out why 70 was activated";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:55 PM";"maybe i need to feed the inverse ctB into digishield";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:56 PM";"I need to thnik about why 659 is high.  Yuo can try to find out why 70 triggered";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:57 PM";"ht.70 was the ii loop";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:57 PM";"j.19 ii.18";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:57 PM";"yes, but the block before it was all zeros so inner loop should not have even been tried.  The pre-loop could have been calculated, btu the sum of 3 was < T/2";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:58 PM";"the trigger stops if inner loop  stops being activated which is seen by all zeros....then outer trigger needs to first occur, then on next block inner loop applies for 1 or more blocks";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:59 PM";"there is no knowledge of whether RST was active or not in the loop";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:59 PM";"am i supposed to disable activation if the prior blocks didnt have RST active?";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:59 PM";"there is already an array of active/inactive for all the blocks";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 01:59 PM";"in j loop sum of last 5 shold be < T/2 which is looking for a prior pre-loop trigger";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 01:59 PM";"from the nBits";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:00 PM";"sum of 3";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:00 PM";"ahh, yes, so the loop can be simplifed";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:00 PM";"ts[j]-ts[j+W]";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:05 PM";"the ii loop is confusing to me";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:06 PM";"it does seem to trigger if there were fast blocks in the past";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:06 PM";"since there's something wrong with it i need to look at...now";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:07 PM";"there is a zflags[] array, which if nonzero means RST was used and the ctB is in the ct[]";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:07 PM";"if zflags[j] is 0 the ct[j] is digishield";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:08 PM";"i hope that allows you to define a logic that is easier to understand, current one seems very tricky";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:12 PM";"if a nonzero occurs (blocks emission was corrected) inner loop should stop and not activate again until outer trigger......outer trigger needs a ctB value too which I guess means it is also an all zeros block.  So if a sequence of all zeros stops, then inner loop is not attempted until outer calculation was trigger, and it goes to inner loop only on the next block, but only if the 1 outer trigger did not slow it up so much that emission was corrected.  In other words if outer trigger caused > 2.5 to 3xT delay, inner loop will not be activated on next block";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:15 PM";"let me try to restate.
it seems that you have two separate states. outer trigger happened or not. lets start with a quiet state where nothing has happened. in this case the inner loop should never happen.
once the outer trigger happens, then on the following block(s) the inner triggers will only happen as long as the block emissions from the outertrigger to current is still below what it should be. once that happens, it goes to a quiet state again?";"";"";
"352488299077566475";"zawy#5864";"07-Aug-19 02:15 PM";"maybe that -2 needed to stay -1";"";"";
"455741312273219595";"jl777c#5810";"07-Aug-19 02:17 PM";"so at a given height, we scan zflags to find the first time the outertrigger happened. any non-triggered block will stop the ii loop as that would have meant that it did catch up";"";"";
