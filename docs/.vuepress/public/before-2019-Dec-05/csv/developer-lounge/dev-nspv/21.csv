AuthorID;Author;Date;Content;Attachments;Reactions;
"206445134122844170";"Slyris#2880";"20-Jul-19 02:35 PM";"Ah yeah";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:35 PM";"maybe sometimes i used an int32_t temporarily";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:35 PM";"i would use bitfields but those seem to cause cross platform issues";"";"";
"206208358141657088";"Doom#9021";"20-Jul-19 02:36 PM";"Yep I saw a few `uint32_t`s that could be `bool`s";"";"";
"206208358141657088";"Doom#9021";"20-Jul-19 02:36 PM";"Also, I think using the plain `bool` type would be easier on the eyes than using `uint8_t` :p";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:36 PM";"for now, style and minor stack usage issues are not critical, bugs like i == vs i = are!";"";"";
"206208358141657088";"Doom#9021";"20-Jul-19 02:37 PM";"Sure !";"";"";
"206445134122844170";"Slyris#2880";"20-Jul-19 02:37 PM";"https://github.com/jl777/libnspv/blob/jl777/src/tools/nSPV_utils.h#L190 str can be const here";"";"";
"206445134122844170";"Slyris#2880";"20-Jul-19 02:38 PM";"but not critical too";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:38 PM";"i have historically had many compiler battles with const and large codebases";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:38 PM";"i tend to not use const, even though readonly property is indeed very valuable to reduce memory overwrites";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:38 PM";"my solution is to not have any memory overwrite bugs üòÉ";"";"";
"206445134122844170";"Slyris#2880";"20-Jul-19 02:38 PM";"Since is not critical ^^'";"";"";
"206445134122844170";"Slyris#2880";"20-Jul-19 02:39 PM";"im supposing for function like: https://github.com/jl777/libnspv/blob/jl777/src/tools/nSPV_utils.h#L169

you dont want to use `alnum()`";"";"";
"206445134122844170";"Slyris#2880";"20-Jul-19 02:39 PM";"Because you dont want any extra include";"";"";
"206445134122844170";"Slyris#2880";"20-Jul-19 02:40 PM";"that can increase compile time ?";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:40 PM";"the fewer external code the better";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:40 PM";"especially for simple things that are easy to just write from scratch";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:41 PM";"100% compatibility and no chance of ending up on a system that doesnt have it and having to then support dual ways of doing it";"";"";
"206445134122844170";"Slyris#2880";"20-Jul-19 02:41 PM";"okok, i try to spot critical things so now";"";"";
"455741312273219595";"jl777c#5810";"20-Jul-19 02:42 PM";"this is just 2 days old, so still very early in the cycle";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Jul-19 07:30 PM";"Thanks for tagging me James üòÉ";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Jul-19 07:30 PM";"I woild like to use this as a lib and make a golang wrapper around this lib, and use those in my go code.";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Jul-19 07:31 PM";"Will be cimeing here for help as I progress.  Been already keeping eye on git commits. Very exciting! üòÄ";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:41 AM";"got spend api working, along with notarization validation. just need to add the merkleproof check and it will be feature complete. as fast as the komodo nSPV=1 was, ./nspv is faster. it is instant to boot, login and you can spend within a few seconds";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:45 AM";"at the bottom of nSPV_superlite.h is the api parser where you can get the naming of all the JSON fields, the testvectors has examples of most all of them. even the mempool functions seem to work, so that means you can get realtime indications";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:45 AM";"it still uses a single threaded model, but all commands other than spend are pretty fast";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:46 AM";"during this port to libnspv, found several bugs which i also fixed on the komodo nSPV side";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:47 AM";"so we now have 2 nSPV superlite clients, one via nSPV=1 with komodod and one with ./nspv (KMD, ILN, NSPV)";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:48 AM";"i will add a way to get more coins than the fixed list supported later this week. would be nice to get a list of bugs to fix in both the nSPV clients. it feels almost beta quality already, but really needs others testing it than me. also osx and windows builds, they might even work";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:50 AM";"plz make issues in libnspv branch for any issue, even for the nSPV=1 mode in komodod";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:53 AM";"you should be able to run all the differnet ./nspv COIN in parallel. i dont have rpcport customization yet, but will also add that so you can run many nodes for the same coin on a single node. code size bloated to 300kb";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:55 AM";"time from git clone to autogen.sh, ./configure, make is about a minute";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 06:11 AM";"i have the 10 fullnodes running for KMD, ILN and NSPV. will be offline rest of the day";"";"üëç (3),üÜí (2),KMD (3)";
"365714438864633856";"dukeleto#7326";"22-Jul-19 09:49 AM";"Latest FSM merged into HUSH3 and it seems happy with all nSPV changes. I know that it's not enabled, but it's still a nice very light test of the nspv code";"";"";
"365714438864633856";"dukeleto#7326";"22-Jul-19 09:49 AM";"`nLocalServices 70000005 1, 1`";"";"";
"365714438864633856";"dukeleto#7326";"22-Jul-19 09:50 AM";"@jl777c i can't prove it, but i saw a few tiny changes to ccenable in the latest FSM merge, and I wonder if that had something to do with my sync issues before. In any case, everything is happy and HUSH3 is in sync with latest FSM";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 10:27 AM";"FSM has relatively recent nSPV, so it is active and nSPV clients would be able to work";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:44 PM";"@gcharang can you document the api calls for libnspv in superlite mode? most should be self explanatory, just clone my libnspv repo, automake.sh, configure, make, ./nspv KMD";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:44 PM";"README.md has some info at the bottom of page";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:53 PM";"@grewalsatinder can you run nspv on your computer and test to see if you can issue commands via browser";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:54 PM";"i think http://127.0.0.1:port/?{""method"":""getinfo""}";"";"";
"455741312273219595";"jl777c#5810";"22-Jul-19 05:54 PM";"it might work";"";"";
"423176312354635779";"gcharang#6833";"23-Jul-19 03:09 AM";"@jl777c on it";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 04:45 AM";"@jl777c awesome! will test and be back üôÇ üëç";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 04:48 AM";"on Mac it failed to compile";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 04:49 AM";"@jl777c https://pastebin.com/Y0DZysu9";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 04:49 AM";"Mac compile log";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 04:49 AM";"will test on linux in a bit";"";"";
"423176312354635779";"gcharang#6833";"23-Jul-19 05:32 AM";"@jl777c @TonyL 
how to specify userpass to the nspv binary?";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 06:18 AM";"@jl777c tested on linux. getinfo command worked perfect! üòÉ";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 06:25 AM";"tested login with wif, works.... still testing";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 07:37 AM";"install libsodium";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 07:37 AM";"that is what the error says";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 07:37 AM";"userpass is not implemented yet";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 07:38 AM";"so from browser you can issue commands?";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 07:38 AM";"i guess a simple test page with forms and buttons is possible?";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 07:39 AM";"i can then return that content from http://127.0.0.1:1233";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 07:39 AM";"or whatever the port is";"";"‚úÖ (1),üíØ (1)";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 12:54 PM";"@jl777c which branch should I be using on Mac?";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 12:54 PM";"jl777 branch or beta ?";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 12:55 PM";"maybe we do things in dev?";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 12:55 PM";"no, I'm trying to just compile libnspv on Mac again";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 12:55 PM";"installed libsodium";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 12:56 PM";"all branches are pretty much in sync";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 12:57 PM";"okay";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 12:57 PM";"jl777 is bleeding edge";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 12:57 PM";"gonna try compiling dev branch";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 12:57 PM";"the others are snapshots of what seems to be stable";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 01:00 PM";"cool! yes, it works perfectly fine on Mac as well. compiled dev branch and issued getinfo command  for KMD to confirm it works fine.";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 01:00 PM";"will continue in the morning.";"";"";
"347922216429813760";"grewalsatinder#9653";"23-Jul-19 01:01 PM";"thanks for help üôÇ üëç";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:07 PM";"can anybody try to build on windows?";"";"";
"365714438864633856";"dukeleto#7326";"23-Jul-19 01:26 PM";"Can somebody explain how an existing chain like HUSH3 can start to use/test nSPV stuff? Is there a newbie guide? I have been trying to keep up, but I have failed";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:30 PM";"start with the README.md";"";"";
"365714438864633856";"dukeleto#7326";"23-Jul-19 01:30 PM";"in which repo? :abusedsmily:";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:31 PM";"it should have all info needed to bootstrap a new nSPV nodes";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:31 PM";"libnspv repo";"";"";
"365714438864633856";"dukeleto#7326";"23-Jul-19 01:31 PM";"https://github.com/jl777/libnspv";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:31 PM";"@grewalsatinder please rebuild osx version with latest dev branch, i tried to fix all the warnings";"";"";
"365714438864633856";"dukeleto#7326";"23-Jul-19 01:33 PM";"is enabling nSPV on an existing mainnet a consensus change?";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:34 PM";"no";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:34 PM";"you need at least one nSPV fullnode";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:34 PM";"you can use that one as a seednode";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:34 PM";"update the coins file appropriately and then ./nspv HUSH3 will be a superlite client";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:35 PM";"~/src/tools/testvectors shows how to submit api requests";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:35 PM";"it is quite a simple model: login, spend, broadcast";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:36 PM";"with getinfo, listunpent being useful";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:36 PM";"also getnewaddress";"";"";
"365714438864633856";"dukeleto#7326";"23-Jul-19 01:43 PM";"@jl777c thank you, that explains a lot. Very excited for HUSH to spread the good word of nSPV";"";"";
"365714438864633856";"dukeleto#7326";"23-Jul-19 01:44 PM";"I think it's pretty amazing that it's not a consensus change, and that means adoption will come very fast";"";"üí™ (1)";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:50 PM";"just run a few nodes with FSM branch, use them as the ""nSPV"":""<ipaddr>, ..."" in the coins file";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:51 PM";"then nSPV client can ""login"" and spend funds in seconds";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:51 PM";"you can even make requests via http://127.0.0.1:port/?{""method"":""getinfo""}";"";"";
"455741312273219595";"jl777c#5810";"23-Jul-19 01:51 PM";"in the browser";"";"";
"423176312354635779";"gcharang#6833";"24-Jul-19 07:10 AM";"as port 20267 was used in the testvectors file, I thought that was the default port
started it like this to make it work with that port
```
./nspv KMD -p 20267
```";"";"";
"455741312273219595";"jl777c#5810";"24-Jul-19 07:10 AM";"the port is whatever the port is";"";"";
"455741312273219595";"jl777c#5810";"24-Jul-19 07:11 AM";"each coin has a default rpc port";"";"";
"455741312273219595";"jl777c#5810";"24-Jul-19 07:11 AM";"the testvectors are mostly for NSPV chain, some for ILN";"";"";
"455741312273219595";"jl777c#5810";"24-Jul-19 07:11 AM";"use 7771 for KMD";"";"";
