AuthorID;Author;Date;Content;Attachments;Reactions;
"450158653819846656";"blackjok3r#0000";"30-May-18 11:54 PM";"Morning guys. Do mining/seed nodes need update. Also @libscott the seednode list you are using is wrong, but none of those nodes are up anymore so should not affect things.";"";"";
"450158653819846656";"libscott#0000";"30-May-18 11:55 PM";"hi blackjok3r, thank you, yea sometimes it's getting stuck since there's not alot of seeds up";"";"";
"450158653819846656";"blackjok3r#0000";"30-May-18 11:56 PM";"one sec, I have 2 seeds, its mining like 2.5chains per core, so it could be struggling a little bit.";"";"";
"450158653819846656";"libscott#0000";"30-May-18 11:56 PM";"does this mean that trying to generate a proof for an old block will make a merkle branch with 200k nodes?";"";"";
"450158653819846656";"blackjok3r#0000";"30-May-18 11:56 PM";"`195.201.167.37` `195.201.167.38`";"";"";
"450158653819846656";"blackjok3r#0000";"30-May-18 11:57 PM";"all 64 chains are on those servers. I will update them now";"";"";
"450158653819846656";"blackjok3r#0000";"30-May-18 11:57 PM";"maybe I need to split the mining a little bit more. But blocks seem to be flowing at a steady rate.";"";"";
"450158653819846656";"libscott#0000";"30-May-18 11:57 PM";"am i still using the 4096 branch?";"";"";
"450158653819846656";"blackjok3r#0000";"30-May-18 11:58 PM";"momo is there now";"";"";
"450158653819846656";"blackjok3r#0000";"30-May-18 11:58 PM";"has first seed and `mineassets` and `sync_assets` changed to cc=3";"";"";
"450158653819846656";"libscott#0000";"30-May-18 11:58 PM";"or is that because the ccid will push it up to 200k... right that makes more sense";"";"";
"450158653819846656";"jl777#0000";"30-May-18 11:59 PM";"@SHossain: updated komodod jl777 and dev branch with some fixes for new MoMdepth encoding";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:00 AM";"@@libscott the reason i merged it in is that the notarizatoin OP_RETURN parsing is categorizing things as notarizations with MoM data or with MoM data and MoMoMdata";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:00 AM";"so it would break the parsing to put it into the MoMoM data what is a forward notarization";"";"";
"450158653819846656";"shossain#0000";"31-May-18 12:00 AM";"ok. using komodod from your repo now";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:01 AM";"certainly it could be fixed, but it was a painful debugging to get everything lined up properly and parsed. overloading MoMdepth is ugly, but doesnt affect the parsed data size for the different types of notarization";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:02 AM";"@@SHossain it could be you need to wait for @libscott to rebase, not sure if it will create compatible notarizations using my branch, but at least we can verify that it notarizes properly with the CCid.3 detected and that the getinfo call updates with the right notarization data without crashing";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:02 AM";"then when @libscott rebases, i think it has a chance of working the full cycle";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 12:04 AM";"Ok. I wont update miners until this has been merged.";"";"";
"450158653819846656";"libscott#0000";"31-May-18 12:05 AM";"ah ok I have to do rebase... 1 sec";"";"";
"450158653819846656";"libscott#0000";"31-May-18 12:05 AM";"ok so in that case I can remove the ccid from MoMoMdata too right? jl777";"";"";
"450158653819846656";"shossain#0000";"31-May-18 12:05 AM";"ok. will test your repo before i am off to sleep. komodo compiling now";"";"";
"450158653819846656";"shossain#0000";"31-May-18 12:07 AM";"using jl777 branch";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:07 AM";"@@libscott you can certainly remove the lower bits of CCid if you want, but I think we will need the upper bits of CCid for the feature toggling";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:08 AM";"it seems we are very close to a full MoMoM notarization!";"";"";
"450158653819846656";"libscott#0000";"31-May-18 12:08 AM";"we have what was previously MoMoMdepth for that";"";"";
"450158653819846656";"libscott#0000";"31-May-18 12:08 AM";"4 empty bytes after MoMoM";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:08 AM";"ok, as I said MoMoMdata is totally up to you";"";"";
"450158653819846656";"libscott#0000";"31-May-18 12:09 AM";"just wanted to check that ccid will be there next to MoMdepth in forward and backward notarisations";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:10 AM";"the lower 16 bits will be in the upper 16 of MoMdepth, yes it is a fixed space allocation for both forward and backward notarizations";"";"";
"450158653819846656";"libscott#0000";"31-May-18 12:11 AM";"👍";"";"";
"450158653819846656";"shossain#0000";"31-May-18 12:18 AM";"using jl777 branch of komodo and iguana";"";"";
"450158653819846656";"shossain#0000";"31-May-18 12:18 AM";"exchanges loop.(PAX)
02a4a6c21b41a3903ef9ca37617d1b93fe74c9b5d5cc72d67b4e3524981f334acd DPOW with pubkey.(02a4a6c21b41a3903ef9ca37617d1b93fe74c9b5d5cc72d67b4e3524981f334acd) RFUN8XezmmZt47pzVmoz7aN5LtFNV9pyuj.valid1 TXSCL -> KMD RFUN8XezmmZt47pzVmoz7aN5LtFNV9pyuj.valid1, num.1 freq.2 minsigs.2 CCid.3
{""result"":""success"",""tag"":""12425201160372632994""}
02a4a6c21b41a3903ef9ca37617d1b93fe74c9b5d5cc72d67b4e3524981f334acd DPOW with pubkey.(02a4a6c21b41a3903ef9ca37617d1b93fe74c9b5d5cc72d67b4e3524981f334acd) RFUN8XezmmZt47pzVmoz7aN5LtFNV9pyuj.valid1 TXSCL000 -> KMD RFUN8XezmmZt47pzVmoz7aN5LtFNV9pyuj.valid1, num.2 freq.2 minsigs.2 CCid.3
{""result"":""success"",""tag"":""9750163330060565151""}";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:20 AM";"I guess to make a valid MoMoM notarization a rebased momo is needed, so for now all we can do is wait for a notarization to happen and make sure getinfo call is sane";"";"";
"450158653819846656";"jl777#0000";"31-May-18 12:21 AM";"it looks like it did the notarization, so when it confirms it will print a new notarization and hopefully will parse the encoded CCid properly";"";"";
"450158653819846656";"shossain#0000";"31-May-18 12:24 AM";"2nd notarization happened in TXSCL chain";"";"";
"450158653819846656";"libscott#0000";"31-May-18 12:34 AM";"ok merged jl777/dev into momo";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 01:09 AM";"Miners are on latest momo branch. all chains are running and mining blocks.";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 04:58 AM";"smk762 Hey dude when you are around we need to suss our exactly what data you need for stats. I have docker-compose working locally for TxBlaster. I just left it running for over an hour and hand no faliures. I think running docker inside a VM is slowing it down a lot, as single TX's are not filling blocks. I'm not too concerned about this for now, as we can just start 2 containers as blasters to keep mempool full if one isn't enough.";"";"";
"450158653819846656";"smk762#0000";"31-May-18 04:58 AM";"Cool, ready to get real data linked up again, but at work for another 3 or 4 hrs.";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 04:58 AM";"no worries. I dont have any way of pushing it to the DB either for now. I am just testing with pushing it out to a text file.";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 04:58 AM";"Once @Mylo is around we can look at trying out the AWS DB.";"";"";
"450158653819846656";"smk762#0000";"31-May-18 05:21 AM";"Timestamp, chain name, block num, txcount, payment count, connected chain count.  That should cover the metrics im displaying.";"";"";
"450158653819846656";"smk762#0000";"31-May-18 05:22 AM";"Other stuff can be derived locally, or at source. Or I can drop a couple of the status bars.";"";"";
"450158653819846656";"smk762#0000";"31-May-18 05:24 AM";"Output at http://www.cryptocartography.io/txscl_vis/ shows the metrics currently tracked/derived";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:40 AM";"given timestamp, blockheight, txcount, block-size can you calculate payemnts?";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:40 AM";"```
{
  ""size"": 6027,
  ""height"": 858000,
  ""time"": 1527743831
  ""totaltx"": 5
}
```";"";"";
"450158653819846656";"imylomylo#0000";"31-May-18 06:43 AM";"Payments is reverse calculator method.
Otherwise can also send the raw transaction into fb";"";"";
"450158653819846656";"imylomylo#0000";"31-May-18 06:43 AM";"Db";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:45 AM";"Thats what I am trying to make it oputput but I am so noob at jq I am having a bit of trouble";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:45 AM";"No way sending the entire block or everyTX is a good idea";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:45 AM";"too mcuh data";"";"";
"450158653819846656";"imylomylo#0000";"31-May-18 06:45 AM";"I was reading AWS aurora product yesterday as an alternative for every tx but need to see ease of implementation";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:46 AM";"What format should the data I am pushing be in?";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:46 AM";"JSON or something else?";"";"";
"450158653819846656";"imylomylo#0000";"31-May-18 06:46 AM";"JSON yep";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:46 AM";"k cool. Do you know how to add a new value to a JSON using `jq`";"";"";
"450158653819846656";"imylomylo#0000";"31-May-18 06:47 AM";"I’m on mbl atm gimme 20m";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:47 AM";"every time I try it, it just adds the $totaltx exactly like that instead of reading the shell variable";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:47 AM";"ok";"";"";
"450158653819846656";"imylomylo#0000";"31-May-18 06:47 AM";"${totaltx} ?";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:47 AM";"I think i tried that and it was same.";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 06:48 AM";"because jq has to be in ''";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:15 AM";"I worked it out 😄";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:15 AM";"thanks 😄";"";"";
"450158653819846656";"webworker#0000";"31-May-18 07:15 AM";"you can pass in variables like this: `jq --arg jqvarname ""$bashvarname""  --arg jqvarname2 ""$bashvarname2"" '$jqvarname + $jqvarname2'`";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:15 AM";"the bottom part is what I am having issues with, because the shell variavles are inside '' they dont get read/";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:15 AM";"kind of... 
```    block=$(cat block)
    testing=$(echo $block | jq '{size, height, time}')
    totaltx=$(echo $block | jq '.tx | length')
    totaltx2=""{ \""totaltx\"": ${totaltx} }""
    assetchain=""{ \""ac\"": \""TXSCL220\"" }""
    echo $totaltx2
    echo $assetchain
    echo $testing
    jq '${testing} + ${assetchain} + ${totaltx}'
```";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:19 AM";"😞 still not working...";"";"";
"450158653819846656";"webworker#0000";"31-May-18 07:24 AM";"Does the final part need to be done in jq?";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:24 AM";"no";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:24 AM";"as long as it gives a single JSON.";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:26 AM";"the last line just hangs, if anyone can make that work it would be a lot of help. 🙂";"";"";
"450158653819846656";"webworker#0000";"31-May-18 07:27 AM";"`$(echo $testing | jq -arg totaltx $totaltx";"";"";
"450158653819846656";"webworker#0000";"31-May-18 07:30 AM";"`$(echo $testing | jq -arg totaltx $totaltx '.[0] | map({ ""totaltx"":$totaltx, ""ac"":""TXSCL220""})'`";"";"";
"450158653819846656";"webworker#0000";"31-May-18 07:31 AM";"i didn't test it";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:31 AM";"ok thanks will try it out";"";"";
"450158653819846656";"webworker#0000";"31-May-18 07:31 AM";"but should be something like that";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:36 AM";"`jq: error (at <stdin>:1): Cannot index object with number`";"";"";
"450158653819846656";"imylomylo#0000";"31-May-18 07:39 AM";"Gonna feed the cat, make a coffee and get onto something scaling related";"";"";
"450158653819846656";"webworker#0000";"31-May-18 07:40 AM";"`echo $json | jq --arg totaltx $tx '. += {""totaltx"":$totaltx, ""ac"":""TXSCL220""}'`";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:46 AM";"thanks man 😄";"";"";
"450158653819846656";"webworker#0000";"31-May-18 07:47 AM";"np, you can add the ac name as an arg in the same way";"";"";
"450158653819846656";"webworker#0000";"31-May-18 07:48 AM";"add `|tonumber` ^^";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:55 AM";"already did the assetname 😄";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:55 AM";"its done, adding it to script now and starting another blast. for now it just appends the JSON to a stats.txt every block";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 07:56 AM";"had to create another docker volume, hope it all works.";"";"";
"450158653819846656";"smk762#0000";"31-May-18 08:15 AM";"I have a function to derive payments from tx and blocksize, but it's only tuned to 20 or 100. Could tweak it with some more txblast tests.";"";"";
"450158653819846656";"jl777#0000";"31-May-18 08:16 AM";"estimates dont need to be perfect";"";"";
"450158653819846656";"jl777#0000";"31-May-18 08:17 AM";"can always do a bruteforce scan to fill in the actuals";"";"";
"450158653819846656";"jl777#0000";"31-May-18 08:17 AM";"after the blast";"";"";
"450158653819846656";"smk762#0000";"31-May-18 08:17 AM";"it should be pretty accurate if all chains are sending the same payments per tx. Gets a bit tricker with mixed blocks.";"";"";
"450158653819846656";"smk762#0000";"31-May-18 08:19 AM";"to slim down the data / calc load, are any stat bars I'm currently tracking that are not worth the effort?";"";"";
"450158653819846656";"smk762#0000";"31-May-18 08:20 AM";"or any missing worth adding in?";"";"";
"450158653819846656";"smk762#0000";"31-May-18 08:22 AM";"9176 Total transactions (last 5 min)
 173.96 Transactions per block (last 5 min) 
 509.77 Transactions per Asset Chain (last 5 min) 
 126657 Total payments (last 5 min) 
 2401.19 Payments per block (last 5 min) 
 7036.51 Payments per Asset Chain (last 5 min)
 88 / 1024 APIs connected
 58/ 88 Asset Chains Active (last 5 min)
 121 Blocks Solved (last 5 minutes)
 2.08 Blocks per Asset Chain (last 5 min)
 67.82 Payments per transaction (last 5 min)";"";"";
"450158653819846656";"smk762#0000";"31-May-18 08:22 AM";"Ignore the numbers (randomly generated)";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 08:30 AM";"You should be ok with those, except the API's connected... not sure how you would calculate this?";"";"";
"450158653819846656";"jl777#0000";"31-May-18 08:30 AM";"seems sufficient to gauge overall status";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 08:30 AM";"Also the way the TxBlaster is made, its pretty much totally imposible to mix up the diffrent transactions";"";"";
"450158653819846656";"blackjok3r#0000";"31-May-18 08:31 AM";"You pass the docker-compose file the outputs array for the TX that is sent, and after its run long enough you kill it.";"";"";
