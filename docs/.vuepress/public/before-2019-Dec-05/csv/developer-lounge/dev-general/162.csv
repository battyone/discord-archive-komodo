AuthorID;Author;Date;Content;Attachments;Reactions;
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:00 PM";"@Alright i will take your advice and use the HUSH ac for any internal changes but try to avoid even that";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:01 PM";"i could see changing some of our transaction size + block size values, but not drastically from what KMD has";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:01 PM";"i don't see changing crazy low level stuff";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:02 PM";"Hush is the R+D dept for private comms, I mostly want to work at RPC layer + above, but will modify things as needed";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 12:05 PM";"Did you decide on ac_ccenable values?";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 12:35 PM";"@jl777c the +0.0000000049999 thing works, you can close that";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 12:35 PM";"figured it wouldn't hurt, but I can live without it";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 12:39 PM";"@ComputerGenie 游놊游낖游닉  @dukeleto incase you're wondering
`int(<amount in coins>*100000000+0.0000000049999)`";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 12:40 PM";"`+0.0000000049999` says to me that there's something wrong with using the `int` function, but I no know py 游뱡游낗";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:41 PM";"@Alright use `ceil()`";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:42 PM";"floor(), int(), ceil()";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:42 PM";"learn them well";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:42 PM";"@Alright re: ccenable: https://github.com/MyHush/hush3/blob/duke/src/hushd#L25";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 12:44 PM";"lol at the IPs at the bottom 游땥";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 12:44 PM";"I still don't understand why you're that many decimal places out for an 8 place number 游땟";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:46 PM";"@Alright you gave me those, didn't want to lose them, that is where they went 游땎";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:47 PM";"@ComputerGenie 游놊游낖游닉 how rounding works at the edges of data size types in C is undefined, @jl777c probably knows a lot about this as well";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:47 PM";"this can cause catastrophic cryptography bugs, or rounding errors, and everything between";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:47 PM";"how the higher language binds to the C function `int()` matters";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:48 PM";"there are 5000 lines of code just to do that";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 12:48 PM";"numbers being stored as approximations something something something";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 12:48 PM";"`how rounding works at the edges of data size types in C is undefined`
he asked about py, so I missed a step in the conversation somewhere 游뱡游낗";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:48 PM";"doubles use IEEE standard for floating point for the most part";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:48 PM";"let's just speak of integers";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:48 PM";"and doubles have 15 decimals of precision";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:48 PM";"int32/int64 across all platforms";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:48 PM";"long int vs unsigned long int";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:49 PM";"int32_t and int64_t are 32 and 64 bits, with signed and unsigned variants";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:49 PM";"to map a double to an int involves a conversion process and ints dont have fractions, so the fractions fall on the floor";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:49 PM";"int() in Python does not work the same as int() in Perl because they are binding to the underlying C `int()` differently";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:49 PM";"Perl can use bigints behind the scenes, it tries to, which avoids a lot of this madness";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:49 PM";"the adding of 0.00000000499999 is making it go to the next satoshi in the case it is near the edge, within half a satoshi";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:50 PM";"i.e. forcing the rounding rule to be what you want";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:50 PM";"depending on how many conversions are involved, maybe the you might want to add up to 0.0000000099999999";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:50 PM";"yes, there are all sorts of rounding modes";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:50 PM";"ceil() might require not adding that weird epsilon";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:50 PM";"i find adding the fractional satoshi to a minimally processed double does the trick";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:50 PM";"for ceiling, which rounds up. and `floor()` rounds down";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:51 PM";"this trick from jl777 is pretty cool too";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:51 PM";"yes, but the question of if it is off by one needs to be known";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:51 PM";"adding a fractional satoshi doesnt require knowing if a satoshi was lost or not. if you do a ceil and indeed you didnt have any 0.000000000000001 residue then it wont end up being 1 satoshi too high";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:52 PM";"but how to know if there is some very small positive residue. ceil does not seem safe";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 12:52 PM";"is there a py function that takes `16.129` and turns it into `16.12900000` like tofixed in js or like `echo 123.4567 | awk '{printf ""%.8f\n"", $1}'`?";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:53 PM";""""".format()";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 12:54 PM";"so, again I ask:
why not use powers?";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 12:54 PM";"a float in py won't have tailing 0s";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:54 PM";"remember when I said, the minimum number of floating point operations?";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:54 PM";"power will have at least N floating point operations, one for each power";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:55 PM";"each one is like teleporting the rabbit. it might look identical when it comes out of the transporter, but maybe it is changed at the microscopic level";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:55 PM";"do it enough times and the rabbit ends up as a ball of fur...";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 12:56 PM";"iterate enough floating point operations and the various rounding errors can change surprisingly large values, though for doubles the number of operations is quite large. for single precision floats, it doesnt take much at all as they can barely represent numbers with sufficient precision, though there are times where using float are quite useful as it is usually 4x faster, but also losing precision is a good way to smooth out the high entropy noise";"";"游뱂 (1)";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:57 PM";"I took multiple classes in college about numerical algorithms";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 12:58 PM";"the math people go deep into studying the error of a given numerical algorithm";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 01:00 PM";"doubles were created so that average coders could ignore this stuff. But with financial math and satoshis, even the tiniest error matters. Which is why you should always do all math all the time with integers, and only render to decimal/float format when printing/etc. And beware of satoshi math and 32 bit datasizes, it's possible to overflow";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 01:06 PM";"yes doing a single string to double to int64_t will always be fine if adding half a satoshi";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 01:07 PM";"doing unknown number of floating point operations, will create a hard to quantify error (epsilon) and if that goes above 1 satoshi, likely it become non-deterministic as some CPU have built in rounding modes that are different from IEEE default";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 01:08 PM";"and if it error is more than 1 satoshi, how to know if to round up or down";"";"";
"423176312354635779";"gcharang#6833";"06-Apr-19 01:18 PM";"this might sound dumb, but can the value be turned to sats using string operations?
It might look like this in python and some pseudo code:
```py
value = 0.00123000
strValue = str(value)
array = strValue.split('.')
strip zeros from the end of array[1]
count number of zeros in the beginning of array[1]
then multiply it with appropriate power of 10 based on the number of zeros
add it to int(array[0])*10^8
this will be the value in satoshis
```";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 01:20 PM";"yes, that is how to do it purely";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 01:20 PM";"there are many many ways to microwave the rabbit";"";"游녨 (1)";
"365714438864633856";"dukeleto#7326";"06-Apr-19 02:10 PM";"@ComputerGenie 游놊游낖游닉 i would write `-ac_cbmaturity`for KMD  if there is a reasonable value that Hush could use to enable your solo zaddr pool idea";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 02:11 PM";"you never want dpow `lag` and `cbmaturity` to be near each other";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 02:17 PM";"@dukeleto cb maturity ""reasonable"" would be 1 or 2, imo
anything more than 2 would be because.........?";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 02:18 PM";"satoshi wanted there to be some time before miners could sell the newly mined coins";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 02:18 PM";"at least that is what I remember reading";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 02:19 PM";"so to trade at about the daily rate, rather than whatever instantaneous price changes. maybe he foresaw pool hopping";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 02:20 PM";"that only kinda holds value on day 1 and assuming the majority of miners are hopping
after day 1 and since most miners never move, it's a revolving 1:1 for the most part";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 02:26 PM";"we all make mistakes";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 02:27 PM";"well, from his perspective, I'm not sure I'd call it a mistake, per se; we have a completely difference space landscape now";"";"";
"455741312273219595";"jl777c#5810";"06-Apr-19 02:28 PM";"being able to forsee any and all things now and in the future is a requirement for an omniscient god";"";"PeepoThink (1)";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 02:29 PM";"游땥";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 02:44 PM";"`you never want dpow lag and cbmaturity to be near each other`
@dukeleto can you give me an example of what you mean by that where confirms vs rawconfirms doesn't avoid issues?";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 02:46 PM";"coinbase maturity is specified in raw confirmations";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 02:47 PM";"@jl777c what are the implications of only allowing notarized coinbase to be mature?";"";"游뱂 (1)";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 02:48 PM";"why not leave it to the pool/miner to decide if they are willing to take that risk?";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 02:50 PM";"seems to me that 'only allowing notarized coinbase to be mature' might get heavy in the code, no?";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 02:50 PM";"the purpose of coinbase maturity 100 is to prevent mined coins from being sold then reorged as far as I understand";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 02:51 PM";"if you check confirmations > 1";"";"";
"405011811511828481";"Alright#0419";"06-Apr-19 02:51 PM";"you're fine";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 02:51 PM";"right, that's my line of thinking too";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:05 PM";"@ComputerGenie 游놊游낖游닉 what is the core issue with trying to do a solo zaddr pool on hush?";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:05 PM";"i don't think i fully understand";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 03:06 PM";"not just the solo or the z
I'm trying to understand the non-market rational of holding them back";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 03:11 PM";"and *also* specifically the issue of what it takes on a solo zaddr pool to interleave payments from 100 minutes ago with current shields and all else";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:12 PM";"zaddr funds use an internal coinbase maturity of 10 blocks, i recently learned, because they ""anchor"" themselves to a previous shielded note";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:14 PM";"@ComputerGenie 游놊游낖游닉 put this in your hopium bong and smoke it, while you imagine how much of the ecosystem will need to change to support this: https://github.com/zcash/zips/blob/845ca0f8113bc73c42deb809cad3976d8cb7baa9/drafts/zip-str4d-shielded-coinbase.rst";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:14 PM";"which is fine, it's worth it";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 03:14 PM";"`zaddr funds use an internal coinbase maturity of 10 blocks`
then we have a broken issue somewhere, because PIRATE solo payments are shielded on 1 conf and sent out on 2";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:14 PM";"a re-org larger than 10 could potentially do something fishy to shielded notes";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 03:15 PM";"if the reorg happens, then notarizations are broken";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:17 PM";"i am talking about a re-org larger than 10 and smaller than dpow lag";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:17 PM";"lag can very likely be > 10";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:17 PM";"i am trying to find where I read Daira talking about this recently";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:18 PM";"this is the original gh issue: https://github.com/zcash/zcash/issues/2488";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 03:18 PM";"`lag can very likely be > 10`
even if it's 5x that, you're still only at 1 conf";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 03:19 PM";"notarization = conf 2";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 03:20 PM";"if a pool is silly enough to send it out on less than 2, then it's on them what it breaks in their wallet";"";"";
"474206298427097099";"ComputerGenie 游놊游낖游닉#7004";"06-Apr-19 03:20 PM";"游땥";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:21 PM";"you need to say dpowconf or rawconf to be clear 游땎";"";"";
"365714438864633856";"dukeleto#7326";"06-Apr-19 03:21 PM";"just ""conf"" means ""rawconf"" to me";"";"";
