AuthorID;Author;Date;Content;Attachments;Reactions;
"365714438864633856";"dukeleto#7326";"18-Mar-19 04:19 PM";"don't fuck with my regtest mode!!";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:19 PM";"I can add it abck lol";"";"";
"365714438864633856";"dukeleto#7326";"18-Mar-19 04:19 PM";"impressive that you ported BEAM stuff";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:19 PM";"trivial";"";"";
"365714438864633856";"dukeleto#7326";"18-Mar-19 04:19 PM";"yes, please add 48,5 back, for regtest mode. Everything else looks shiny";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:19 PM";"no worries.";"";"";
"365714438864633856";"dukeleto#7326";"18-Mar-19 04:20 PM";"this is awesome stuff, we can advertise spinning up AC's with the same params as lots of other coins with this";"";"üëç (1)";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:20 PM";"Will do that now and  start another parm test. Tomorrow I can clean ti up add magic values etc. Make sure it syncs chains";"";"";
"365714438864633856";"dukeleto#7326";"18-Mar-19 04:20 PM";"very impressed you did this so fast, and equihash code can be tricky stuff";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:20 PM";"progpow looks a LOT harder than this was btw üòâ";"";"";
"427867553784922113";"FishyGuts#5085";"18-Mar-19 04:22 PM";"!kmdtip @blackjok3r 0.999";"";"üê≥ (1)";
"499325474128920597";"KMD TipBot#0077";"18-Mar-19 04:22 PM";"";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 04:43 PM";"is it hard to support all N/K combos? as long as the miner will eventually find the block, its speed is not relevant";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:43 PM";"its extremly difficullt to support all possible combinations as the N and K in the hash functions are all constants";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:44 PM";"currently what they have done, is define an equihash class for each set of N&K";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:44 PM";"I just extended that in the end.... Maybe someone better than me at C++ could do it, but seems a pretty extensive rewrite of the equihash.h/cpp files";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:45 PM";"I started off with that goal ... and abandoned it for somehting that works.";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 04:47 PM";"i see, so a compile time #define change would be the best way for that";"";"üëç (1)";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:47 PM";"I got half way there with e BEAM port so that all values can be used with a slight code mod with the numbers";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 04:48 PM";"considering the issues here, it would be fine to support the most common ones as runtime forks and having 2 #defines to change at source level for totally custom N,K";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 04:48 PM";"with the caveat that the project must choose a N and K that is sane";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:49 PM";"yes, it would ahve been nice to be able to do them all in runtime to experiment with diffrent values easily... but it was too hard. I can add one of the defined classes as a define and try that now, dont see why it wouldnt work.";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 04:50 PM";"@dukeleto  regtest is working btw. added 48/5 back in, and ran a -regtest chain and it generates blocks as expected";"";"üåà (1)";
"520281592522997761";"jong#4037";"18-Mar-19 04:56 PM";"How many different blockchains whose tokens can be atomically swapped for Komodo tokens are running on Komodo today?";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 04:58 PM";"Or is it still in development phase?";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 05:00 PM";"there are 50 that are being notarized, an unknown number created as you can create a chain that nobody else knows about and it is still compatible with atomic swaps. as are most all the other bitcoin protocol coins";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 05:04 PM";"So you can send Komodo tokens to any of those custom chains and back? It uses Merkle trees for proof of burn?
It can work with Bitcoin blockchain?";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 05:06 PM";"If so,  how does the Bitcoin blockchain know when to credit the relevant wallet address when doing an atomic swap?";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 05:06 PM";"Since I assume Bitcoin does not know about Komodo";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 05:06 PM";"no, you are talking about cross chain burn/import. that is only within a specific cluster";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 05:06 PM";"atomic swap works with CLTV and standard bitcoin op codes";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 05:10 PM";"You mean a Komodo cluster?";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 05:11 PM";"I don't understand how it's possible that a chain which knows nothing about Komodo could do an atomic swap with Komodo. How does it know the exchange rate?";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 05:11 PM";"that is determined by both parties";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 05:11 PM";"https://www.youtube.com/watch?v=PeavTHz8LSA";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 07:08 PM";"@jl777c Thanks";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 08:51 PM";"I was reading the docs and came across this statement:

""On top of all that, Komodo Platform has developed a new scaling technology, called Multi-Chain Syncing, that practically resolves the blockchain scalability problem altogether. It makes extensive use of Merkle Trees to notarize transactions that take place on one chain onto every other chain in the Komodo ecosystem.""

When it says ""... to notarize transactions that take place on one chain onto every other chain in the Komodo ecosystem"", does it literally mean ""every other chain"" or ""any other chain""?
Because this should have implications for scalability.";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 08:52 PM";"It seems like the more Komodo chains there are, the more work it would be to notarize each transaction";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 08:53 PM";"Can someone clarify?";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 08:54 PM";"It makes it sound like every time a transaction is made on any specific chain, it will be added to every other chain";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 08:54 PM";"Which I know is not scalable";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 08:57 PM";"But maybe the Merkle tree is only computed once every so often (not for each transaction) then I can see how that could help with scalability, but then it would mean that there could poetentially be a delay from the moment a transaction is made on one chain before it is 'notarized' on all other chains.";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 08:58 PM";"the blockhash contains by reference all the transactions in a block";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 08:59 PM";"the MoM contains all the transactions in a range of blocks for a specific chain, merkle tree of merkle roots";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 08:59 PM";"then the MoMoM is combined from all the MoM from the different chains, so without any extra overhead, all the transactions are findable within the MoMoM";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 09:00 PM";"there is indeed a 2 notarization delay for the notarizations to be collected into MoMoM and back to the assetchain";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 09:10 PM";"Ok this sounds very good.

I have a question about the P2P network. It says that each blockchain in the Komodo ecosystem has their own infrastructure. Do nodes running different blockchains typically share some of the same code? In terms of actual code, what kind of overlap is there between the Komodo mainchain and other blockchains which are part of the Komodo ecosystem?

This article https://komodoplatform.com/komodos-sapling-upgrade-success/ seems to indicate that there may be some kind of shared networking layer.";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 09:12 PM";"^ Because I imagine that if each blockchain used completely different (... or forked a long time ago and heavily modified) code, then such an upgrade would not have been possible (without losing support for some of the blockchains).";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 09:13 PM";"Sorry for all the questions. I think is should be my last one.";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 09:14 PM";"most all the chains are runtime forks";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 09:14 PM";"For today ;p";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 09:14 PM";"meaning the same executable code, behavior (chain) changed via command line parameters";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 09:20 PM";"I see, so the other chains do not customize the original code. They're forks purely in terms of infrastructure, but logically they're the same. Is there a plan to have a mechanism for customizing some of these custom chains to provide additional features which are not available on the mainchain (or it's already possible?)?";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 09:20 PM";"nothing stops anybody from doing a normal fork";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 09:21 PM";"also, I expect a lot of chains to differentiate by making a custom CC unique to their chain";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 09:21 PM";"and there is an existing method to add chain specific CC";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 09:22 PM";"and the main chain is taking a conservative stance and letting the other chains get the cutting edge features";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 09:22 PM";"What is a CC?";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 09:23 PM";"oh, you dont know about the custom consensus modules?";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 09:23 PM";"Ah no I'm brand new here";"";"";
"455741312273219595";"jl777c#5810";"18-Mar-19 09:23 PM";"https://developers.komodoplatform.com/basic-docs/start-here/cc-overview.html#a-brief-review-of-bitcoin-script";"";"";
"520281592522997761";"jong#4037";"18-Mar-19 09:30 PM";"Thanks for answering my questions. I'm going to do more research but based on your answers, this seems like a promising project.";"";"üíØ (3)";
"405011811511828481";"Alright#0419";"19-Mar-19 12:03 AM";"@jong `Is there a plan to have a mechanism for customizing some of these custom chains to provide additional features which are not available on the mainchain` that's basically been the plan all along 
https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html
https://developers.komodoplatform.com/basic-docs/cryptoconditions/cryptoconditions-instructions.html";"";"";
"405011811511828481";"Alright#0419";"19-Mar-19 12:04 AM";"All of those listed will work right now, there are plenty more in development not documented yet";"";"";
"423176312354635779";"gcharang#6833";"19-Mar-19 06:14 AM";"@dukeleto @blackjok3r 
the newer rpc you guys have added to the daemon are all available in https://developers.komodoplatform.com/";"";"üëå (5),üåà (1),üòç (1),‚ù§ (2)";
"365714438864633856";"dukeleto#7326";"19-Mar-19 04:16 PM";"KMD docs have come a long way since I got involved!";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 03:02 AM";"when I coded my SuperMESH project I needed some system config files templating system which could correctly setup those config files.
I chose cfengine for that because it was so light weight for arm cpu.
if I will code the same project in Go, I will not need any 3rd party package for that. It has the templating engine what I need, and since it's not nodejs it is even more light weight. üòÉ";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 03:06 AM";"The Go gives me more excitement is the things I got to learn and practice with it. those little examples are nothing for everyday core/native programmer, but as easy to code those with Go is it gives great power to it's devs. I'm glad I paused on all kinds of other activities and only concentrating on just learning Go.";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 03:09 AM";"when it comes to core languages, I see I'm very slow to grasp them. a decade ago, I did not push my self enough to understand/practice C/C++, I was good at the basics, and got stuck at advanced things in it, and didn't try enough.";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 03:09 AM";"I feel the exactly same with Go. The difference now is I just keep pushing and trying out different way to understand where I stuck.";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 03:10 AM";"Think I sorted that issue I posted a week or so ago on stackoverflow üòÅ";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 03:15 AM";"I don't know when I'll be able to contribute good enough again to Komodo Ecosystem. It might take me time since I'm totally switching from JavaScript world to core/native language world. I'll however post some examples and tutorials and code library updates as I progress, so that would mean a tiny contribution this way or another.";"";"";
"482773501435052032";"Exile13#4458";"20-Mar-19 03:50 AM";"donde es , eh, notarizationas?";"";"";
"482773501435052032";"Exile13#4458";"20-Mar-19 03:51 AM";"looks like  pirates waiting on dPOW?";"";"";
"242635006516658197";"jorian#4555";"20-Mar-19 10:11 AM";"```komodo-cli z_sendmany ""RAddress"" '[{""address"":""zs1pzxxxxxxxxxxxxxxxxxxxxxxxxxxxxxk56"",""amount"":7}]'``` this returns: ```error code: -8
error message:
Sprout usage will expire soon
```";"";"";
"242635006516658197";"jorian#4555";"20-Mar-19 10:11 AM";"zs is not sprout, right?";"";"";
"420119978138664961";"CHMEX#0686";"20-Mar-19 10:54 AM";"Not sprout but z addresses are completly deactivated";"";"";
"420119978138664961";"CHMEX#0686";"20-Mar-19 10:54 AM";"Maybe update the text";"";"";
"242635006516658197";"jorian#4555";"20-Mar-19 10:58 AM";"oh wait, i remember lol";"";"";
"242635006516658197";"jorian#4555";"20-Mar-19 10:58 AM";"yeah, the text is confusing";"";"";
"242635006516658197";"jorian#4555";"20-Mar-19 10:58 AM";"need more coffee";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 11:02 AM";"I think all z_* APIs call should be conditionally disabled for Komodo, if possible and not a big task ü§î";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 11:02 AM";"@dukeleto do you think it's possible mate?";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 11:03 AM";"since Z tx are disabled on Komodo main network, thinking if it's possible to conditionally disable these APIs for just this.";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 11:03 AM";"and yet available for all other assetchains etc";"";"";
"347922216429813760";"grewalsatinder#9653";"20-Mar-19 11:03 AM";"@jl777c";"";"";
"420119978138664961";"CHMEX#0686";"20-Mar-19 11:04 AM";"some of the magic is here jorian
github.com/KomodoPlatform/komodo/blob/master/src/wallet/rpcwallet.cpp#L4093";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 12:00 PM";"hi all, let me try to ask here too... i am trying to figure out how exactly to calculate (average) kmd profit based on difficulty and variable hash rate?";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 12:00 PM";"currently i am trying to use formula like: input_hashrate / (current_net_difficulty * 8192) * block_reward * 3600 for hourly calculation, but comparing with some other calculators, my numbers are way too much lower...";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 12:01 PM";"this formula is based on zcash and as far as i understood `8192` is some work size on zcash, not sure if that's the same figure for KMD too?";"";"";
"423176312354635779";"gcharang#6833";"20-Mar-19 12:02 PM";"@–ë–û–ú–ë –û–ù ask in #talk-mining";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 12:02 PM";"@gcharang ok, will try, thanks!!";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 12:09 PM";"but let me ask you something else here... i'm fairly new in equihash world, but i have ton of experience with Cryptonote coins... do equihash coins have defined variables related to smallest possible coin unit like cn coins do (e.g. for monero - https://github.com/monero-project/monero/blob/master/src/cryptonote_config.h#L67)";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 12:09 PM";"or do they all have ""fixed"" 8 decimal points?";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 12:10 PM";"also, the block time... in CN coins, that's defined in the same file (https://github.com/monero-project/monero/blob/master/src/cryptonote_config.h#L80).... do equihash coins have it defined like that too?";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 12:12 PM";"and what about the block reward? does KMD have this info in any daemon communication methods? i have noticed that Pirate for example has it in `getinfo` response, but i cannot find it for KMD";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 02:01 PM";"@Deleted User but `getinfo` response from KMD and ARRR are pretty different... ARRR has some additional info there which i cannot fine anywhere in KMD responses...";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 02:01 PM";"e.g. KMD:";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 02:01 PM";"```$ komodo-cli getinfo
{
  ""version"": 2001526,
  ""protocolversion"": 170007,
  ""KMDversion"": ""0.3.3b"",
  ""notarized"": 1277120,
  ""prevMoMheight"": 1277120,
  ""notarizedhash"": ""00000000fa39a4666f696b4c9202bb4ba18abe94445c3200831b8312f97293be"",
  ""notarizedtxid"": ""d5c960578a8f506a0a82ec25f62fabcd90ea73fdd7b8c76d588e2e611b834112"",
  ""notarizedtxid_height"": ""mempool"",
  ""notarized_confirms"": 0,
  ""walletversion"": 60000,
  ""interest"": 0.00000000,
  ""balance"": 0.00000000,
  ""blocks"": 1277140,
  ""longestchain"": 1277140,
  ""timeoffset"": 0,
  ""tiptime"": 1553090379,
  ""connections"": 16,
  ""proxy"": """",
  ""difficulty"": 136305902.4657534,
  ""testnet"": false,
  ""keypoololdest"": 1549118858,
  ""keypoolsize"": 101,
  ""paytxfee"": 0.00000000,
  ""relayfee"": 0.00000100,
  ""errors"": """",
  ""name"": ""KMD"",
  ""sapling"": 1140409,
  ""p2pport"": 7770,
  ""rpcport"": 7771
}```";"";"";
"374741220406067201";"–ë–û–ú–ë –û–ù#6902";"20-Mar-19 02:01 PM";"and ARRR:";"";"";
