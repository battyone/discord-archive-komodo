AuthorID;Author;Date;Content;Attachments;Reactions;
"365714438864633856";"dukeleto#7326";"14-Feb-19 02:18 PM";"i tried to look at the code, but nothing was obvious";"";"";
"365714438864633856";"dukeleto#7326";"14-Feb-19 02:24 PM";"@jl777c another newbie question for you, what causes a xtn to be ""non-final"" ? I have read the code, but I am still trying to understand it";"";"";
"365714438864633856";"dukeleto#7326";"14-Feb-19 02:25 PM";"i read all the code of `CheckFinalTx` to understand how an xtn could fail to be ""final"", and my brain just kind of melted with all the details";"";"";
"365714438864633856";"dukeleto#7326";"14-Feb-19 02:26 PM";"in regtests, i am getting some odd behavior that I have tracked down to utxos I think should be ""finalized"" but are not ""final"" and don't count towards the total of `getreceivedbyaddress`, for instance";"";"";
"232679450301431808";"blackjok3r#3181";"14-Feb-19 02:55 PM";"The joys of komodods linker issues :D
Until I fixed the komodo-cli inclusion on all komodo_*.h files its was 100 times worse. 😄";"";"";
"455741312273219595";"jl777c#5810";"14-Feb-19 04:26 PM";"is nLockTime set? if in the future it will be nonfinal";"";"";
"455741312273219595";"jl777c#5810";"14-Feb-19 04:26 PM";"no idea about regtest anything";"";"";
"365714438864633856";"dukeleto#7326";"14-Feb-19 06:10 PM";"@jl777c i saw nLockTime==nBlockTime when i enabled this debug print `printf(""non-final txin seq.%x locktime.%u vs nTime.%u\n"",txin.nSequence,(uint32_t)tx.nLockTime,(uint32_t)nBlockTime);`";"";"";
"455741312273219595";"jl777c#5810";"14-Feb-19 06:11 PM";"pretty sure nLockTime needs to be > median time";"";"";
"365714438864633856";"dukeleto#7326";"14-Feb-19 06:11 PM";"i read some stuff about that";"";"";
"455741312273219595";"jl777c#5810";"14-Feb-19 06:21 PM";"i think there is something like pblock->GetMedianTime()";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"15-Feb-19 02:08 AM";"Hi @dukeleto I have some question on dPOW, since I just can't understand why sending the block hash to BTC can enable hash rate sharing";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"15-Feb-19 04:43 AM";"@josephnicholas GMT+8 the short answer is that it's because in order to erase that data from the Bitcoin chain, you would have to reorg the Bitcoin chain. So the data is secure by Bitcoin's hashrate.
Think of it similar to how Bitcoin performs a ""checkpoint"", but instead of hard-coding it like `https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp#L146-#L162` and requiring everyone to manually update nodes to get the new checkpoint, it's recorded live and in real-time on a secondary chain that requires a tremendous amount of hasrate to ""unrecord""";"";"";
"347922216429813760";"grewalsatinder#9653";"15-Feb-19 05:41 AM";"added cclib API calls to kmdgo.
adding cc rogue API calls now
https://github.com/satindergrewal/kmdgo";"";"";
"347922216429813760";"grewalsatinder#9653";"15-Feb-19 05:42 AM";"My target task was to make basic CC web app by 15th, I was focusing on Faucet.
But, now I'll just code the Rogue game CC in the web app.";"";"";
"347922216429813760";"grewalsatinder#9653";"15-Feb-19 05:42 AM";"I know I missed my target date :(
but took me a bit of time to learn the web side of Go, which I have nice understanding now to think a solution around it 🙂";"";"";
"347922216429813760";"grewalsatinder#9653";"15-Feb-19 05:43 AM";"My next target, the second was to make addresses manually by 28th, think I'll have to move that to next month end.
need to make Rogue game web app.";"";"";
"347922216429813760";"grewalsatinder#9653";"15-Feb-19 05:44 AM";"so, I target myself to complete the Web App by 28th Feb for Rogue game Web App, and if possible then portable Desktop App for Rogue CC game.";"";"💪 (5),🚀 (4),🔥 (2),🙏 (2)";
"544703121675386880";"josephnicholas GMT+8#5904";"15-Feb-19 08:02 AM";"Hello all, I got this build issue with FSM branch. 
```-c helpers/memenv/memenv.cc -o helpers/memenv/memenv.o
cryptoconditions/src/utils.c:25:30: fatal error: cryptoconditions.h: No such file or directory
 #include ""cryptoconditions.h""
                              ^
compilation terminated.
cryptoconditions/src/utils.c:25:30: fatal error: cryptoconditions.h: No such file or directory
 #include ""cryptoconditions.h""
                              ^
compilation terminated.```";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"15-Feb-19 08:02 AM";"was thinking of building installing https://github.com/libscott/libcryptoconditions";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"15-Feb-19 08:02 AM";"but it is failing in my mac";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"15-Feb-19 08:03 AM";"https://discordapp.com/channels/412898016371015680/463445317136809984/545588558467956746";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"15-Feb-19 08:07 AM";"@ComputerGenie 👴🏼📢 so what's the right branch to choose with latest and building CC implementation?";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"15-Feb-19 08:08 AM";"tbh, I don't know
I mainly stay on FSM but I don't do any CC so you can't really go by what I do";"";"";
"371114647052615681";"Mylo#8306";"15-Feb-19 08:41 AM";"FSM has latest bug fix and development of CC related stuff.
dev/beta have most of CC stuff, but there might be some minor incompatibilities with the newer FSM stuff - e.g. the assetsCC on-chain DEX has had some work done on it in the last 4-6 weeks.";"";"";
"365714438864633856";"dukeleto#7326";"15-Feb-19 09:39 AM";"@josephnicholas GMT+8 keep typing `make` a few times";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"15-Feb-19 09:48 AM";"@dukeleto thanks";"";"";
"365714438864633856";"dukeleto#7326";"15-Feb-19 09:49 AM";"it's something that happens when switching branches";"";"";
"365714438864633856";"dukeleto#7326";"15-Feb-19 09:49 AM";"the build system gets confused";"";"";
"357879631208120320";"! |🆉🅿🅾🅾🅻.🅲🅰| ! - crackers#9719";"16-Feb-19 12:08 AM";"Is sapling still a mining requirement since zaddr are gone?";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 05:08 AM";"@! |🆉🅿🅾🅾🅻.🅲🅰| ! - crackers if you're asking whether or not it needs v4 txs, yes it does";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:01 PM";"I'm trying to write a python script that stops a daemon then restarts it with different params. I have a problem in that the process keeps the RPC connection open for some time after it has stopped. Because of this, when I restart the daemon it fails with `Error: Unable to start HTTP server`

Does anyone know how I can force this connection to close or how much time it takes to close after the daemon has stopped?";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:04 PM";"`netstat` just show it as pid 0 and `TIME_WAIT` for some time after stopping the daemon";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:14 PM";"lot's of it 😅";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:14 PM";"hold on";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:16 PM";"```
def restart_daemon(chain, rpc_connection):
    params = get_chainparams(chain, rpc_connection)
    magic_check = rpc_connection.getinfo()['p2pport']
    print(magic_check)
    rpc_connection.stop()
    print('Waiting for daemon to stop, please wait')
    while True:
        try:
            rpc_connection.getinfo()
            continue
        except Exception as e:
            break
    
    komodod_path = sys.path[0] + '/komodod'
    blocknotify = '-blocknotify=' + sys.path[0] + '/staker.py %s ' + chain
    print(komodod_path)
    print(blocknotify)
    param_list = [komodod_path]
    for i in params:
       param_list.append('-' + i + '=' + params[i])
    param_list.append(blocknotify)
    #param_list.append('> /dev/null')
    time.sleep(200)
    proc = subprocess.Popen(param_list)
    #subprocess.run(param_list, shell=False, stdout=None, stderr=None, timeout=1)
    print('Waiting for daemon to respond, please wait')
    while True:
        try:
            rpc_connection.getinfo()
            break
        except Exception as e:
            continue
    print(param_list)
    return(0)
```
I believe I need to explicitly close the rpc_connection, but I'm not entirely sure";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:17 PM";"Ok there are two problems here though";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:17 PM";"this doesn't quite solve it because after killing the daemon, the connection sits at `TIME_WAIT` for some time";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:17 PM";"but thank you, this helps";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:19 PM";"Ah this isn't using requests";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:19 PM";"it uses slickrpc or something like that";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:19 PM";"could have a sleep";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:20 PM";"just testing that the concept I'm trying is viable, will touch up things like this before I make it public";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:21 PM";"should why?";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:21 PM";"I get that it's just constantly polling getinfo, but it's literally waiting to see when the daemon stops responding";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:21 PM";"so as soon as daemon doesn't respond, break";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:22 PM";"what is particularly dangerous about that?";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:23 PM";"read 2 lines above it";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:25 PM";"rpc_connection.stop()";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:25 PM";"is the same as `komodo-cli stop`";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:25 PM";"where is what defined?";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:26 PM";"https://github.com/barjomet/slick-bitcoinrpc";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:26 PM";"https://github.com/barjomet/slick-bitcoinrpc#example";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:26 PM";"```
from slickrpc import Proxy

bitcoin = Proxy(""http://%s:%s@127.0.0.1:8332""%(rpcuser, rpcpassword))
print(bitcoin.getblock(bitcoin.getbestblockhash()))
```";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:26 PM";"it's like this";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:28 PM";"rpc_connection  = Proxy(""http://%s:%s@127.0.0.1:8332""%(rpcuser, rpcpassword))";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:28 PM";"rpc_connection.stop() does definitely stop the daemon";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:29 PM";"it's literally the same thing as `komodo-cli stop`";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:29 PM";"man that's just how slickrpc works";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:29 PM";"I have no idea. it's a blackbox to me";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:29 PM";"```
from slickrpc import Proxy

bitcoin = Proxy(""http://%s:%s@127.0.0.1:8332""%(rpcuser, rpcpassword))
print(bitcoin.getblock(bitcoin.getbestblockhash()))
```
do you see this?";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:29 PM";"you don't need to define getblock or getbestblockhash";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:30 PM";"it's as simple as those 3 lines";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:30 PM";"rpc_connection.stop()";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:31 PM";"it's *literally* the same thing as `komodo-cli stop`";"";"";
"455741312273219595";"jl777c#5810";"16-Feb-19 06:31 PM";"connection stop is NOT stop rpc";"";"";
"455741312273219595";"jl777c#5810";"16-Feb-19 06:31 PM";"unless it is sending the stop rpc";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:31 PM";"that's what it is doing";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:31 PM";"same exact thing as `komodo-cli stop`";"";"";
"455741312273219595";"jl777c#5810";"16-Feb-19 06:32 PM";"it sounds like it is killing the tcp connection";"";"";
"455741312273219595";"jl777c#5810";"16-Feb-19 06:32 PM";"instead of letting the daemon shutdown cleanly";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:32 PM";"No, that's what i need to do, but can't figure out how to";"";"";
"455741312273219595";"jl777c#5810";"16-Feb-19 06:32 PM";"system(""./komodo-cli stop"");";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:32 PM";"it does stop the daemon cleanly. The problem is that the rpc connection used to stop it remains open";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:33 PM";"the connection still exists somehow even after daemon stops";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:33 PM";"so I think I need to explicitly close the connection my script is making, but I'm unsure how";"";"";
"455741312273219595";"jl777c#5810";"16-Feb-19 06:33 PM";"maybe there is a ""stop"" equivalent for the client";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:34 PM";"not sure what you mean";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:34 PM";"it's arbitrary";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:41 PM";"strange, I tried a sleep 200 and it still failed";"";"";
"405011811511828481";"Alright#0419";"16-Feb-19 06:47 PM";"Thanks for the help @Deleted User , I'll need to get back to this tomorrow though";"";"";
"272003866906722306";"TonyL#3577";"16-Feb-19 06:55 PM";"Hmm ```timeout=DEFAULT_HTTP_TIMEOUT``` is this method argument";"";"";
"272003866906722306";"TonyL#3577";"16-Feb-19 06:56 PM";"And `DEFAULT_HTTP_TIMEOUT = 30` define in start";"";"";
"272003866906722306";"TonyL#3577";"16-Feb-19 06:57 PM";"https://github.com/barjomet/slick-bitcoinrpc/blob/master/slickrpc/rpc.py#L45 it's possible to set timeout on Proxy object creation";"";"";
"272003866906722306";"TonyL#3577";"16-Feb-19 06:58 PM";"Is error that he using not correct pycurl variable?";"";"";
"272003866906722306";"TonyL#3577";"16-Feb-19 06:59 PM";"Aha seems like `pycurl.TIMEOUT` is what needed to be used here";"";"";
"272003866906722306";"TonyL#3577";"16-Feb-19 06:59 PM";"CONNECTTIMEOUT should be timeout on connection initialisation (timeout for connection attempt)";"";"";
"272003866906722306";"TonyL#3577";"16-Feb-19 07:06 PM";"We want timeout for already established connection but now it have timeout for connection establishment";"";"";
"272003866906722306";"TonyL#3577";"16-Feb-19 07:06 PM";"If I understand correct pycurl variables. Needs to be tested";"";"";
"272003866906722306";"TonyL#3577";"17-Feb-19 12:07 AM";"https://curl.haxx.se/libcurl/c/curl_easy_setopt.html read documentation my suggestions were not correct - these params not very related. I can't realise how client can take server port if server is on server port.  On my side after `rpc_connection.stop()` Proxy receiving `chainname daemon stops` message and komodod stop listen on p2p and rpc ports. Then nothing  stops me to start daemon again";"";"";
"272003866906722306";"TonyL#3577";"17-Feb-19 12:09 AM";"Possible to test this easy way actually:
open ipython - create proxy object
execute stop() via proxy object in ipython
can start daemon in cli without problems and Proxy object isn't dead";"";"";
"405011811511828481";"Alright#0419";"17-Feb-19 02:35 AM";"@TonyL thanks man, I'll have to try to dumb down my scripts and see if a simpler version works";"";"";
"405011811511828481";"Alright#0419";"17-Feb-19 02:35 AM";"if it has the same result, can you take a look at it and try running?";"";"";
"405011811511828481";"Alright#0419";"17-Feb-19 03:23 AM";"Ok, here is the simplest way to reproduce the problem. 

open 2 terminals, start komodod in one of them normally 
run this script in the other terminal https://pastebin.com/3zjihQih
wait for komodod to stop in the other terminal then run `sudo netstat -nputw | grep<rpc port>`
for me it outputs this 
```
tcp        1      0 127.0.0.1:52650         127.0.0.1:52574         CLOSE_WAIT  19116/python3       
tcp6       0      0 127.0.0.1:52574         127.0.0.1:52650         FIN_WAIT2   -        
```
even though the daemon is closed";"";"";
"405011811511828481";"Alright#0419";"17-Feb-19 03:41 AM";"reran (seemingly) the same script I was trying yesterday and it worked";"";"";
"405011811511828481";"Alright#0419";"17-Feb-19 03:41 AM";"wat.";"";"";
"405011811511828481";"Alright#0419";"17-Feb-19 03:41 AM";"😫";"";"";
"405011811511828481";"Alright#0419";"17-Feb-19 04:44 AM";"@Deleted User I added a sleep to the other while True and it works 😃";"";"👍 (1)";
"272003866906722306";"TonyL#3577";"17-Feb-19 09:28 AM";"@Alright I did exactly same way now - started stopping script in one terminal
it took ~5 seconds before I get `error: couldn't connect to server: unknown (code -1)
(make sure server is running and you are connecting to the correct RPC port)`
In other terminal
Then started chain in CLI without problems without script stopping";"";"";
"272003866906722306";"TonyL#3577";"17-Feb-19 09:28 AM";"Really interesting if it works different way on your machine";"";"";
