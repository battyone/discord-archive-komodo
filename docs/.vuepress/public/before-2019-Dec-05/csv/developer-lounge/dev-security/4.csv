AuthorID;Author;Date;Content;Attachments;Reactions;
"136447902238244864";"Andy#1801";"05-Jun-19 01:25 PM";"Having one of our js dependencies target our app is one of my worst nightmares.";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 01:25 PM";"Hope nobody loses their money in this one";"";"";
"455741312273219595";"jl777c#5810";"05-Jun-19 01:28 PM";"seems about 10% of addresses we could not save";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 01:30 PM";"damn";"";"";
"430818734530101248";"KomodoWorld#8282";"05-Jun-19 01:30 PM";"could those be people that moved the coins to a new address on their own? I just did with mine";"";"";
"430818734530101248";"KomodoWorld#8282";"05-Jun-19 01:30 PM";"even if I always used native";"";"";
"455741312273219595";"jl777c#5810";"05-Jun-19 01:32 PM";"we have a few cases where we know the attacker took the funds as the user was in transit and not online";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 01:35 PM";"I'm very interested in how the exact exploit looks like and what we as a wallet-developer-community can do to prevent those";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 01:36 PM";"When can we expect an announcement?";"";"üçª (1)";
"455741312273219595";"jl777c#5810";"05-Jun-19 01:40 PM";"i heard that a CVE will be published in a few hours";"";"";
"455741312273219595";"jl777c#5810";"05-Jun-19 01:40 PM";"after that, then we can disclose more details";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 01:57 PM";"ok good to hear";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 02:46 PM";"any more info on the vulneraility?";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 02:47 PM";"which libraries are affected?";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 02:47 PM";"oh hi @Andy";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 02:49 PM";"guess i just asked the same question as others";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 03:03 PM";"is this a backdoor type situation?";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 03:03 PM";"like with dash copay?";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 03:03 PM";"targetted at agama?";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 03:04 PM";"https://github.com/KomodoPlatform/Agama/blob/master/package.json looking at this mess it's like it was bound to happen";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:12 PM";"hi @Deleted User üòÉ";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:13 PM";"Dependency management is very difficult. I mean they use a lot of custom repos, which is actually good if they are the ones maintaining them";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:13 PM";"And very bad if it's just a random repo";"";"";
"455741312273219595";"jl777c#5810";"05-Jun-19 03:13 PM";"yes, agama was specifically targeted with an exploit in an upstream module";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:14 PM";"I've been thinking a lot about how we can make apps more secure and not (or less) vulnerable to those kind of attacks. But it's hard...";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:14 PM";"There is basically no way of protecting yourself unless you can ensure that your code is run BEFORE ANY OTHER CODE, which is just not the case in most situations...";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 03:14 PM";"how bout not using 10 different bitcoinjs forks when bitgo one supports most of alts out of box";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 03:15 PM";"also two sha256 modules when js does that already";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:15 PM";"Well yeah that is definitely true ;).";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 03:15 PM";"but that‚Äôs just my opinion";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:15 PM";"But we'll see where the hack originated";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:16 PM";"They said it's something specifically targeted at agama, so maybe `agama-wallet-lib`?";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:18 PM";"Last week I've gone down the rabbit hole of trying to secure our library and sadly I wasn't satisfied with the options we have. Is anyone else interested in starting a small group where we can discuss best-practices regarding dependency management, specifically in the crypto space?";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:19 PM";"It happened to bitpay, now to agama. We found a vulnerability that was luckily never exploited, but it affected bitpay, Ark, our wallet. So it's only a matter of time until it happens again.";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 03:23 PM";"I don't know who else is here, we have 3 wallets and the app from unko. I know that the maintainer of web3 would also be interested to talk about that.";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 04:15 PM";"@Andy what vulnerability?";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 05:23 PM";"can anyone ping me when the CVE is released? am developer of largest tipbot on discord rn and i'd like to know my users are not affected";"";"";
"455741312273219595";"jl777c#5810";"05-Jun-19 05:25 PM";"unless you used agama code, you are safe";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 05:27 PM";"oki";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 08:10 PM";"CVE released yet?";"";"";
"455741312273219595";"jl777c#5810";"05-Jun-19 08:11 PM";"havent seen it yet";"";"";
"455741312273219595";"jl777c#5810";"05-Jun-19 08:11 PM";"they did remove the offending package";"";"";
"455741312273219595";"jl777c#5810";"05-Jun-19 08:11 PM";"so if your code builds fine now, it means for sure you are not affected";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 08:12 PM";"@jl777c what was the package?";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:13 PM";"@Deleted User We found a bug in the native implementation of the `ionic-webview` plugin. To serve the content, they started an internal server. But this server is accessible to the whole operating system, so if you manage to start your own server before it, then someone could inject any code into your app. Granted, it's not that easy to exploit. But not only crypto-currency related apps were affected, we even found a microsoft app that was affected. Here's a small proof of concept video we made: https://www.youtube.com/watch?v=RR1r323otOQ";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:13 PM";"well that's hella hard to exploit";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:14 PM";"how is the port determined";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:14 PM";"for the app?";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:14 PM";"You will have to release an app to the app store, but the webserver keeps running for minutes after the app has been suspended";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:14 PM";"You can set it in the config, but everyone leaves it on the default";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:15 PM";"But the webserver is now gone from the plugin, so this is not an issue anymore";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:16 PM";"And it might seem like it's hard to exploit, but if you release some kind of ""companion app"" for bitpay, for example a contact book or something that then deeplinks into bitpay (not sure if they enabled it), then it would be very easy and completely invisible to the user.";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:16 PM";"true";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:17 PM";"But the apps we reported it to did fix it fast, so it was all good";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:17 PM";"That attack would also have to be planned really well, so I guess it's easier to just inject code into some random npm dependency üòÉ";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:18 PM";"Do you manually review (the code) of the dependencies you use?";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:18 PM";"I have always taken a look at the dependencies we use (author, if it's maintained, etc.), but you would also have to check the compiled code on npm to be completely sure";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:19 PM";"I'm now thinking about simply copy/pasting the dependencies directly into our app, at least the ones that don't have too many dependencies themselves";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:19 PM";"And then you just have to check updates manually";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:20 PM";"Ideally there would be a way to ""recursively"" add dependencies directly from github, so it would always pull the source rather than some minified version";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:21 PM";"But you would still have to review every sub dependency...";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:22 PM";"It's like, once you go down that rabbit hole, you'll probably only be doing dependency review the whole day. But especially in our field it is getting more and more important.";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:24 PM";"Anyway, I'm curious how this attack looked like exactly, then we can think about how we can protect ourselves from it in the future.";"";"üíØ (1)";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:24 PM";"i don't really hhave many dependencies";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:25 PM";"Have you checked how many you have in total (including sub-dependencies)?";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:25 PM";"i use package lock etc";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:25 PM";"Can a package on npm not be changed once hit has been released? (a specific version)";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:26 PM";"well a version cannot be overriden i believe";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:26 PM";"And if then probably the hash would change in the package lock";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:26 PM";"use package lock and you will be stuck with the same versions, even on sub-modules";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:26 PM";"but then you still have to review the code that is hosted on NPM";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:27 PM";"i only use a custom fork of bitcoinjs-lib and bip32 for crypto operations";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:27 PM";"the scary part is that any package can just overwrite critical functions, even if you use your own libs for the critical functions";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:28 PM";"One could simply do `crypto.getRandomValues = () => { return 1 }` somewhere, and then your libs would probably use that...";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:28 PM";"scoping bro";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:28 PM";"lol";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:28 PM";"that doesn't work";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:28 PM";"really";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:29 PM";"it might be different in node";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:29 PM";"but in the browser you can overwrite window.crypto.getRandomValues and it is changed EVERYWHERE it is used";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:29 PM";"The only thing you can do is create a secure copy of that function at the beginning of your code, so in the case of an app in your index.html";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:29 PM";"i generated my seed outside of my app anyway";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:30 PM";"hopefully there was no code injected there üòâ";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:30 PM";"into my node repl?";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:30 PM";"dont htihnk so";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:31 PM";"yeah then it's probably pretty safe üòõ";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:31 PM";"(unless you distrust node + dependencies or your hardware RNG), but at some point you just have to trust something/someone...";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:31 PM";"true";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:32 PM";"There is an interesting TC39 proposal open that would solve this problem by introducing proper scoping, or ""realms"" into javascript: https://github.com/tc39/proposal-realms";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:33 PM";"well i'm working with node so i can just use child processes i guess";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:33 PM";"lucky you üòâ";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:34 PM";"I also thought about using WebWorkers, but guess what, someone can simply overwrite `window.WebWorker`...";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:34 PM";"hmm";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:34 PM";"i know discord locks window.localStorage somehow";"";"";
"456226577798135808";"Deleted User#0000";"05-Jun-19 09:35 PM";"see how they do that";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:35 PM";"Yeah you can use Object.freeze to make objects immutable (to some extent)";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:35 PM";"But then again, `Object.freeze = () => {}`";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:35 PM";"But I'll look into that";"";"";
"136447902238244864";"Andy#1801";"05-Jun-19 09:36 PM";"I assume they make a copy of that function somewhere in the beginning.";"";"";
"455741312273219595";"jl777c#5810";"06-Jun-19 07:51 AM";"https://blog.npmjs.org/post/185397814280/plot-to-steal-cryptocurrency-foiled-by-the-npm";"";"";
