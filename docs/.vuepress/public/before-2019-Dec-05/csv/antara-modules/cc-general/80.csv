AuthorID;Author;Date;Content;Attachments;Reactions;
"365714438864633856";"dukeleto#7326";"23-Aug-18 09:53 PM";"at least i fixed the 5000 lines of warnings about hashes mismatching üòÉ";"";"üòÇ (1)";
"365714438864633856";"dukeleto#7326";"23-Aug-18 09:54 PM";"i think the test suite uses combinations of CLI arguments that nobody has ever used";"";"";
"365714438864633856";"dukeleto#7326";"23-Aug-18 09:55 PM";"and it confuses some parts of the code. Stuff seems to work, so i just ignore that warning. that code doesn't understand that sometimes the filename is an absolute filename ( starting with / ) from the CLI, not a relative filename. Something like that";"";"";
"365714438864633856";"dukeleto#7326";"23-Aug-18 09:56 PM";"if you have a nice fix, go for it. For the other warning, i just turned it off in regtest mode, maybe the same should be done";"";"üëå (1)";
"365714438864633856";"dukeleto#7326";"23-Aug-18 09:57 PM";"if you want, wrap the code that makes that printout in `if ( Params().NetworkIDString() != ""regtest"" )`, and submit a PR üòÉ";"";"";
"272003866906722306";"TonyL#3577";"23-Aug-18 09:58 PM";"Great, I have a python tests mentor now üòÉ";"";"üòÉ (1)";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:01 PM";"any command line program to get these contracts running more smoothly?";"";"";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:01 PM";"at least auto propagation of rawtx?";"";"";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:03 PM";"@siu - Chainmakers As one of solutions to simplify live a lil bit: you can make an aliases like a 
```alias raw=""komodo-cli -ac_name=BRK sendrawtransaction""```";"";"üôè (1)";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:04 PM";"im not much of a coder... üò¶ sorry";"";"";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:05 PM";"i guess that is a python function, right?";"";"";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:05 PM";"It's a Linux alias - you assign some execution to some text call";"";"";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:05 PM";"So when you next time will call `raw` will be executed `komodo-cli -ac_name=BRK sendrawtransaction`";"";"";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:06 PM";"ohh";"";"";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:06 PM";"wow, that is nice... will try it";"";"üëç (1)";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:07 PM";"http://www.linfo.org/alias.html";"";"üòÄ (1)";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:08 PM";"```siu@T460:~/komodo/src$ alias raw=""komodo-cli -ac_name=BRK sendrawtransaction""
siu@T460:~/komodo/src$ raw 010000000230db7f33c2f3e0e8e928c7a53d9d090b15f5c68f3b32aad869dfece885633453000000007b4c79a276a072a26ba067a5658021039d966927cfdadab3ee6c56da63c21f17ea753dde4b3dfd41487103e24b27e94e81409a09ef6a2d713ef6662e1771b02c787644368c3e6f61200ea2048ceade9b4eee6db31b572d2f6f0fad2be268a48def712df5b0ef0586cf81eb148e86dcbbbc8ca100af038001e6a10001ffffffffaec5d23ef3aff615b8cca50d6484bfd08d001df6f99649637ef1c180fc5f6de102000000494830450221009541fcac1d703953b41f2ef78cbbb37ad752093802d04bd470d94a7d91a938700220718edbc8c87b0cc7be26c101fab92e5391d6be2ade928cfb9130eaab1d7aad3901ffffffff05f0ca052a01000000302ea22c80200095ece5eee67e1f313e7ba2d156c7617106cd52b75c93ed3fb110ff3fba6e998103120c008203000401cc00ca9a3b00000000302ea22c80200095ece5eee67e1f313e7ba2d156c7617106cd52b75c93ed3fb110ff3fba6e998103120c008203000401cc1227000000000000232103584dcd150c1b314f4ff7173ac39186cc1753f8dc948541c7abae084792d0ffedacde45357700000000232103584dcd150c1b314f4ff7173ac39186cc1753f8dc948541c7abae084792d0ffedac00000000000000006d6a4c6ae64246414b450000000027e8318775511d7aa20583015638b29019a4ad5d6ccb1c2a1c3a7e3ca69b5f40dbfa486725d80df24fe748ca2af8f4a966eb4b3bb2cab80f2ee9cd7c08ed7592000000000000000000000000000000000000000000000000000000000000000000000000
2c9d10f0e6490ac977fb93894c6f6a3eb7947833d64a4ca22b8c8271384e5d08
```";"";"üî• (1)";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:08 PM";"cool!";"";"";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:11 PM";"are you using insomnia?";"";"";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:11 PM";"it does make it a lot easier too";"";"";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:12 PM";"but it would be awesome to just execute `dicebet` and then get the win/lose result.";"";"";
"405011811511828481";"Alright#0419";"23-Aug-18 10:12 PM";"ü§î never actually used aliases, do you have to set them for each shell session?";"";"";
"405011811511828481";"Alright#0419";"23-Aug-18 10:12 PM";"I typically make one line scripts to do the same";"";"";
"405011811511828481";"Alright#0419";"23-Aug-18 10:13 PM";"```
#!/bin/bash
./komodo-cli -ac_name=BRK sendrawtransaction $1
```";"";"";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:13 PM";"";"https://cdn.discordapp.com/attachments/466507187842187264/482311423670747137/unknown.png";"";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:13 PM";"insomnia is great";"";"";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:13 PM";"@Alright you can declare it in ~/.bash_aliases";"";"üëç (1)";
"422858760898215937";"siu - Chainmakers#3920";"23-Aug-18 10:13 PM";"";"https://cdn.discordapp.com/attachments/466507187842187264/482311538846466050/unknown.png";"";
"405011811511828481";"Alright#0419";"23-Aug-18 10:14 PM";"good to know";"";"";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:14 PM";"@siu - Chainmakers I'm using POSTMAN usually for POST calls but this one looks cool as well";"";"";
"457211594137534465";"xRobeSx#5136";"23-Aug-18 10:15 PM";"you can also do things like `TADDR=‚ÄùyourAddress‚Äù` and then `$TADDR` to use it";"";"";
"457211594137534465";"xRobeSx#5136";"23-Aug-18 10:15 PM";"`./src/komodo-cli z_sendmany ""$TADDR"" ""[{\""amount\"": 1.0, \""address\"": \""$ZADDR\""}]""`";"";"";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:15 PM";"It's an environment variable";"";"";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:16 PM";"Important stuff )";"";"";
"457211594137534465";"xRobeSx#5136";"23-Aug-18 10:16 PM";"that's what that's called @TonyL ?";"";"";
"457211594137534465";"xRobeSx#5136";"23-Aug-18 10:16 PM";"environment variable üòÉ thanks learned something new ha";"";"üëç (1)";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:20 PM";"Is it something like you looking for?)) @siu - Chainmakers";"https://cdn.discordapp.com/attachments/466507187842187264/482313236897726484/unknown.png";"";
"365714438864633856";"dukeleto#7326";"23-Aug-18 10:35 PM";"I have been keeping track of bash alias in git for a few years now, if you want to see some crazy/old/weird aliases: https://github.com/leto/Util/blob/master/config/.bash/aliases.bash";"";"üôÄ (2)";
"272003866906722306";"TonyL#3577";"23-Aug-18 10:40 PM";"Nice collection @dukeleto";"";"";
"371114647052615681";"Mylo#8306";"24-Aug-18 02:18 AM";"damn...why'd i never bother with something like this!!  alias mentor!";"";"";
"232679450301431808";"blackjok3r#3181";"24-Aug-18 02:22 AM";"using a fair few alias's here aswell, one letter commands are great üòâ";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 03:57 AM";"`alias g=git` changed my life";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 05:08 AM";"@jl777c right now, only the first 8 chars of a plan name are used, the rest is ignored. So if a user/developer writes code for SOMEPLAN, SOMEPLAN1 and SOMEPLAN2,  all that code silently uses SOMEPLAN, which I imagine would be surprising and hard-to-debug to a newcomer. How do you feel about me adding error checking code, and returning an error immediately if plan names exceed 8 chars?";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 09:47 AM";"yes, good idea to limit plan len to 8";"";"üëçüèΩ (1)";
"455741312273219595";"jl777c#5810";"24-Aug-18 09:48 AM";"the txid is also used so the plan name is sort of a redundant shorthand but best to prevent this confusion";"";"";
"422858760898215937";"siu - Chainmakers#3920";"24-Aug-18 09:55 AM";"@TonyL that looks like what i would like to have";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 09:58 AM";"@Alright the behavior of the dice rpc calls are a bit different depending on if it is from the dealer or player";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 09:59 AM";"if you understand the entropy sources, it will make more sense. the dicebet includes the actual entropy value, so all know what it is. the diceentropy tx only the dealer knows. So only the dealer can do an instant dicefinish that completes the dicebet with win/loss";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 09:59 AM";"non-dealers can do a timeout claim, only after it is timed out";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 09:59 AM";"dicestatus without bettxid, invokes a special loop to dicefinish all that can be for the dealer";"";"";
"412323938782150658";"SHossain#0007";"24-Aug-18 10:13 AM";"https://docs.komodoplatform.com/cc/activate-cc-independent-chain.html";"";"üëç (3)";
"412323938782150658";"SHossain#0007";"24-Aug-18 10:13 AM";"Pinned a message.";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 03:36 PM";"@dukeleto Hi! My PR (I made one more commit today with Token CC tests) was merged to dev. Waiting for yours faucet fix ^^
Did you start with bet CC? I want to proceed to this one and afraid of conflicts? I'm thinking also about adding second node to test moments when you trying to cancel other people node, for cases when one pubkey create SC and second pubkey place bets and etc. Could you please advice what is the best way to implement it?";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 03:38 PM";"why not have bettestsT and bettestsD or some naming like that to keep things separated?";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 03:41 PM";"Yeah, sounds like a very good idea @jl777c";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 03:44 PM";"until we get a Tom also writing CC tests, we will be collision free";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 03:45 PM";"He'll be a T1 üòÇ";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 03:47 PM";"@TonyL don't wait on me, I was actually looking for the code in the `jl777` branch because that is what my `cctests` is branched from";"";"üëå (1)";
"365714438864633856";"dukeleto#7326";"24-Aug-18 03:49 PM";"i am about to grab your changes into my branch";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 03:49 PM";"@dukeleto Just thinking how to make a process of this `cryptoconditions.py` separating onto the `bettestsT` `bettestsD` `faucettests` and etc smooth";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 03:49 PM";"i have been submitting PR's to the jl777 branch";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 03:52 PM";"@TonyL start a new file, cryptoconditions_dice.py, it's probably a good time";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 03:53 PM";"Ok I'll make `cryptoconditions_dice_T.py` to avoid the collisions as JL adviced";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 03:53 PM";"i am not sure if that was a joke or not üòÉ";"";"üò≥ (1)";
"455741312273219595";"jl777c#5810";"24-Aug-18 03:54 PM";"lets use dev branch, instead of jl777";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 03:54 PM";"git is made to deal with this stuff, just that a bit of communication will help reduce unnecessary work";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 03:54 PM";"@jl777c sure, i can submit to dev";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 03:55 PM";"now the 1 million Release Candidate is out, jl777 will become the rapidly changing repo and dev the semi-stable one, likely weekly";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 03:55 PM";"makes sense";"";"";
"412323938782150658";"SHossain#0007";"24-Aug-18 04:24 PM";"i'll update my nodes to dev branch now";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 04:36 PM";"@jl777c https://github.com/jl777/komodo/pull/830";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 04:36 PM";"for some reason that is also showing tony's changes when I send the PR to dev";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 04:41 PM";"my changes were just adding some better error handling to dice and fixing a faucet test";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 04:42 PM";"i see why";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 04:43 PM";"#822 was merged into master";"";"";
"412323938782150658";"SHossain#0007";"24-Aug-18 04:45 PM";"BRK chain fully synced with dev branch from block 0";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 04:50 PM";"@dukeleto I've left some marks in my tests like a `have to add status to CC code!`. Could you please fix in contracts code? Or I can do it by myself by your commits analogy but review is appreciated since I'm afraid to brake something.";"";"";
"422858760898215937";"siu - Chainmakers#3920";"24-Aug-18 05:32 PM";"changing to dev branch";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 05:38 PM";"@TonyL you change the code and I can review";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 05:39 PM";"TLDR: use the ERR_RESULT() macro to put an error message into a json result";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 05:39 PM";"and if you are in the internals, assign to CCerror, like CCerror = ""this messed up""; , to make the error get used in json error results";"";"";
"365714438864633856";"dukeleto#7326";"24-Aug-18 05:39 PM";"you will see a common pattern in the code";"";"üëå (1)";
"272003866906722306";"TonyL#3577";"24-Aug-18 06:26 PM";"@dukeleto few .sh are missing atm in `/qa/pull-tester/`
`qa/pull-tester/rpc-tests.sh: line 6: /root/unit_tests_build/komodo/qa/pull-tester/tests-config.sh: No such file or directory`

UPD: Oh they are building, false alarm sorry";"";"";
"422858760898215937";"siu - Chainmakers#3920";"24-Aug-18 06:34 PM";"dev branch is not building for me";"";"";
"422858760898215937";"siu - Chainmakers#3920";"24-Aug-18 06:34 PM";"```cc1plus: error: unrecognized command line option ‚Äò-Wno-builtin-declaration-mismatch‚Äô [-Werror]
cc1plus: all warnings being treated as errors
Makefile:2995: recipe for target 'cc/libbitcoin_server_a-dice.o' failed
make[2]: *** [cc/libbitcoin_server_a-dice.o] Error 1
make[2]: *** Waiting for unfinished jobs....
mv -f test-komodo/.deps/komodo_test-test_coinimport.Tpo test-komodo/.deps/komodo_test-test_coinimport.Po
make[2]: Leaving directory '/home/siu/komodo/src'
Makefile:4482: recipe for target 'all-recursive' failed
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory '/home/siu/komodo/src'
Makefile:659: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1
siu@T460:~/komodo$ 
```";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 06:36 PM";"@siu - Chainmakers let me check. I'm building right now from `dev`";"";"";
"422858760898215937";"siu - Chainmakers#3920";"24-Aug-18 06:36 PM";"did a make clean and still get the error:";"";"";
"422858760898215937";"siu - Chainmakers#3920";"24-Aug-18 06:37 PM";"```Makefile:2995: recipe for target 'cc/libbitcoin_server_a-dice.o' failed
make[2]: *** [cc/libbitcoin_server_a-dice.o] Error 1
make[2]: *** Waiting for unfinished jobs....
mv -f .deps/libbitcoin_server_a-timedata.Tpo .deps/libbitcoin_server_a-timedata.Po
make[2]: Leaving directory '/home/siu/komodo/src'
Makefile:4482: recipe for target 'all-recursive' failed
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory '/home/siu/komodo/src'
Makefile:659: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1
siu@T460:~/komodo$ 
```";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 06:42 PM";"```c/dice.cpp: In function ‚ÄòUniValue DiceInfo(uint256)‚Äô:
cc/dice.cpp:821:9: error: ‚ÄòERR_RESULT‚Äô was not declared in this scope
         ERR_RESULT(""error"",""cant find fundingtxid"");
         ^~~~~~~~~~
Makefile:2995: recipe for target 'cc/libbitcoin_server_a-dice.o' failed
make[2]: *** [cc/libbitcoin_server_a-dice.o] Error 1
make[2]: *** Waiting for unfinished jobs....
mv -f cc/.deps/libbitcoin_server_a-rewards.Tpo cc/.deps/libbitcoin_server_a-rewards.Po
mv -f cc/.deps/libbitcoin_server_a-lotto.Tpo cc/.deps/libbitcoin_server_a-lotto.Po
mv -f cc/.deps/libbitcoin_server_a-fsm.Tpo cc/.deps/libbitcoin_server_a-fsm.Po
make[2]: Leaving directory '/root/unit_tests_build/komodo/src'
Makefile:4482: recipe for target 'all-recursive' failed
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory '/root/unit_tests_build/komodo/src'
Makefile:659: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1
```";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 06:42 PM";"i guess the new test code cant compile?";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 06:43 PM";"@dukeleto how to define ERR_RESULT";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 06:43 PM";"if it is in CCinclude.h all the CC contracts will see it";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 06:47 PM";"https://github.com/jl777/komodo/blob/dev/src/cc/dice.cpp#L19 I guess it's defined here";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 06:50 PM";"pushed fix";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 06:50 PM";"@dukeleto you are using 2 types of ERR_RESULT, please split to ERR_RESULT and ERR_RESULT2";"";"";
"272003866906722306";"TonyL#3577";"24-Aug-18 06:57 PM";"`dev` builded now. I guess it's better to move ERR_RESULT to CCinclude.h since all CC's will use it. 
I can do it in my next PR @dukeleto";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 06:58 PM";"but there are 2 forms of it, apparently";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 06:58 PM";"one with one parameter, another with 2";"";"";
"455741312273219595";"jl777c#5810";"24-Aug-18 06:59 PM";"that is why it didnt compile, so we need to standardize on which form to use, when and get them in CCinclude.h";"";"";
"405011811511828481";"Alright#0419";"24-Aug-18 08:03 PM";"BRK deded please update to latest jl777 and use 
`./komodod -ac_cc=1 -ac_name=ADUF -addressindex=1 -spentindex=1 -ac_supply=1000 -ac_reward=10000000000000 -addnode=195.201.20.230 -addnode=195.201.137.5 -pubkey=<PUBKEY>`";"";"";
