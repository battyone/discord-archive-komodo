AuthorID;Author;Date;Content;Attachments;Reactions;
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:26 PM";"But it was changed later?";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:26 PM";"its from verus commit ... maybe @jl777c  already changed part of it to get some things working ... my guess is its disabled elswhere we need to ask @miketout  why he disabled it";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:27 PM";"🤷";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:27 PM";"Yep, we need to know what was the idea.";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:28 PM";"But looking at upper code, the if isn't reached at all. The return is before and returns from function...";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:28 PM";"So it is the same as now...
```cpp
default:
            return(ProcessCC(cp,this, vparams, txTo, nIn));
            break;
```";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:29 PM";"the coin imports above were what led me there...";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:29 PM";"they wer just commented out";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:29 PM";"so non of my chains would sync";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:29 PM";"Yes, they are still";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:29 PM";"we have a diffrent fork... I think you can safly uncomment them there";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:30 PM";"but its wont help oracles sadly";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:30 PM";"👍";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:31 PM";"yes, that certainly explains coin migration not working!";"";"😅 (1)";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:31 PM";"but normal CC should be working";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:31 PM";"updated FSM branch";"";"👌 (1)";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:33 PM";"Basically, to avoid this kind of problems when working on opensource projects (or projects which have a lot of commiters) my practice is to create one squashed commit per change I'm working on, which I review when making PR. This way is much easier to trace changes which caused some problem, and maybe you can avoid commiting unwanted changes if you work on different fork that will contaminate other project....";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:33 PM";"yes, unfortunately in this case there were 500+ files that changed";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:33 PM";"this was clearlty sabotage :trollface:";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:34 PM";"😄";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:34 PM";"i tried to find and fix all such changes, but I missed a couple";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:34 PM";"my guess on the oracles CC behavior is an uninitialized variable";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:34 PM";"just merging it in was hell for me ... I started by remiving most of my code";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:34 PM";"that would explain the random behavior";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:34 PM";"i cant think of another theory that explains how it works, but it doesnt, unless it does behavior";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:35 PM";"@jl777c Well if it is uninitialized variable, then it is in something that affects all CCs. As the part that is failing is on spending and verifying signatures...";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:36 PM";"```
Reg pubkey: 077b01e7c6640ef59724386dd48562fe32cc1dd43d65d381f9f18cd73dee53d9 - RCiCz5FWiLLRi8ex1C4CKdyDTDgwLkxamv
AddToWallet fb6dfb683c63d3db01c8210b33f20f107e991ce2a616dfcfe24948289509a037  new
Reg pubkey: 077b01e7c6640ef59724386dd48562fe32cc1dd43d65d381f9f18cd73dee53d9 - RCiCz5FWiLLRi8ex1C4CKdyDTDgwLkxamv
AddToWallet fb6dfb683c63d3db01c8210b33f20f107e991ce2a616dfcfe24948289509a037  
UpdateTip: new best=00208c078f313020261c744bde2ea57785846919afa5c406eaf122ca424dcc9b  height=134  log2_work=13.022715  log2_stake=-inf  tx=144  date=2018-12-05 13:19:30 progress=1.007519  cache=0.0MiB(10tx)
AddToWallet fb6dfb683c63d3db01c8210b33f20f107e991ce2a616dfcfe24948289509a037  update
Reg pubkey: 077b01e7c6640ef59724386dd48562fe32cc1dd43d65d381f9f18cd73dee53d9 - RCiCz5FWiLLRi8ex1C4CKdyDTDgwLkxamv
Adding fixed seed nodes.
cc_verify error C
ERROR: CScriptCheck(): 2caa0065530875becf57e22912e95049660b73bac9f0855dff110244dc8be70b:1 VerifySignature failed: Script evaluated without error but finished with a false/empty top stack element
cc_verify error C
ERROR: CScriptCheck(): 2caa0065530875becf57e22912e95049660b73bac9f0855dff110244dc8be70b:1 VerifySignature failed: Script evaluated without error but finished with a false/empty top stack element
ERROR: AcceptToMemoryPool: ConnectInputs failed 2caa0065530875becf57e22912e95049660b73bac9f0855dff110244dc8be70b
```";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:36 PM";"I have traced to see if something changes while posting oraclesdata, but everything seems ok.";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:37 PM";"And basically, it works few times and then suddenly it decides not to work 😉";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 01:38 PM";"oracleslimiter";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:38 PM";"😛";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:38 PM";"one change miket made was to allow for data after the normal CC vout";"";"🤔 (1)";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:39 PM";"but for normal CC vout, this shouldnt cause an issue. unless the code to handle that has some bug";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:39 PM";"the idea was to be able to pass in variables to the CC vout, without changing the address generation";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:39 PM";"Yes, you mentioned that. Could that somehow afect it. Or maybe ot overlaped something in memory so sometimes it happens?";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:40 PM";"return cc_readFulfillmentBinary((uint8_t*)ffbin.data(), ffbin.size()-1);";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:41 PM";"if the size of the fulfillment changed, with padded data, it seems quite possible something is assuming incorrectly";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:41 PM";"i think the problem is very likely in this area, but it should exhibit itself before sapling as much as after sapling";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 01:41 PM";"```cpp
unsigned char msgHash[32];
    if (doHashMsg) sha256(msg, msgLength, msgHash);
    else memcpy(msgHash, msg, 32);

    if (!cc_secp256k1VerifyTreeMsg32(cond, msgHash)) {
        fprintf(stderr,""cc_verify error C\n"");
        return 0;
    }
```
Because it is failing on this if, could it be that something is not ok with msgHash? Maybe msgLentgth is not correct or value passed is not initialized?";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:44 PM";"yes, it could well be the cond is pointing to invalid length, something like taht";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 01:45 PM";"I guess we need to capture the details for the times it works vs the times it doesnt ,especially if it is for the same vout";"";"";
"422858760898215937";"siu - Chainmakers#3920";"05-Dec-18 01:58 PM";"which repo are we working on now?";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 02:22 PM";"I'm working on pirate repo as there I had sapling activated. But as @blackjok3r  said it has nothing to do with sapling, I can also try to reproduce it on jl777 FSM";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 02:23 PM";"Im my case it was definatly not spling related";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 02:23 PM";"as the code was flat out disabled ...";"";"";
"232679450301431808";"blackjok3r#3181";"05-Dec-18 02:24 PM";"I would try it on a non sapling chain though to at least narrow down what it could be.";"";"";
"272003866906722306";"TonyL#3577";"05-Dec-18 02:57 PM";"@jl777c Is there any simple solution for manual generating input for `oraclesdata` of Ihh datatype oracle and how valid  data input looks like?";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 02:58 PM";"manually generate it, just look at oraclefeed.c to see how it is done";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 02:58 PM";"just binary data";"";"";
"272003866906722306";"TonyL#3577";"05-Dec-18 03:01 PM";"Oh yep, looking trough oraclefeed code for a last 15 minutes - not understood yet";"";"";
"272003866906722306";"TonyL#3577";"05-Dec-18 03:01 PM";"Gonna look more 😃";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 03:01 PM";"Just a sec";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 03:03 PM";"get_oracledata function is fetching data from the chain, inside you have this which creates binary data:
```cpp
if ( (height= get_coinheader(refcoin,acname,&blockhash,&merkleroot,prevheight)) > prevheight )
        {
            for (i=0; i<4; i++)
                sprintf(&hexstr[i*2],""%02x"",(uint8_t)((height >> (i*8)) & 0xff));
            for (i=31; i>=0; i--)
                sprintf(&hexstr[8 + (31-i)*2],""%02x"",blockhash.bytes[i]);
            for (i=31; i>=0; i--)
                sprintf(&hexstr[8 + 64 + (31-i)*2],""%02x"",merkleroot.bytes[i]);
            hexstr[8 + 64*2] = 0;
            return(height);
        }
```";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 03:04 PM";"first 8 bytes are the height of the chain, than 64 bytes are blockhash and 64 are merkleroot.";"";"";
"272003866906722306";"TonyL#3577";"05-Dec-18 03:05 PM";"Oh I see, will try. Thanks  @Mihailo !";"";"";
"272003866906722306";"TonyL#3577";"05-Dec-18 03:15 PM";"Coool
```./komodo-cli -ac_name=SPLTEST oraclessamples e0181d32fbc4afc12cd8b1da095e433c7b980d35e02bd98c56a74ce90cb73133 a7d72392f7f016ac2167e39f1a1ce9c6d0a6df6dc2bf2ed000c4c97b659f2fd3 1
{
  ""result"": ""success"",
  ""samples"": [
    [
      ""0"",
      ""00000000ffffffff00000000ffffffff00000000ffffffff00000000ffffffff"",
      ""00000000ffffffff00000000ffffffff00000000ffffffff00000000ffffffff""
    ]
  ]
```";"";"";
"405011811511828481";"Alright#0419";"05-Dec-18 03:16 PM";"@TonyL that doesn't seem to be working properly";"";"";
"405011811511828481";"Alright#0419";"05-Dec-18 03:16 PM";"from my understanding of oraclessamples at least";"";"";
"405011811511828481";"Alright#0419";"05-Dec-18 03:16 PM";"`1` should only show the latest";"";"";
"272003866906722306";"TonyL#3577";"05-Dec-18 03:17 PM";"Yes it show only the latest entry and there is only one in this oracle";"";"";
"272003866906722306";"TonyL#3577";"05-Dec-18 03:18 PM";"In Ihh height, blockhash and merkleroot are separated in presentation";"";"";
"405011811511828481";"Alright#0419";"05-Dec-18 03:18 PM";"Ah, understood";"";"";
"272003866906722306";"TonyL#3577";"05-Dec-18 03:20 PM";"Oh I guess it's little endian because I've not planned this 0 😂";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 08:19 PM";"I have tried to reproduce cc_verify error on non activated sapling chain, but I'm unable...";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 08:19 PM";"So it seems that this error is only possible with sapling activated";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 08:23 PM";"can you duplicate and isolate it on the sapling activated?";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 08:24 PM";"it could be there are two different issues";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 08:24 PM";"sapling changes the tx serialization, and maybe the CC code depended on the old serialization";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 08:27 PM";"I can duplicate it, but cannot determine exact cause when it happens. Usually 2-3 oraclesdata are successful and then it throws cc_verify error";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 09:04 PM";"can you print out the details of the cc_verify cond to see the difference between the failure and success?";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 09:04 PM";"there is a way to convert a cond structure into JSON";"";"";
"455741312273219595";"jl777c#5810";"05-Dec-18 09:06 PM";"in cryptoconditions/eval.cpp (not cc/eval.cpp) functions like static void evalToJSON(const CC *cond, cJSON *code) {";"";"";
"424224648889106444";"Mihailo#5902";"05-Dec-18 11:23 PM";"I'll check it tomorrow. I was chasing msgHash today but end up with nothing...";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 11:39 AM";"I'm trying to convert cond to JSON but I get segmentation fault when doing evalToJSON.
```cpp
    json=cJSON_CreateObject();
    evalToJSON(cond,json);  
```";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 11:39 AM";"@jl777c can you point me to the code which allows data after CC that miket added?";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 11:53 AM";"This part is failing in secp256k1Verify:
```cpp
// Only accepts lower S signatures
rc = secp256k1_ecdsa_verify(ec_ctx_verify, &sig, visitor.msg, &pk);
if (rc != 1) return 0;
```";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 11:55 AM";"is it adding a CC sig in FinalizeCCTx?";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 11:56 AM";"i wonder if the sapling tx serialization changing affects the CC signing";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 11:59 AM";"so the visitor.msg must match what was signed.";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 11:59 AM";"in FinalizeCCtx:
                uint256 sighash = SignatureHash(CCPubKey(cond), mtx, i, SIGHASH_ALL, utxovalues[i],consensusBranchId, &txdata);
                if ( cc_signTreeSecp256k1Msg32(cond,privkey,sighash.begin()) != 0 )";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:00 PM";"that is what calculates the sighash which i believe needs to match the vistor.msg, if they are not matched then we isolated the cause and can dig into why it is different";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:00 PM";"consensusBranchId <- that value changes when sapling activates!";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:00 PM";"that could be a hint, i think it was 0 before";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:00 PM";"so if the old code assumed consensusBranchId is 0, it would fail after sapling activation";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 12:03 PM";"Ok, but why is it behaving that it sometimes work and sometimes not? If different value for consensusBranchId is used then it would fail all the time?";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:09 PM";"clearly something is misbehaving, if we understood it we would know more about it. at this point we need to find the crash point and work from there.";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:10 PM";"we cant make sweeping assumptions like "" If different value for consensusBranchId is used then it would fail all the time""";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:10 PM";"maybe some code paths set it properly based on the value of an uninitialized variable";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:10 PM";"maybe it is ok, at first but not after something updates internally";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:10 PM";"basically its random behavior means it can be almost anything";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:11 PM";"maybe it has been there all along and only sapling activation exposed it";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 12:11 PM";"Agree.";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:11 PM";"since there is a clear signature failure and we are generating the sign in finalizeCCtx, it at least allows us to see if the sighash is conflicting";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:11 PM";"i sure hope it is, as the alternative is getting into some real memory corruption scenarios";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 12:12 PM";"I have printed the value of consensusBranchId in every oraclesdata tx and it is the same: 1991772603";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 12:12 PM";"So at least it does not change";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 12:12 PM";"And after third data tx it failed.";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 12:13 PM";"Is this value for consensusBranchId strange? I do not know what is it for...";"";"";
"455741312273219595";"jl777c#5810";"06-Dec-18 12:13 PM";"well if sighash != msg, that isolates the problem, so let me know if that is the case";"";"";
"424224648889106444";"Mihailo#5902";"06-Dec-18 12:13 PM";"Ok";"";"";
