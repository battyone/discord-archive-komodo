AuthorID;Author;Date;Content;Attachments;Reactions;
"365714438864633856";"dukeleto#7326";"21-Nov-18 10:18 AM";"there is an qa/rpc-tests/addressindex.py but it hasn't been updated for KMD yet";"";"";
"365714438864633856";"dukeleto#7326";"21-Nov-18 10:19 AM";"it uses lot of addresses and privkeys, which need to be converted to be valid on KMD, then those tests will probably work";"";"";
"272003866906722306";"TonyL#3577";"21-Nov-18 11:10 AM";"@jl777c komodod from `jl777` branch crashing on my side after `faucetinfo` call:
```./komodo-cli -ac_name=TROLLT faucetinfo
error: couldn't connect to server: EOF reached (code 1)
(make sure server is running and you are connecting to the correct RPC port)```";"";"";
"272003866906722306";"TonyL#3577";"21-Nov-18 11:11 AM";"No errors in `debug.log` or daemon printouts";"";"";
"272003866906722306";"TonyL#3577";"21-Nov-18 12:00 PM";"Backtrace:
```Thread 9 ""zcash-httpworke"" received signal SIGFPE, Arithmetic exception.
[Switching to Thread 0x7fffe8ff9700 (LWP 18306)]
0x00005555557fe36a in AddFaucetInputs (cp=cp@entry=0x7fffe8ff8420, mtx=..., pk=..., total=total@entry=0, maxinputs=maxinputs@entry=0) at cc/faucet.cpp:149
149        threshold = total/maxinputs;
```";"";"";
"455741312273219595";"jl777c#5810";"21-Nov-18 12:34 PM";"ok, fixing";"";"";
"455741312273219595";"jl777c#5810";"21-Nov-18 12:37 PM";"updated";"";"";
"272003866906722306";"TonyL#3577";"21-Nov-18 02:52 PM";"Not crashing anymore 👍  With second node adding was able to repair faucet unit-tests";"";"";
"430818734530101248";"KomodoWorld#8282";"21-Nov-18 09:10 PM";"https://gist.github.com/awemany/619a5722d129dec25abf5de211d971bd this a proposed mechanism for 0conf tx on BCH, but not yet production ready. An automatic collateral that goes to the merchant in case of double spending. Another idea for a CC";"";"";
"455741312273219595";"jl777c#5810";"21-Nov-18 09:11 PM";"channels CC already solves this issue";"";"";
"430818734530101248";"KomodoWorld#8282";"21-Nov-18 09:14 PM";"yes but this doesn't require a channel with a specific recipient";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 06:54 AM";"At the moment bets on latest `jl777` seems kinda tricky, before there wasn't such behaviour:";"https://cdn.discordapp.com/attachments/466507187842187264/515057540976082946/unknown.png";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 06:54 AM";"It's pending for 10-15 seconds, then result can change on fly";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 06:56 AM";"So not sure how to fix auto-tests now because now dicestatus sometimes return loss on first call if bet actually won + very big timeout needed before `dicestatus` call";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:31 AM";"was looking around go implimentation of crypto-conditions, and came accross this github repo:
https://github.com/rfcs/crypto-conditions#implementations";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:31 AM";"it has links to
JavaScript
Java
Python
Go";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:31 AM";"Haskell
C";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:32 AM";"has anyone tested if these linked repos works with our cryptoconditions?";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:32 AM";"I'm not at the point where I can test go cryptoconditions package, but just curious to know if anyone tested other language library for our cryptoconditions implimentations";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:32 AM";"@Mylo @TonyL";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:34 AM";"oh just noticed C library is going to @libscott 😄";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 07:35 AM";"Make CC on Python is kinda rocket since and sweet dream for me now @grewalsatinder 😃";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:36 AM";"I'm pretty sure you can do it mate 😉";"";"🙌 (1)";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:36 AM";"by looking at the docs I think it should work:
https://godoc.org/github.com/go-interledger/cryptoconditions";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:36 AM";"🤔";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:37 AM";"starred this repo, will get back to it hopefully soon 🙂";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:38 AM";"there are two go libraries 😛";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:38 AM";"https://github.com/jtremback/crypto-conditions";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 07:47 AM";"Sure you'll be able to make your go implementation @grewalsatinder
Sad that all activity in this repo stopped 3 years ago and just two also inactive forks";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 07:49 AM";"Python one seems quite active - latest commit just 12 days ago. But have no idea from where to start to make it compatible with current komodod C code";"";"";
"347922216429813760";"grewalsatinder#9653";"22-Nov-18 07:49 AM";"yes I see they both have too old commits";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 10:50 AM";"@TonyL FSM branch should be fixed. plz test with all the existing unit tests";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 10:55 AM";"@jl777c Ok, will go ahead now. I've supposed to temporary disable part of dice tests (reported behaviour above)";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 10:58 AM";"would be good to get a reproducible dice CC bug, then it could be fixed, but for now maximum coverage of all CC is the priority. we can drill down specific dice issues afterwards";"";"👌 (1)";
"272003866906722306";"TonyL#3577";"22-Nov-18 11:06 AM";"On latest FSM auto-tests daemon crashing on initial 100 blocks generating stage, trying to collect information (on jl777 same tests passing)";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 11:45 AM";"@jl777c Issue is that on latest FSM daemon with these AC params:
```-ac_name=FSM2 -ac_supply=5555555 -ac_reward=10000000000000 -ac_cc=2 -addressindex=1 -spentindex=1 -addnode=159.69.45.70 -regtest```
Crashing after ```./komodo-cli -ac_name=FSM2 generate 101```
Backtrace:
```finished loading blocks FSM2
[New Thread 0x7fffd6976700 (LWP 1796)]
[New Thread 0x7fffd6175700 (LWP 1797)]
[Thread 0x7fffd6976700 (LWP 1796) exited]
[New Thread 0x7fffd5974700 (LWP 1798)]
[New Thread 0x7fffd5173700 (LWP 1799)]
[New Thread 0x7fffd4972700 (LWP 1800)]
[Thread 0x7fffd5974700 (LWP 1798) exited]
[New Thread 0x7fffc7fff700 (LWP 1801)]
[New Thread 0x7fffc77fe700 (LWP 1802)]
[New Thread 0x7fffc6ffd700 (LWP 1803)]
[New Thread 0x7fffc67fc700 (LWP 1804)]
[Thread 0x7fffc67fc700 (LWP 1804) exited]

Thread 9 ""zcash-httpworke"" received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7fffd917b700 (LWP 1791)]
0x0000000000000000 in ?? ()
```";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 11:57 AM";"So since all unit-tests using regtest mode with generate call it's not working at all atm";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 12:02 PM";"Actually seems for backtrace above daemon not crashed but hanged (all RPC calls hanging and it's totally unkillable - only reboot helped)";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 12:02 PM";"sorry, no idea what is going wrong...";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 12:02 PM";"does regtest mode work at all?";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 12:02 PM";"It's work on `jl777`";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 12:03 PM";"hopefully duke can fix regtest mode with the sapling merge";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 12:05 PM";"Hmm, if not - I have an idea to bootstrap 100 pre-generated blocks and give it to test nodes on each test execution. Not sure if this trick will work 🤔";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 12:07 PM";"But in such non-regtest native mode everything will need a rework... Hope @dukeleto will save the world 🙌";"";"";
"405011811511828481";"Alright#0419";"22-Nov-18 12:27 PM";"I've never understood the need for regtest unless you're trying to test KMD specific code";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 12:53 PM";"Actually that what unit-tests do - test specific KMD code";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 01:20 PM";"duplicated the crash in another context. testing fix, but you can try too";"";"";
"272003866906722306";"TonyL#3577";"22-Nov-18 01:27 PM";"Seems the same";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 01:29 PM";"yes, same here. investigating";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 01:54 PM";"@TonyL try now, it works for me";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 02:59 PM";"@TonyL did it work?";"";"";
"365714438864633856";"dukeleto#7326";"22-Nov-18 04:04 PM";"@TonyL tell me what is up with Sapling stuff";"";"";
"455741312273219595";"jl777c#5810";"22-Nov-18 04:20 PM";"fixed a crash today";"";"👍 (2)";
"455741312273219595";"jl777c#5810";"22-Nov-18 04:20 PM";"regtest should work now";"";"";
"272003866906722306";"TonyL#3577";"23-Nov-18 12:41 AM";"@jl777c @dukeleto This regtest crash seems to be solved 👍 🙌";"";"👍 (1)";
"272003866906722306";"TonyL#3577";"23-Nov-18 01:49 AM";"https://github.com/jl777/komodo/pull/968 @jl777c Current CC tests passing on FSM at the moment same as on jl777";"";"";
"272003866906722306";"TonyL#3577";"23-Nov-18 02:12 AM";"Faced strange behaviour in test framework for oraclecreate - can't create an oracle:
```
DEBUG:BitcoinRPC:-543-> oraclescreate [""Test"", ""Testing"", ""s""]
DEBUG:BitcoinRPC:<-543- {""result"": ""error"", ""error"": ""couldnt create oracle""}
```
And no any other printouts. But node have balance (checking it before this call). It's not reproducing outside of test framework so problem should be somewhere in tests";"";"";
"272003866906722306";"TonyL#3577";"23-Nov-18 02:22 AM";"@dukeleto Seems my modifications for second node adding broke all non CC tests
https://github.com/tonymorony/komodo/blob/FSM/qa/rpc-tests/test_framework/util.py#L206 issue is in this place
For non CC tests nodes creating with different args and this `REGTEST.conf` working only for `cryptocondtions.py`";"";"";
"272003866906722306";"TonyL#3577";"23-Nov-18 02:30 AM";"Is it ok solution to rollback `start_node` for compatibility with old tests and create  separate `start_cc_node` with modifications especially for cryptocondtions tests?";"";"";
"272003866906722306";"TonyL#3577";"23-Nov-18 05:04 AM";"https://github.com/tonymorony/komodo/blob/FSM/qa/rpc-tests/test_framework/util.py#L202 @dukeleto just reincarnated `-ac_name` check gremlin 😃";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 05:37 AM";"@TonyL just now seeing your messages";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 05:38 AM";"TLDR: other tests should pass, we should not break them 😃";"";"";
"272003866906722306";"TonyL#3577";"23-Nov-18 05:39 AM";"Seems other tests needs sapling adjustment, trying to wrap my head atm since played with CC tests only before";"";"";
"272003866906722306";"TonyL#3577";"23-Nov-18 05:40 AM";"Let's say https://github.com/jl777/komodo/blob/master/qa/rpc-tests/paymentdisclosure.py#L36 here 4 blocks pregenerating but there is a `sapling activation at 61`";"";"";
"272003866906722306";"TonyL#3577";"23-Nov-18 05:41 AM";"@dukeleto Could you please give the cue on which part of framework code stopping daemons from previous test / cleaning?";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 07:05 AM";"@TonyL i don't quite understand your question";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 07:08 AM";"@TonyL one thing to note is that many test files did not pass before, and now may fail in different ways because of sapling";"";"";
"272003866906722306";"TonyL#3577";"23-Nov-18 08:00 AM";"@dukeleto At the moment if I run all tests - daemon/s started by previous tests not finishing/terminating automatically. So I guessed there is some part of framework code which should stop these daemons";"";"";
"371114647052615681";"Mylo#8306";"23-Nov-18 03:30 PM";"@grewalsatinder there’s a python cc integration test suite started by @dukeleto";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 07:01 PM";"@TonyL if your daemon doesn't shut down correctly, that is a bug in your code";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 07:01 PM";"@TonyL it's happened to me as well, when the code that shuts down does not find the correct REGTEST.conf or doesn't get the correct CLI arguments";"";"";
"455741312273219595";"jl777c#5810";"23-Nov-18 07:01 PM";"so with latest FSM, are there any reproducible CC bugs?";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 07:01 PM";"wrong rpcport/etc";"";"";
"455741312273219595";"jl777c#5810";"23-Nov-18 07:02 PM";"or is it working as well as it did before sapling merge?";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 07:02 PM";"I haven't noticed stuff but @TonyL has been doing more lately";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 09:33 PM";"@TonyL i think i see why you broke non-CC tests";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 09:34 PM";"you only create a config file now, if ac_name=REGTEST";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 09:34 PM";"@TonyL in `qa/rpc-tests/test_framework/util.py`";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 09:55 PM";"@TonyL i just wrote some tests for -ac_algo=verushash, very inspired by CC tests file 😃 https://github.com/jl777/komodo/pull/970";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 09:55 PM";"@TonyL soon, we will want to make our own additions to util.py, KMD flavored additions. Functions like `start_asset_chain()` and things like that, to abstract away all this extra_args uglieness";"";"";
"365714438864633856";"dukeleto#7326";"23-Nov-18 09:57 PM";"we want to make our tests a joy to write and read. Once we have a few test files, we can see common patterns. Already with verushash.py and cryptoconditions.py, I can see how to write some convenience functions, so starting nodes is a few lines, instead of 50";"";"👍 (1)";
"272003866906722306";"TonyL#3577";"24-Nov-18 02:59 AM";"@jl777c I not found any reproducible CC bugs on latests FSM so far
@dukeleto hmm but there wasn't any code which creating config in `start_node` before (https://github.com/jl777/komodo/blob/master/qa/rpc-tests/test_framework/util.py#L196). In latest PR I just added condition to create custom config for `cryptoconditions.py` only if `cryptocondtions.py` extra_args noticed - this code shouldn't affect any previous.
Moreover I've tried to run non CC tests with daemon from latest FSM and old tests files before my changes and behaviour is the same.";"";"";
"272003866906722306";"TonyL#3577";"24-Nov-18 02:59 AM";"```PYTHON_DEBUG=1  qa/pull-tester/rpc-tests.sh addressindex --tracerpc
=== Running testscript addressindex.py ===
Initializing test directory /var/tmp/testJsgHNZ
Writing to /var/tmp/testJsgHNZ/node0/komodo.conf
Writing to /var/tmp/testJsgHNZ/node1/komodo.conf
Writing to /var/tmp/testJsgHNZ/node2/komodo.conf
Writing to /var/tmp/testJsgHNZ/node3/komodo.conf
cmd=/root/latest_FSM/komodo/qa/pull-tester/run-bitcoin-cli
start_node: komodod started, calling : /root/latest_FSM/komodo/qa/pull-tester/run-bitcoin-cli -debug -relaypriority=0 -rpcwait getblockcount 
Running /root/latest_FSM/komodo/qa/pull-tester/run-bitcoin-cli -debug -relaypriority=0 -rpcwait getblockcount 
call komodo_args.(/root/latest_FSM/komodo/src/komodod) NOTARY_PUBKEY.()
initialized  at 1543028272
set addressindex, will reindex. could take a while.
set spentindex, will reindex. could take a while.
finished loading blocks 
fAddressIndex.1/0 fSpentIndex.1/0
fAddressIndex.1/0 fSpentIndex.1/0
height.0 slowflag.1 possible.1 cmp.0
komodo_activate_sapling.0 starting blocktime 1296688602 cmp.0
couldnt go backwards 30 blocks
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
```";"";"";
"272003866906722306";"TonyL#3577";"24-Nov-18 03:00 AM";"At the moment all non-CC tests forever printing `[] PASSPORT iteration waiting for KOMODO_INITDONE` so I think some changes needed because of sapling";"";"";
"365714438864633856";"dukeleto#7326";"24-Nov-18 03:01 AM";"@TonyL interesting";"";"🤕 (1)";
"365714438864633856";"dukeleto#7326";"24-Nov-18 03:08 AM";"```src/komodo_gateway.h
1377-    expired = 0;
1378-    while ( KOMODO_INITDONE == 0 )
1379-    {
1380:        fprintf(stderr,""[%s] PASSPORT iteration waiting for KOMODO_INITDONE\n"",ASSETCHAINS_SYMBOL);
1381-        sleep(3);```";"";"";
"365714438864633856";"dukeleto#7326";"24-Nov-18 03:10 AM";"INITDONE isn't being set, it seems";"";"";
"272003866906722306";"TonyL#3577";"24-Nov-18 04:38 AM";"@dukeleto after 254 `PASSPORT iteration waiting for KOMODO_INIITDONE` it's finally
```[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
[] PASSPORT iteration waiting for KOMODO_INITDONE
komodo_activate_sapling.1 starting blocktime 1542934386 cmp.1
couldnt go backwards 30 blocks
READY for  RPC calls at 1543029035! done PASSPORT  refid.33
```
But nothing else happens";"";"";
"365714438864633856";"dukeleto#7326";"24-Nov-18 05:05 AM";"@TonyL something is up with regtest + sapling";"";"😰 (1)";
"423222427192131614";"wil#2080";"25-Nov-18 01:15 PM";"When can we expect CC contracts? March 2019?";"";"";
"455741312273219595";"jl777c#5810";"25-Nov-18 02:16 PM";"they are already working";"";"";
"423222427192131614";"wil#2080";"25-Nov-18 02:20 PM";"@jl777c Thank you.";"";"";
"272003866906722306";"TonyL#3577";"25-Nov-18 10:51 PM";"@Mihailo Hi! Sorry for bothering you again regards JSON. Is it possible by current CC logic to make unique keys in channels list?
```./komodo-cli -ac_name=TONY1 channelsinfo
{
  ""result"": ""success"",
  ""name"": ""Channels Info"",
  ""Channel"": ""RHgzojn327yDgcyVBbgjE3EabL7UE9ZJZN - 10 payments of 10000000 satoshi - 35cda2197938ccced033708f9b488ba1fbf038a8081918622630b98306fdffcd"",
  ""Channel"": ""RHgzojn327yDgcyVBbgjE3EabL7UE9ZJZN - 10 payments of 100000 satoshi - 277d0c2b9eecc26108baf8ad55767261f82e57ca863de5078d3489dd446f4a5b"",
  ""Channel"": ""RHgzojn327yDgcyVBbgjE3EabL7UE9ZJZN - 10 payments of 1000000 satoshi - fdff6be0cd0769063101555c26f2d1d425ddaa02d4fbb10fc31c71813e109a3d"",
  ""Channel"": ""RHgzojn327yDgcyVBbgjE3EabL7UE9ZJZN - 10 payments of 10000000 satoshi - 99ca7da938b7db8ae18a8b62734a7d2cc195027ff8dbd6a5670d10e3c4586d1d"",
  ""Channel"": ""RHgzojn327yDgcyVBbgjE3EabL7UE9ZJZN - 10 payments of 10000000 satoshi - 37b8aa4673537dcbc5913295e740b3d75e1c643e7078a1016fa93898edee8f3f"",
  ""Channel"": ""RHgzojn327yDgcyVBbgjE3EabL7UE9ZJZN - 10 payments of 10000000 satoshi - 89b4b8468c61b155e5200bfc737f1d45cb0fe14b5f2232a44aba9622cf33f6f5"",
  ""Channel"": ""RHgzojn327yDgcyVBbgjE3EabL7UE9ZJZN - 10 payments of 10000000 satoshi - 7b4a24a151d2306c2465cc6354dc09ef93f6e24fd528d7821689e8aa403636ea"",
  ""Channel"": ""RHgzojn327yDgcyVBbgjE3EabL7UE9ZJZN - 10 payments of 100000 satoshi - 218314e24afe8a9e3a1cba4a7e4891529f2393c4fd8e5f469a8c291bfc521df3""
}
```
I'm almost ready with app prototype but duplicate keys allows me to work with only last channel from list.";"";"";
"365714438864633856";"dukeleto#7326";"26-Nov-18 04:37 AM";"agreed, duplicate keys will cause many issues";"";"";
"424224648889106444";"Mihailo#5902";"26-Nov-18 08:44 AM";"@TonyL In channelsinfo there are no duplicate keys. The info is composed of cc address made of two pubkeys (sender and receiver), number of payments and channelopen txid. CC address is always the same between two same pubkeys, but open tx id is different for each channel. So unique indentifier for each channel is its open tx id.";"";"";
"272003866906722306";"TonyL#3577";"26-Nov-18 08:46 AM";"Keys  (` ""Channel""`) are duplicated - it's really quite big issue to work with";"";"";
"424224648889106444";"Mihailo#5902";"26-Nov-18 08:46 AM";"I can change the output of the json so that each channel i one json object. When I was making channel CC I aimed for the info to be nice in cmd so that user can see important info.";"";"🙌 (1)";
"424224648889106444";"Mihailo#5902";"26-Nov-18 08:47 AM";"Oh you meant json keys. Ok, np.";"";"";
"424224648889106444";"Mihailo#5902";"26-Nov-18 08:47 AM";"I'll make each channel one json object in array.";"";"";
"272003866906722306";"TonyL#3577";"26-Nov-18 08:47 AM";"Oh yeah, JSON keys, I'm sorry if I'm wasn't clear 😃";"";"";
