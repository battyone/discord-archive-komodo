AuthorID;Author;Date;Content;Attachments;Reactions;
"455741312273219595";"jl777c#5810";"17-Sep-18 05:23 PM";"each having a set of payments defined";"";"";
"455741312273219595";"jl777c#5810";"17-Sep-18 05:23 PM";"so I am working my way up to FSM, which will use most of the other CC";"";"";
"455741312273219595";"jl777c#5810";"17-Sep-18 05:23 PM";"no need for a programming language using the FSM CC";"";"";
"455741312273219595";"jl777c#5810";"17-Sep-18 05:24 PM";"just create the various required txid via rpc";"";"";
"455741312273219595";"jl777c#5810";"17-Sep-18 05:25 PM";"all the various pieces dont quite fit together yet... but as each one is completed there are less and less undefined things so at some point I can just ask @Mihailo to just debug it all üòÉ";"";"";
"403152410182156290";"jusoaresf#3291";"17-Sep-18 05:25 PM";"These new 4 still work ""standalone"" too?";"";"";
"403152410182156290";"jusoaresf#3291";"17-Sep-18 05:28 PM";"language free FSM üéÉ";"";"";
"455741312273219595";"jl777c#5810";"17-Sep-18 05:31 PM";"they will work standalone, but maybe it wont have much direct usecases. not sure what you can do with a trigger that doesnt have any actions. though I guess I can build in some basic actions";"";"";
"403152410182156290";"jusoaresf#3291";"17-Sep-18 05:36 PM";"I see. Perhaps. But they will be very important for future dapps like cherry picking CCs...";"";"";
"455741312273219595";"jl777c#5810";"17-Sep-18 05:41 PM";"it is like the oracles CC, in and of itself, it doesnt really give you much more than looking up a URL directly";"";"";
"455741312273219595";"jl777c#5810";"17-Sep-18 05:41 PM";"but the fact it is onchain and there is consensus, it can be an input to blockchain operations";"";"";
"272003866906722306";"TonyL#3577";"17-Sep-18 05:43 PM";"@jl777c on which stage it's planning to make RPC more strict for a new CCs? (asking in spot of auto-tests coverage)";"";"";
"455741312273219595";"jl777c#5810";"17-Sep-18 05:45 PM";"once a CC is deemed to be feature complete, then go ahead and go caveman on all its parameters. we can track reproducible bugs via github issues and fix them";"";"üëå (3),üçó (3)";
"371114647052615681";"Mylo#8306";"18-Sep-18 03:59 AM";"I had trouble yesterday with GUI faucet.   Btcpubkey at komodod start and import kmdprivkey came back with errors.
`ExtractDestination failed`
Was notary keys in `-regtest` mode.
Then when using unused/new keys, also in regtest `to use CC contracts you need to launch daemon with valid -pubkey for an address in your wallet. ERR=-1`
Will move onto other first 4 GUIs today and revisit faucet after ‚Äúother‚Äù successes";"";"";
"371114647052615681";"Mylo#8306";"18-Sep-18 04:01 AM";"@SHossain probably best to ask you later today.   As long as it doesn‚Äôt have to be NN keys.  I used to be able to use it only with NN.
Also tested AC in `-regtest` with same result.";"";"";
"455741312273219595";"jl777c#5810";"18-Sep-18 08:27 AM";"CC have no concept of notaries";"";"";
"455741312273219595";"jl777c#5810";"18-Sep-18 08:28 AM";"though for some special cases we will likely use the concept of notarized height";"";"";
"371114647052615681";"Mylo#8306";"18-Sep-18 08:36 AM";"Ok thanks for clarification James";"";"";
"371114647052615681";"Mylo#8306";"18-Sep-18 01:54 PM";"@jl777c @Mihailo 
Is this a very basic way of explaining ChannelsCC?

The very basic explanation in four steps is:
 - Set up a payment channel with your denominations (10k satoshi in this case)
 - Provide a secret to spend each of those denominations
 - Have the channel notarized for bitcoin level security
 - Send out authorizations for those payment channels to be spent, one at a time.

If you need to send 50k satoshi, authorize the release of 5 of those 10k payments by sending the the payment details to the person‚Äôs destination address.";"";"";
"424224648889106444";"Mihailo#5902";"18-Sep-18 01:58 PM";"@Mylo That is it basically, with two modifications:
- the secrete does need to be defined, it is done by RPC. You basically open the channel with one tx (and that lock funds in the channel), and then with payment tx you release payments in number of denominations you want. Everything is done by RPC (even if it is used by wild generated TX the secrete generation must be followed as it is done in RPC calls for tx to be valid)
- second modification to your explanation is just that it is not necessary to have notarized chain for channels CC, but it is always more secure that way.";"";"";
"455741312273219595";"jl777c#5810";"18-Sep-18 02:02 PM";"2 of the 4 steps above are not anything the user needs to do.";"";"";
"455741312273219595";"jl777c#5810";"18-Sep-18 02:02 PM";"you fund a payment channel to a destination";"";"";
"455741312273219595";"jl777c#5810";"18-Sep-18 02:02 PM";"then you release payments";"";"";
"455741312273219595";"jl777c#5810";"18-Sep-18 02:02 PM";"that's it as far as user is concerned";"";"";
"424224648889106444";"Mihailo#5902";"18-Sep-18 02:04 PM";"the 2nd and 3rd üòâ";"";"";
"371114647052615681";"Mylo#8306";"18-Sep-18 02:28 PM";"OK - cool.  The user doesn't need to know the details yep understood.
So the release of funds is just a normal transaction, compatible with all existing infrastructure.

ChannelPayment in channels.cpp doesn't have the RPC help command stuff, where's some RPC command info kept?   Been looking in jl777 FSM branch.

Explanation is for tech article, will note that notarization is not needed but nice to have for bitcoin level security.

Congrats btw @Mihailo üëç";"";"";
"455741312273219595";"jl777c#5810";"18-Sep-18 02:30 PM";"Mihailo hasnt made a pull request into FSM yet";"";"";
"371114647052615681";"Mylo#8306";"18-Sep-18 02:32 PM";"oh ok thanks";"";"";
"455741312273219595";"jl777c#5810";"19-Sep-18 09:50 AM";"multisig support via partial signatures is coded, but not verified yet. I want to verify some things about the prices (bitmex) CC first";"";"";
"455741312273219595";"jl777c#5810";"19-Sep-18 01:17 PM";"coded half the prices CC, but stuck on normalizing bet amount to leveraged price. more progress tomorrow";"";"üí™ (4),üçÑ (1)";
"423176312354635779";"gcharang#6833";"19-Sep-18 04:24 PM";"CC made easy by jl777 in our official docs: https://docs.komodoplatform.com/cc-jl/introduction.html\
Source text: https://github.com/jl777/komodo/blob/FSM/src/cc/CC%20made%20easy
A non-technical introduction: https://komodoplatform.com/crypto-conditions-utxo-based-smart-contracts/";"";"üÜí (7),Komodo (4),1M (4)";
"423176312354635779";"gcharang#6833";"19-Sep-18 04:24 PM";"Pinned a message.";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:45 AM";"need to change things around a bit with gateways CC to be able to properly validate it. this was a bit unexpected, but then again combining multiple CC together is the first time with gateways CC, so not exactly surprising there are some issues doing that";"";"üôå (2),‚úç (1)";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:47 AM";"";"https://cdn.discordapp.com/attachments/466507187842187264/492240436618985472/test_200.png";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:50 AM";"Doing oracles mass data publishing tests. 200 oracles with 2 data entries to each in one block - passed.
For ~more than 500 data publishings in same block `oraclesdata` generating hex which broadcasting returns ```error code: -26
error message:
18: bad-txns-inputs-spent```";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:51 AM";"Such hex have one of `vins` spent";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:51 AM";"is it just one thread that is doing all this?";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:52 AM";"Yup, but it's doing one by one, not simultaneously";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:52 AM";"i think there is some limit to chaining mempool tx";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:52 AM";"what about 300? 400?";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:52 AM";"257?";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:53 AM";"I thought so but I'm starting with clear mempool and getting such hex on random place each time";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:53 AM";"Sending same data";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:53 AM";"random between 200 and 500?";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:53 AM";"One time I can get it on 350 transactions, second time on 450";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:53 AM";"Yes, I think in this range";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:53 AM";"Approximately";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:54 AM";"ok, lets find a reasonably safe limit and document that that is the practical limit";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:54 AM";"200 in one block is 3+ per second. seems plenty fast";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:54 AM";"I'll make more tests and some spreadsheet";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:54 AM";"any usage of oracles for faster than 1 minute data, will have some issues";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:55 AM";"the question is how many issues and if we can sidestep them";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:55 AM";"Btw surprised how fast is `oraclessamples` works. Possible to get and write to separate files 500+ data entries from blockchain for less than in 0.1 sec in one thread.";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 07:57 AM";"@jl777c As I see problem is that this hex is not valid even mempool is clear next block. So dAPP devs have to keep in mind that transaction re-creating needed, not just re-broadcast attempt";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:58 AM";"yes if inputs are already spent, then need to make a new one";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:58 AM";"what is happening is that the prior tx isnt getting into the mempool yet and you ask for another datasample";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:59 AM";"what you could do is call a lockunspent call for all vins in the tx that comes back";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:59 AM";"that should work around this problem";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 07:59 AM";"at the CC level, I dont know what the plan for broadcasting the tx is, so this belongs at the dapp layer";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 08:01 AM";"I'm using now very simple data (just `ff`).  Is it significant difference in spot of blocksize fit if I'll broadcast let's say `ffff` or `ffffff` ?";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 08:01 AM";"no";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 08:01 AM";"overhead for tx is about 300 bytes";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 08:01 AM";"3 byte difference is 1%";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 08:02 AM";"do you know how to iterate through the vins and locking the utxo?";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 08:03 AM";"decode the tx, for each txid/vout in the vin[] array, call the lockunspent that makes it so the listunspent wont return it";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 08:03 AM";"which will prevent the oraclesdata from issuing it";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 08:04 AM";"i mean using it";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 08:05 AM";"Have to try it. So I have just get vins array before the `oraclesdata` transaction broadcast and call `lockunspent` for each vin and then broadcast?";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 08:10 AM";"@jl777c is it ok if I'll execute for all `oraclesdata` transactions, not just failed?";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 08:11 AM";"yes, when the rawtx comes back, lock all its vins, then broadcast it";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 08:12 AM";"i think if you do that, then even without broadcasting it will make valid tx";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 08:14 AM";"Thanks @jl777c ! Will try this trick";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 09:16 AM";"@jl777c still can't broadcast tx after locking all vins. Am I doing something not correct?";"https://cdn.discordapp.com/attachments/466507187842187264/492262837742469131/unknown.png";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 09:17 AM";"vins";"https://cdn.discordapp.com/attachments/466507187842187264/492263035222622209/unknown.png";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 09:18 AM";"First screenshot not correct since `true` is unlock according to doc, tried this way first with `false`";"https://cdn.discordapp.com/attachments/466507187842187264/492263345907564544/unknown.png";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:20 AM";"why are all the vout 0 in the locks, but in the tx it is non-zero values a lot";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 09:20 AM";"I've tried 0,1,2 vouts as well but same result";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:21 AM";"also, if the tx is wrong, it is wrong with or without locks. the vins in the bad tx is reusing vin from prior";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:21 AM";"you shouldnt be using random vouts!";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:21 AM";"use the one specifically from the rawtx";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:21 AM";"get things to a stable situation";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 09:21 AM";"Aha so I broke it on first call";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:22 AM";"possibly";"";"";
"272003866906722306";"TonyL#3577";"20-Sep-18 09:23 AM";"Will be gentle next time with vouts, thanks";"";"";
"427830082262925332";"d3n#0940";"20-Sep-18 09:23 AM";"Hi.
I've been reading about the Komodo CryptoConditions. Congratulations! It looks to me like a very powerful technology. My question, which I've not found answered in any of the current texts, is: How a zk-snark transactions can be used with UTXO based smart contracts? Is there any way with the current implementation?

Of course I'm thinking on privacy powered Voting system. For such thing we need mainly:
+ A way to sign claims (like address X is able to vote). This might be achieved by just adding a signed claim to a blockchain  block
+ A way to create a temporary assetchain. This seems that can be avhieved using CryptoConditions
+ A way to use this temporary assetchain tokens from a Zk-snark transactions which will have the voting option encapsuled in MeMo field";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:27 AM";"the problem with using ztransactions as inputs to CC is that they are private";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:28 AM";"i think some sort of homomorphic tech is needed to be put in opreturns to have a chance to use z-inputs";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:30 AM";"maybe you can just use tokens from assets CC for voting, no need for a dedicated chain";"";"";
"427830082262925332";"d3n#0940";"20-Sep-18 09:44 AM";"""maybe you can just use tokens from assets CC for voting, no need for a dedicated chain""
Sure! When I said ""AssetChain"" I meant a CC asset token";"";"";
"427830082262925332";"d3n#0940";"20-Sep-18 09:45 AM";"So I'm thinking about doing all required stuff that right now we are doing in Ethereum + komodo-temporary-asset-chains in Komodo MainNet";"";"";
"427830082262925332";"d3n#0940";"20-Sep-18 09:46 AM";"But... we still need CC+Zk-snarks";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 09:56 AM";"you can use the ztx using the assetchain as a voting mechanism. we did that with VOTE2018 for notary election";"";"";
"427830082262925332";"d3n#0940";"20-Sep-18 10:01 AM";"Yes, this is what we've already done: https://github.com/vocdoni/documentation
But after reading about CC I'm thinking about using only the Komodo MainNet, for signing claims to users and to vote";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 03:01 PM";"@TonyL gatewaysCC requires tokens that are converted to gateways CC out, there is a new token rpc tokenconvert rpc that can do this";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 03:01 PM";"also before redeeming, it also needs to be converted";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 03:02 PM";"the reason for this is vin enforcement. if it isnt changed to gateways vout, then only assets enforcement is done and it would just allow a simple transfer from the ""locked"" funds as the locking is done by the gateways CC";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 03:03 PM";"the gateways CC automatically converts to assets vout on a gatewaysclaim";"";"";
"455741312273219595";"jl777c#5810";"20-Sep-18 03:08 PM";"this trick of converting tokens to a different CC appears to be the way to allow adding additional rules to another CC (assets). I will make sure the same method will work for prices CC. I think it will as the idea is there are freely tradeable tokens, which when converted become subject to the new rules. Great care is needed for all conversions to and from normal tokens as any bug will affect basic token function";"";"";
"272003866906722306";"TonyL#3577";"21-Sep-18 06:21 AM";"@jl777c Is converted token can be used same way as non converted outside of gateways CC (e.g. trades, transfers)? And also is anybody can convert any token or it should do owner of token creation privkey?";"";"";
"455741312273219595";"jl777c#5810";"21-Sep-18 08:08 AM";"you need to be able to spend the token, so it needs to be in an address you have privkey for";"";"";
