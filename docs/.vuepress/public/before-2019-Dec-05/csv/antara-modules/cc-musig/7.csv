AuthorID;Author;Date;Content;Attachments;Reactions;
"423176312354635779";"gcharang#6833";"28-Feb-19 04:29 PM";"ah! easist setup is to use vps with static ip.";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"28-Feb-19 04:30 PM";"Yeah, but one question, how do I change my config so that I can connect to specific port? Since as far as I can see my nodes have diff p2pport that's why it won't connect";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"28-Feb-19 04:38 PM";"even with 6 confirmations it can't be seen in the explorer.";"";"";
"423176312354635779";"gcharang#6833";"28-Feb-19 04:38 PM";"Is the explorer on the same node showing the confs?";"";"";
"423176312354635779";"gcharang#6833";"28-Feb-19 04:41 PM";"Also, I know how to change rpcport, but afaik the p2pport is default. @josephnicholas GMT+8 
I would recommend you do `getinfo` call on both nodes and compare if 
```
  ""p2pport"": 33924,
  ""rpcport"": 33925,
  ""magic"": 103274924,
```
are same on both nodes";"";"";
"423176312354635779";"gcharang#6833";"28-Feb-19 04:42 PM";"if ""magic"" is different, then they are different chains and won't talk to each other";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"28-Feb-19 04:42 PM";"Oh no. So how do I create a chain that have same p2p port?";"";"";
"423176312354635779";"gcharang#6833";"28-Feb-19 04:44 PM";"""magic"": is the more important number, if thats the same, then others will be correct.
https://developers.komodoplatform.com/basic-docs/installations/creating-asset-chains.html#creating-a-new-asset-chain";"";"";
"423176312354635779";"gcharang#6833";"28-Feb-19 04:44 PM";"have you seen this doc?";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"28-Feb-19 04:44 PM";"No, I will read";"";"";
"423176312354635779";"gcharang#6833";"28-Feb-19 04:45 PM";"that has most of the info and tips. Feel free to ask here if there are any further troubles. Someone will answer";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"28-Feb-19 04:59 PM";"Thanks @gcharang";"";"üëç (1)";
"423176312354635779";"gcharang#6833";"28-Feb-19 05:05 PM";"@blackjok3r what does `str()` do in https://raw.githubusercontent.com/jl777/komodo/jl777/src/musigtest.py";"";"";
"232679450301431808";"blackjok3r#3181";"28-Feb-19 05:06 PM";"it converts the output to a string.. seems without that daemon returned error";"";"";
"423176312354635779";"gcharang#6833";"28-Feb-19 05:07 PM";"@blackjok3r `tmp = str([i, len(pubkeys), combinedpk, pkhash, msg, i])`whats the purpose of  the `i` after `msg`?";"";"";
"232679450301431808";"blackjok3r#3181";"28-Feb-19 05:08 PM";"that is for using 1 node to simulate many.";"";"";
"423176312354635779";"gcharang#6833";"28-Feb-19 05:08 PM";"you modified the rpc call?";"";"";
"232679450301431808";"blackjok3r#3181";"28-Feb-19 05:08 PM";"if its not there.. then it does nothing.. or at least thats how it should work";"";"";
"423176312354635779";"gcharang#6833";"28-Feb-19 05:08 PM";"ah got it";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"02-Mar-19 06:17 AM";"@jl777c there is a variable error in `desttxid`
```dilithium.c: In function ‚Äòint64_t dilithium_inputs(CCcontract_info*, CMutableTransaction&, CPubKey, uint256, int64_t, int32_t, char*)‚Äô:
dilithium.c:3297:211: error: ‚Äòdesttxid‚Äô was not declared in this scope
 t[numvouts-1].scriptPubKey) == 'Q' || dilithium_sendopretdecode(checktxid,vintx.vout[numvouts-1].scriptPubKey) == 'x') && desttxid == checktxid )
```";"";"";
"455741312273219595";"jl777c#5810";"02-Mar-19 06:46 AM";"pushed fix";"";"";
"544703121675386880";"josephnicholas GMT+8#5904";"02-Mar-19 07:04 AM";"Thanks";"";"";
"455741312273219595";"jl777c#5810";"03-Mar-19 08:00 AM";"@CHMEX it seems musig explorer needs an update";"";"";
"420119978138664961";"CHMEX#0686";"03-Mar-19 09:18 AM";"musig is back and updated";"";"";
"455741312273219595";"jl777c#5810";"04-Mar-19 11:41 AM";"added handle uniqueness to latest MUSIG";"";"üëç (1)";
"405011811511828481";"Alright#0419";"04-Mar-19 07:46 PM";"@CHMEX musig explorer is forked";"";"";
"405011811511828481";"Alright#0419";"04-Mar-19 07:46 PM";"I had nodes do the same, I had to resync after rebuilding libcc.so and komodod";"";"";
"420119978138664961";"CHMEX#0686";"04-Mar-19 09:44 PM";"resynching now hope it wil make it...";"";"";
"420119978138664961";"CHMEX#0686";"04-Mar-19 09:44 PM";"off to bed...";"";"";
"423176312354635779";"gcharang#6833";"12-Mar-19 04:13 PM";"@blackjok3r 
testing musig on the latest jl777 branch.
```bash
./komodo-cli -ac_name=MUSIG1 cclib nonce 18 '[""8897e150bfb07d3f967ffadb4b0f3c84ea73a94c0d715c4b7e6d9c816c5113a9"",1,""03035897a2bb653805490a88b5a90821403ce29f355fb0093690746082f6a0a618""]'
{
  ""added_index"": 1,
  ""status"": ""not enough nonces"",
  ""result"": ""success""
}
```
any thing I might have done wrong?";"";"";
"232679450301431808";"blackjok3r#3181";"13-Mar-19 01:39 AM";"it doesnt have enough nonces ?";"";"";
"232679450301431808";"blackjok3r#3181";"13-Mar-19 01:40 AM";"@gcharang  Its also possible that I broke it when I merged the single node test in.";"";"";
"232679450301431808";"blackjok3r#3181";"13-Mar-19 01:42 AM";"what you need to do is ` ""added_index"": 1,` needs to be added for ALL nodes, for single node this *should* mean you dont need to add yourself. 
That said I had to chagne that for single node simulation, so that was skipped, maybe it is applying to multi node aswell, although its should not. I will have a look at it soon. 
There was a nasty bug with the noncstep and I had to make it extremly strict about proceeding or it would crashe the daemon evey time.";"";"";
"423176312354635779";"gcharang#6833";"13-Mar-19 05:11 AM";"I was only testing with 2 nodes so this may not have affected it?";"";"";
"232679450301431808";"blackjok3r#3181";"13-Mar-19 05:16 AM";"well.. like I said it could be a bug";"";"";
"232679450301431808";"blackjok3r#3181";"13-Mar-19 05:16 AM";"try sending the nonce to yourself";"";"";
"232679450301431808";"blackjok3r#3181";"13-Mar-19 05:17 AM";"like so all nonce are sent to all nodes, even to them self";"";"";
"232679450301431808";"blackjok3r#3181";"13-Mar-19 05:17 AM";"if that works its a bug on my end";"";"";
"423176312354635779";"gcharang#6833";"13-Mar-19 06:33 AM";"will try";"";"";
"423176312354635779";"gcharang#6833";"13-Mar-19 08:49 AM";"@blackjok3r 
I tried adding the commitment produced on the same node to itself, but that too errored.
You will have to take a look at the code sometime";"";"üëç (1)";
"354615658148790275";"sœÜldat#8733";"13-Mar-19 12:17 PM";"https://twitter.com/airratchet/status/1105792022051471360";"";"";
"354615658148790275";"sœÜldat#8733";"13-Mar-19 12:18 PM";"https://twitter.com/airratchet/status/1105794844100837376";"";"";
"405011811511828481";"Alright#0419";"14-Mar-19 07:06 PM";"```
komodo-cli -ac_name=MUSIG cclib keypair 19 ""[%22rand%22]""
error: couldn't parse reply from server
komodo-cli -ac_name=MUSIG cclib handleinfo 19 ""[%22wrk%22]""
error: couldn't parse reply from server
```
Suddenly getting this on one of my machines after rebuilding to latest jl777 branch. Isn't happening on any other machine with seemingly the same build. Has anyone ever seen this before? I don't see any relevant changes to jl777 branch that would have affected this";"";"";
"405011811511828481";"Alright#0419";"14-Mar-19 07:06 PM";"normal commands such as `getinfo` work fine, seems to be isolated to this specific machine and cclib method";"";"";
"405011811511828481";"Alright#0419";"14-Mar-19 07:10 PM";"rebuilding fixed it, strange as I used the same exact script to rebuild all nodes and only this node had a problem";"";"";
"405011811511828481";"Alright#0419";"14-Mar-19 07:23 PM";"ubuntu 18.04";"";"";
"405011811511828481";"Alright#0419";"14-Mar-19 07:29 PM";"what is ""it""?";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 03:53 AM";"@gcharang  
https://github.com/jl777/komodo/pull/1336
I think this fixes musig. If you have a change to test it after it gets merged.";"";"";
"423176312354635779";"gcharang#6833";"18-Mar-19 05:11 AM";"will do";"";"";
"423176312354635779";"gcharang#6833";"18-Mar-19 09:37 AM";"@blackjok3r daemon crashed on adding nonce from the other node";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:37 AM";"üò°";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:38 AM";"I dont really understand why it does that ... The problem is that it must have all nonce before moving past, but it seems if its strict enough ... then it can never pass., as soon as you remvoe that limit then it crashes";"";"";
"423176312354635779";"gcharang#6833";"18-Mar-19 09:38 AM";"have you taken a look at this spec: https://github.com/ElementsProject/secp256k1-zkp/blob/secp256k1-zkp/src/modules/musig/musig.md#signing-participant ?";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:38 AM";"maybe the check there needs to be diffrent, and actuall check the nonnces rather than just counting them";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:38 AM";"Dont need to ... I had it working with over 2000 keys";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:39 AM";"as long as 100% of nonce are in each memporyt struct it works without crashing";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:39 AM";"My script does this, but its only on a singel node and therefor uselsss";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:41 AM";"can you edit this line so it has the debug print?
https://github.com/jl777/komodo/blob/d8d7463ea05274a28a00dc193cfc39c19296ba60/src/cc/musig.cpp#L590";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:41 AM";"what you need to know, is that its added both indexes...";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:41 AM";"if they are both there, then it should not crash.";"";"";
"423176312354635779";"gcharang#6833";"18-Mar-19 09:42 AM";"One thing that became clear to me after looking at the above doc is:
when there are 3 nodes
node1 produces only one nonce after both the commitments from the other nodes are added
I used to think it will produce a nonce for each commitment added";"";"";
"423176312354635779";"gcharang#6833";"18-Mar-19 09:42 AM";"will change that line and run it again";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:42 AM";"no on every step it MUST have every single hash generated by every node";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:42 AM";"The python script shows how I acheived this `musigtest.py`";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:43 AM";"but it only works on a single node";"";"";
"423176312354635779";"gcharang#6833";"18-Mar-19 09:43 AM";"it will have them but it produces a hash only after data from all the other nodes is added to it";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:43 AM";"yes and the code doesnt check very well that they are all there... its works until nonce step";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:43 AM";"then crashes if all data isnt avalible";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:44 AM";"really stumped me... we added checks to not let it pass unless every hash is there, but it seems somehow it stil l lets you proceed. 
I think maybe, we need to just force that a node must send its own hash to itself liek I did in my script...";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:44 AM";"Or the counter needs to actually check the hashes are there rather than just counting how many you added, because user error will just crashiit every time otherwise";"";"";
"423176312354635779";"gcharang#6833";"18-Mar-19 09:46 AM";"I was testing it with only 2 nodes.
added nonce from second node and it crashed so no user error in this case";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:53 AM";"I dont really understand how it does it tbh ... it will still crash is the steps beforehand didn assign everything";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:54 AM";"We need a proper check on each stage that checks the actual hashes are there, not just counting them.";"";"";
"232679450301431808";"blackjok3r#3181";"18-Mar-19 09:54 AM";"But I dont know how to make that.";"";"";
"423176312354635779";"gcharang#6833";"18-Mar-19 10:11 AM";"@blackjok3r 
here's the error:
```bash
NONCE: struct_size.1 using_struct.0 added_index.1 numnounces.2 num.2
[libsecp256k1] illegal argument: !secp256k1_fe_is_zero(&ge->x)
fish: ‚Äú./komodod -ac_name=MUSIG6 -ac_s‚Ä¶‚Äù terminated by signal SIGABRT (Abort)
```";"";"";
"369608312955731968";"Bryan_Beus#6442";"18-Mar-19 11:20 PM";"CC MuSig is now added to the developers.komodoplatform.com tech docs:

https://developers.komodoplatform.com/basic-docs/cryptoconditions/cc-musig.html#introduction";"";"";
"423176312354635779";"gcharang#6833";"09-Apr-19 03:43 PM";"@Alright 
`makecclib` has been updated
I am not able to figure out how to specify the dynamic module to be built during the `komodod` build process";"";"";
"455741312273219595";"jl777c#5810";"09-Apr-19 04:05 PM";"copy the libcc.so that you want into ~/komodo/src and relink komodod";"";"";
"455741312273219595";"jl777c#5810";"09-Apr-19 04:05 PM";"it builds with whatever libcc.so it finds there";"";"";
"423176312354635779";"gcharang#6833";"09-Apr-19 04:06 PM";"thanks";"";"";
"423176312354635779";"gcharang#6833";"11-Apr-19 10:17 AM";"@jl777c 
I am documenting the rpc for dilithium,
```json
    {
      ""evalcode"": 19,
      ""funcid"": ""S"",
      ""name"": ""dilithium"",
      ""method"": ""sign"",
      ""help"": ""msg [hexseed]"",
      ""params_required"": 1,
      ""params_max"": 2
    },
```
for the `sign` rpc, are there any restrictions on what msg can be?
For the command,:
```bash
./komodo-cli -ac_name=MUSIG cclib sign 19 '[""Quantum Resistance is awesome!"",""a70a8e7d2281beaf0762a11590fb566d7af32325ae4252609149de37658e2eb5""]'
```
I am getting 
```json
{
  ""status"": ""error"",
  ""error"": ""couldnt parse message to sign""
}
```";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:29 AM";"it's a debug rpc for the most part";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:29 AM";"it doesn't actually seem to have a purpose other than to check that underlying dilithium features are working";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:31 AM";"did you try something like 
`./komodo-cli -ac_name=MUSIG cclib sign 19 ""[%22Quantum Resistance is awesome!%22,%22a70a8e7d2281beaf0762a11590fb566d7af32325ae4252609149de37658e2eb5%22]'""`
?";"";"";
"423176312354635779";"gcharang#6833";"11-Apr-19 11:39 AM";"@Alright yeah this %22 format didn't work either";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:40 AM";"I'm not sure I ever tested signing with a specific key, only the test mode signing with 1 arg";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:40 AM";"does that work for you?";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:40 AM";"`./komodo-cli -ac_name=MUSIG cclib sign 19 ""[%22Quantum Resistance is awesome!%22]""`";"";"";
"423176312354635779";"gcharang#6833";"11-Apr-19 11:41 AM";"No, this too doesn't work";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:41 AM";"moment, let me look at notes";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:43 AM";"Ah it doesn't work on arbitrary strings, forgot about this";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:43 AM";"think it needs to be 32 bytes of hex";"";"";
"405011811511828481";"Alright#0419";"11-Apr-19 11:43 AM";"again it's just a debug rpc, never actually used";"";"";
"423176312354635779";"gcharang#6833";"11-Apr-19 11:44 AM";"Ah got it, thats why it has been saying  `couldnt parse message to sign` will try with a 32 byte string";"";"";
"423176312354635779";"gcharang#6833";"11-Apr-19 11:57 AM";"thanks alright, thats working";"";"";
"423176312354635779";"gcharang#6833";"11-Apr-19 01:54 PM";"@Alright i've added the rpc to dilithium doc: https://docs.komodoplatform.com/basic-docs/customconsensus/dilithium.html

I haven't changed much from your content.
Just added rpc from this line: https://github.com/KomodoPlatform/Documentation/blob/master/docs/basic-docs/customconsensus/dilithium.md#L1657";"";"";
"395274075985018880";"Regnar#6164";"03-Nov-19 10:28 PM";"```- Musig
  - Insert Musig CC proof of concept here - [link]```

Hey all, if you have any proof of concepts, or built something cool for Musig CC, please let me know. The goal is to build out a list of concepts using CCs to help show other developers what is possible and add this to the Komodo docs page. TUIs are good too!";"";"";
