AuthorID;Author;Date;Content;Attachments;Reactions;
"424224648889106444";"Mihailo#5902";"11-Nov-19 10:52 AM";"@jl777c I gave a thought on solving the parallel withdraw problem on friday and over the weekend. I have and idea to create another msig address from the same pubkeys (if possible) and move the funds that are used for withdraw over there. This would solve both parallel withdraw and the balance thing as we would know how much is left. Ofc, the withdraw should expire after sometime and those fund need to be returned to the deposit address so it can be used again and have correct balance. That part is IMHO little bit picky as we have to be sure funds are not stuck at temp address.";"";"";
"455741312273219595";"jl777c#5810";"11-Nov-19 10:54 AM";"great!";"";"";
"455741312273219595";"jl777c#5810";"11-Nov-19 10:54 AM";"just change the order of the pubkeys in the redeemscript";"";"";
"455741312273219595";"jl777c#5810";"11-Nov-19 10:54 AM";"you can make N! different msig addresses from N pubkeys";"";"";
"424224648889106444";"Mihailo#5902";"11-Nov-19 10:55 AM";"Aha, so if the order of keys is 1,3,2 it wil give different address than 1,2,3.";"";"";
"455741312273219595";"jl777c#5810";"11-Nov-19 10:57 AM";"the msig address is rmd160(sha256(redeemscript))";"";"";
"424224648889106444";"Mihailo#5902";"11-Nov-19 10:57 AM";"üëç";"";"";
"424224648889106444";"Mihailo#5902";"11-Nov-19 10:58 AM";"Ok, so I'll try this with oraclefeed. And I will introduce withdraw expiration (basicallly it will check tx time and if some time has passed it will not look it as pending anymore)";"";"";
"424224648889106444";"Mihailo#5902";"11-Nov-19 11:35 AM";"For 1of1 gateway can I generate somehow another address from the pubkey and to always be the same?";"";"";
"455741312273219595";"jl777c#5810";"11-Nov-19 11:38 AM";"might need to have a dummy pubkeys and make it a 1of2";"";"";
"455741312273219595";"jl777c#5810";"11-Nov-19 11:38 AM";"then you can make the second pubkey any random one to make a new address";"";"";
"424224648889106444";"Mihailo#5902";"11-Nov-19 11:39 AM";"Ok, it is not really important right now. As usually MofN gateway will be used. 1of1 we use for test, but I don't expect any significant use in production.";"";"";
"424224648889106444";"Mihailo#5902";"11-Nov-19 11:39 AM";"Ah, I can use 1of2 address from the same pubkey!";"";"";
"455741312273219595";"jl777c#5810";"11-Nov-19 11:41 AM";"but same pubkey twice is the same address in both A B vs B A";"";"";
"424224648889106444";"Mihailo#5902";"11-Nov-19 11:42 AM";"Yes, but it is different address than single pubkey address. I just need different address!";"";"üôÇ (1)";
"455741312273219595";"jl777c#5810";"11-Nov-19 11:52 AM";"oh, yes a 1of1 msig is different than p2pk/p2pkh";"";"üëç (1)";
"424224648889106444";"Mihailo#5902";"12-Nov-19 11:03 AM";"@jl777c Is there a way that the utxo is found from mempool like with listunspent with regular rpc commands. I want to move funds from deposit address to tmp address and right away create raw tx using those utxos from tmp address. I would like to avoid waiting it to be mined and then creating raw tx in another step as it would need another tx and syncing with external chain...";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 11:26 AM";"Or maybe I don't need to look for unspents, but just send funds to tmpaddress and then use that txid and vout as vin for createrawtx.";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 11:27 AM";"yes";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 11:27 AM";"you can getrawmempool and scan for the utxo to spend, but if you know precisely the txid already, it is easier";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 11:28 AM";"I will know it as I will first make move of funds and then right away createrawtransaction";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 11:31 AM";"Ahhhhhhhhhh, I didn't thought about this enough. To move the funds from deposit to temp address it again needs to have signing process done üòî";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 11:31 AM";"I mix 1of1 and multisig situations when thinking as I was testing a lot with 1of1 gateway...";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 12:35 PM";"For the sake of knowing exact balance and for parallel withdraw, it would be good to reserve the utxos that will be spent in withdraw. The best way was to spend them to temp address as it would have exact utxo and the rest utxo would be available for spending in other withdraws. But as this also needs multiple signing process, something else must be done in order to solve this.";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 12:40 PM";"maybe think in terms of managing the total balance in convenient sizes. the msig signers can prepare these utxos while collecting the 5% rewards";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 12:50 PM";"The collecting rewards thing haven't been made yet, and this will also be difficult as multi signing thing must be done. Nevertheless, even if we have convenient sizes we must mark that utxo will be spent in order to both know exact balance at the moment and to avoid using same utxo in two parallel withdraws.";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 12:54 PM";"how about 8 parallel withdraws";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 12:55 PM";"prepare ahead of time 1/8th of balance in each of 8 subaddresses. for each withdraw, do a userpubkey % 8 to find which of the 8 parallel tracks it will use and single thread within each.";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 12:55 PM";"the restriction is that no more than 1/8th of total balance can be withdrawn at once, which seems an acceptable limitation";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 12:56 PM";"each withdraw track, can then use a baton to ensure only one pending withdraw at a time";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 12:57 PM";"as a withdraw happens, then a rebalancing of funds in the 7 other addresses would need to happen, maybe just do this once per day, along with collection of rewards";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 12:57 PM";"something like this. where the withdraws are constrained to allow multiple withdraws that dont conflict at all";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 12:58 PM";"and total balance info can be put into the opreturn and validated that it properly adjusts from the previous balance, this way we dont need an external source for balance info";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:07 PM";"Hmmm, I have to think about it little bit. Splitting in 8 different balances is ok, and baton (on AC side I suppose) would resolve reserving utxos for withdraw. The rebalancing thing would require automated ""withdraw"" of all 8 balances back to new 8 balances and the siging process to be done....";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:08 PM";"In the beginning when there are little deposits, it will be probably difficult to iwthdraw your deposit as it can be more than 1/8 of balance...";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:17 PM";"unless, we make specific set of initial deposits to cover the startup case";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:18 PM";"with a daily rebalancing, the msig nodes can just spend all the 8 balances to the 8 addresses in a single rebalancing transaction, i guess skipping any pending withraws";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:18 PM";"if an incremental method can be made, it would be better";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:20 PM";"maybe a just in time process where funds are kept in the main msig address and only transferred to the 8 withdraw balance addresses, as needed. it is an extra transaction, but if we can do this, then it handles the case when there are not enough funds in the 1/8th address";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:20 PM";"once that case is handled, if we notice that there are already enough funds in the 1/8th address, then the transfer from main address can be skipped";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:20 PM";"i think it is a matter to carefully track the 9 balances, and 8 pending withdraws";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:21 PM";"Every transfer is again multi sig tx which needs signing";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:21 PM";"and there are the new funds that are coming in, that start as unallocated. maybe they can be moved to the 1/8th address with the lowest balance, so this is the incremental aspect";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:21 PM";"yes, i am assuming that automating a msig tx is achieved already";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:22 PM";"We have automated signing process, but it is slow and it requires txs on AC.";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:23 PM";"so the various states that a utxo can be in needs to be tracked and then make sure that the opreturn data has the required summaries. it could be that we have an ""intialize"" process that takes all the existing balances and gets things into a proper state";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:23 PM";"as long as it is automated, slow is ok, just not too slow. 10 blocks for a signature is 10 minutes, which seems ok";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:24 PM";"This all brings complexity of the system to a whole new level and creates space for errors. The utxo system was a perfect thing but with msig it is difficult to use it as it requires complete process for signing";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:25 PM";"maybe we need to do it like iguana notarizer and make it direct p2p to get the msig tx signed";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:26 PM";"but regardless of signing method, i think as long as a withdraw progresses toward completion, or times out and can be resubmitted, it will be complex, but will still work";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:27 PM";"That would be great, to reduce the overhead we have for signing and to have instant signing. Then we would be able to move the funds to temp address.";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:28 PM";"what if you used the mempool?";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:28 PM";"For what?";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:28 PM";"why wait for confirmations to complete the signing?";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:28 PM";"couldnt the msig signers scan the mempool and see if there is any new tx that needs to be signed?";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:30 PM";"Can't remember why I did it this way. I think there was some issue, but maybe it can be done.";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:34 PM";"So the flow would be like this:
- withdraw tx created (on AC)
- oraclefeed takes utxos and make utxo to temp address in exact amount
- signing is done immediately in mempool and external tx broadcasted
- then createrawtx can be done right away without waiting for previous external tx to be mined
- signing again starts and it finishes completely in mempool
- now the real withdraw tx is broadcasted on external chain (but waiting for previous tx to be mined)";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:37 PM";"I think there was some problem with race condition for signing, and one by one tx was making it ok.";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:37 PM";"maybe separate the rawtx construction and signing";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:37 PM";"But with a baton, there will not be any race condition";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:38 PM";"each node can independently sign the same rawtx and just submit the signature in an opretuen";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:38 PM";"then you can combine M of the signatures to make a valid signed transaction";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:40 PM";"I think there will be no problem with that as long as I'm using sequential signing with a baton. If two nodes want to sign and spend baton at the sametime, one will succed and other won't as baton will be spent";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:42 PM";"This temp address thing wil take one more txfee from the external funds so the user will receive amount-2*txfees-non-spending marker fee. For expensive coins I think we can set txfee to minimum and marker fee can be like 1k sat";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:43 PM";"We could also make markers 1 sat, is there anything against this?";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:50 PM";"it might fall below dust threshold";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:50 PM";"can the marker be on the AC side?";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 01:50 PM";"i mean baton";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:56 PM";"Baton is on AC side, but the non-spendable marker to mark that the external withdraw has been executed and prevent double withdraws must be on external chain. That is why I'm asking how low we can go with the amount?";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 01:57 PM";"And baton on the ac side will in the end be spent to the nodes pubkey which does markdone tx on AC";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 02:00 PM";"i think 500 or 600 sats is the dust level for a lot of chains";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 02:01 PM";"Ok so we can go with 1k sat";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 02:01 PM";"This will be insignificant for BTC";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 02:01 PM";"a 10 cents per BTC withdraw is not so bad, we just need to have a minimum withdraw so the percentage is reasonable max";"";"";
"424224648889106444";"Mihailo#5902";"12-Nov-19 02:04 PM";"With 100k BTC price this will be 1$. With 10k it is 0.10$";"";"";
"455741312273219595";"jl777c#5810";"12-Nov-19 02:38 PM";"it seems acceptable, just have a minimum withdraw big enough so it is never more than 5% fee";"";"";
"424224648889106444";"Mihailo#5902";"15-Nov-19 01:59 PM";"@jl777c So I have totaly refactored the logic of gateways withdraw (for now on importgateway to test) and it seems this will be better. The flow goes like this:
- withdraw tx created by user
- when confirmed/notarized, oraclefeed takes one withdraw at the time and creates raw tx
- signing happens in mempool so it should be fast and while not signed completely no new withdraws are processed
- when it is signed completely it is broadcasted on external chain and markedone
- then new withdraw is taken from the queue and processed
So we have parallel withdraws created, but serial processing of them one by one (probably it can be more than one per block as everything happens in mempool).

And now thee is only the question of checking balance, as I think the n/2 consensus is not good because when the withdraw is broadcasted externally in that moment the balance is lowered and until it reaches n/2 nodes publishing it in the mean time another withdraw could be created. So I suggest we use minimum that is reporeted in latest oraclesdata. Even if some node reports false balance that is lower, it could only get withdraws halted until we resolve it.";"";"";
"455741312273219595";"jl777c#5810";"15-Nov-19 02:01 PM";"this does sound a lot better! serialized, but processed via mempool is a good trick!";"";"";
"455741312273219595";"jl777c#5810";"15-Nov-19 02:01 PM";"that will allow precise calculation of available balances";"";"";
"424224648889106444";"Mihailo#5902";"15-Nov-19 02:03 PM";"Yes, just hope there will not be some problem because everything is in mempool, if some tx does not reach mined block it could block others that depend on it...";"";"";
"455741312273219595";"jl777c#5810";"15-Nov-19 02:05 PM";"in that case it will get mined in the next block. given a chain of mempool tx, it cant be mined out of order!";"";"";
"424224648889106444";"Mihailo#5902";"15-Nov-19 02:10 PM";"Yeah";"";"";
"424224648889106444";"Mihailo#5902";"15-Nov-19 02:10 PM";"Just thinking if something can cause problems";"";"";
"455741312273219595";"jl777c#5810";"15-Nov-19 02:10 PM";"it might cause tx to expire and invalidate a chain if it isnt mined in time";"";"";
"455741312273219595";"jl777c#5810";"15-Nov-19 02:12 PM";"make sure to disable expiration. if you dont use nlocktime and set expireblocks to 0, it wont expire. of course, then you wont collect the rewards... so i think we need to make sure that rewards are actively collected to not lose too much unclaimed rewards. then when needed to do a withdraw, it is only a few hours of lost rewards. that will keep the mempool chain of tx all valid, regardless of how long they take to confirm.";"";"";
"455741312273219595";"jl777c#5810";"15-Nov-19 02:12 PM";"also, rebroadcasting the unconfirmed rawtx until it confirms will assure that it will eventually confirm";"";"";
"424224648889106444";"Mihailo#5902";"15-Nov-19 02:36 PM";"Are you talking about external txs or on AC?";"";"";
"455741312273219595";"jl777c#5810";"15-Nov-19 04:08 PM";"for any mempool tx chain. rebroadcasting will maximize chance it is mined sooner than later. important thing is to make sure the tx cannot expire via the mempool expiration, or for KMD via nlocktime being too old";"";"";
"424224648889106444";"Mihailo#5902";"18-Nov-19 10:35 AM";"I have set locktime to 0 for createrawtransaction on all chains, and for Sapling chains I have set expiryheight to 10000 that should be enough for approx. 7 days when blocktime is 1 min. But the withdraw will expire probably in an few hours as now when signing is in mempool it should execute at worst after hour or so (after initial withdraw tx is confirmed for chains without notarziation).";"";"";
"455741312273219595";"jl777c#5810";"18-Nov-19 10:36 AM";"ok";"";"";
"424224648889106444";"Mihailo#5902";"18-Nov-19 10:37 AM";"I didn't know that expiryheight 0 is to not expire at all, I can set 0 instead!";"";"";
"424224648889106444";"Mihailo#5902";"18-Nov-19 10:37 AM";"But I didn't get the reward part you mentioned...";"";"";
"455741312273219595";"jl777c#5810";"18-Nov-19 10:39 AM";"i guess you can claim rewards even with locktime of 0, but the output wont be valid for claiming as it needs locktime";"";"";
"455741312273219595";"jl777c#5810";"18-Nov-19 10:40 AM";"so we would need to have a daily rewards claiming among the msig nodes to minimize the lost rewards from not claiming";"";"";
"455741312273219595";"jl777c#5810";"18-Nov-19 10:40 AM";"during withdraws";"";"";
"424224648889106444";"Mihailo#5902";"18-Nov-19 10:40 AM";"Are you speaking about the rewards for holding KMD?";"";"";
"455741312273219595";"jl777c#5810";"18-Nov-19 10:40 AM";"if you remember, to claim rewards in KMD, it needs to be one hour old and be >10KMD and have locktime set";"";"";
"455741312273219595";"jl777c#5810";"18-Nov-19 10:40 AM";"yes";"";"";
"455741312273219595";"jl777c#5810";"18-Nov-19 10:41 AM";"this is the funds that pays for the msig signers running the nodes long term";"";"";
"424224648889106444";"Mihailo#5902";"18-Nov-19 10:41 AM";"Ok, I haven't at all approached the reward thing yet. Aha, ok that is the business logic for msig signers.";"";"";
