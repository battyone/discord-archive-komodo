AuthorID;Author;Date;Content;Attachments;Reactions;
"272003866906722306";"TonyL#3577";"28-Jan-19 10:25 PM";"Already imaging Bitmex notarization contracts futures shorting  😂";"";"";
"272003866906722306";"TonyL#3577";"28-Jan-19 10:26 PM";"JP Morgan struggles to notarize their blockchain on CFEK next month";"";"3040_kingpeepo (2),2561_feelsevilman (2)";
"232679450301431808";"blackjok3r#3181";"28-Jan-19 10:56 PM";"finally got this working...";"";"";
"232679450301431808";"blackjok3r#3181";"28-Jan-19 10:56 PM";"```c
    if (nFile != *lastfilep) {
        if (!fKnown) {
            LogPrintf(""Leaving block file %i: %s\n"", nFile, (*ptr)[nFile].ToString());
        }
        FlushBlockFile(!fKnown);
        fprintf(stderr, ""nFile = %i size.%li\n"",nFile,tmpBlockFiles.size());
        if ( tmpflag != 0 && tmpBlockFiles.size() >= 4 )
        {
            if ( nFile == 1 )
            {
                PruneOneBlockFile(true,TMPFILE_START+2);
                tmpBlockFiles[2].SetNull();
                LogPrintf(""Reset tempfile 2\n"");
            }
            else if ( nFile == 2 )
            {
                PruneOneBlockFile(true,TMPFILE_START+3);
                tmpBlockFiles[3].SetNull();
                LogPrintf(""Reset tempfile 3\n"");
            }
        }
        if ( tmpflag != 0 && nFile == 3 )
        {
            PruneOneBlockFile(true,TMPFILE_START);
            tmpBlockFiles[0].SetNull();
            PruneOneBlockFile(true,TMPFILE_START+1);
            tmpBlockFiles[1].SetNull();
            nFile = 0;
            LogPrintf(""Reset tempfile 0\n"");
        }
        *lastfilep = nFile;
        fprintf(stderr, ""*lastfilep = %i\n"",*lastfilep);
    }```";"";"";
"232679450301431808";"blackjok3r#3181";"28-Jan-19 10:57 PM";"cant get it to work without doint 2 at once at the bottom.. tried for hours.. Must be missing something";"";"";
"232679450301431808";"blackjok3r#3181";"28-Jan-19 11:01 PM";"```total 359M
drwx------ 3 test test 4.0K Jan 29 06:48 .
drwxrwxr-x 6 test test 4.0K Jan 29 06:58 ..
drwx------ 2 test test 4.0K Jan 29 07:00 index
-rw------- 1 test test 128M Jan 29 06:47 blk00000.dat
-rw------- 1 test test 128M Jan 29 07:00 blk00001.dat
-rw------- 1 test test  16M Jan 29 06:59 blk100000000.dat
-rw------- 1 test test  16M Jan 29 07:00 blk100000001.dat
-rw------- 1 test test  16M Jan 29 06:57 blk100000002.dat
-rw------- 1 test test  16M Jan 29 06:58 blk100000003.dat
-rw------- 1 test test  16M Jan 29 06:37 blk100000004.dat
-rw------- 1 test test 9.6M Jan 29 06:47 rev00000.dat
-rw------- 1 test test  13M Jan 29 07:00 rev00001.dat
```";"";"";
"371114647052615681";"Mylo#8306";"28-Jan-19 11:22 PM";"sounds awesome about delay.  ❤ the code 😃";"";"";
"232679450301431808";"blackjok3r#3181";"28-Jan-19 11:30 PM";"blocks nVersion is an int32 ... 
So we can flag blocks above nversion 7,000,000 with the verison = 7M + vout location of notarisation in the block.";"";"👍 (1)";
"375074477756645386";"ca333#0118";"29-Jan-19 02:07 AM";"i like the idea of re-utilizing the nVersion field as a sort of ""onchain notarization-pointer""!";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:16 AM";"I got it to kind of work. At leat I think its possible";"";"👍 (1)";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:16 AM";"`VALID NOTARISATION connect block.40004 tx.1`";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:17 AM";"At the very last step of conenct block ... if the `nVersion-7M != tx`  then the block can be invalid.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:17 AM";"So the commission just needs to check the one tx flagged by nVersion";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:18 AM";"If the actual notaristion is invalid... Then it can be rejected later";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:21 AM";"This should allow block validation to contain a coinbase based on the notarisation tx without having to check if the notarisraion is valid before the data is calcualted";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:25 AM";"lots more work to do, but I think creating the block is the easy part. Code to check comission of block should be the same as what creates it.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:27 AM";"as long as the tx used to calculate the comission (notary payout) matches the valid notarisation, then it seems fine..";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:39 AM";"This one is going to be hard to test... Need to make invalid notarisations lol";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 02:53 AM";"https://github.com/KMDLabs/komodo/commit/041c74c0a6feaf6c9fc78d31bf0e4587c81bfa05";"";"troll_compadre (1)";
"369608312955731968";"Bryan_Beus#6442";"29-Jan-19 03:29 AM";"I just read @Alright's statement. 

I don't understand the full scope, but my initial impression is that this is very intriguing!";"";"";
"369608312955731968";"Bryan_Beus#6442";"29-Jan-19 03:29 AM";"I like it.";"";"";
"420119978138664961";"CHMEX#0686";"29-Jan-19 05:11 AM";"I'm wondering how good my node is doing what shows the stats of you guys
https://pastebin.com/8Q5TijiU";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"29-Jan-19 05:17 AM";"One of these days, one of us needs to write a script that looks at each notarization and looks back at each user's percentage of notarization of available opportunity to notarize, because the numbers (especially %) in stats reset on a wallet reset";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"29-Jan-19 05:18 AM";"beyond that, it looks good to me @CHMEX";"";"";
"420119978138664961";"CHMEX#0686";"29-Jan-19 05:18 AM";"Thanks";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:02 AM";"not a good idea to be using blockversion";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:02 AM";"a lot of code relies on specific block version and will reject non-standard ones";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:02 AM";"looks to be just > 4 ?";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:02 AM";"put any such data in the coinbase vin (past block height)";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:03 AM";"explorers, SPV servers, wallets, who knows what else might be using blockversion field.";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:03 AM";"test scripts, there is no way to know";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:03 AM";"block version should be for changes in block serialization format";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:04 AM";"I think mike said he used this to determine which was a verus PoS block or not... will have to see how he did that";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:04 AM";"the problem is that the notarisation is determined as valid or not as the very last thing that happens on connect block...";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:05 AM";"yes, he changed the block format, so the block version was changed";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:05 AM";"where as we need that data to calculate the coinbase";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:05 AM";"So we need someway of doing that...";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:05 AM";"nothing is depending on the data at the end of vin0 scriptSig";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:05 AM";"or opreturn";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:05 AM";"dont use blockversion";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:06 AM";"where it can then be valid or invald upon notarisation and discarded if invalid.";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:06 AM";"i dont understand. the block needs to be valid but maybe invalid, even though it is a valid block?";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:07 AM";"yes... it is maybe valid, as long as the notarisation is all notary vins meeting minsigs....";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:07 AM";"but notarization happens later...";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:07 AM";"but if the actual notariation is invalid (wrong block hash etc) then it needs to be rejected";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:07 AM";"exactly";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:08 AM";"there is deadlock";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:08 AM";"to do it any other way I would need to know if a notarisation was valid befroe it was valid";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:08 AM";"notarization cant determine the notarized block until some confirmations";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:08 AM";"you are saying no confirmations until notarized";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:08 AM";"wont work";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:08 AM";"the coinbase is paid in the block the notarisation is included in";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:09 AM";"im rpetty sure it will work";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:09 AM";"if you could tell a block will be notarized before it is notarized, there is no need to notarize";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:09 AM";"its the same as AC_PERC but based on who made the tx rather than the toal of all txns";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:09 AM";"ok, so it can be for a past block";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:09 AM";"yes";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:09 AM";"and you assume only one notarization per block";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:10 AM";"then that is your validation";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:10 AM";"I am counting any notarisation that is matched and notarised";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:10 AM";"I am ignoring the check if it happens out of order";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:10 AM";"make sure only one notarization tx per block and that it is valid";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:10 AM";"and yes it can only pay once per block";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:10 AM";"why mess with blockformat?";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:10 AM";"just use those constraints directly";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:10 AM";"it was just an idea to get the data where it needs to be...";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:11 AM";"if it is a new notarization, valid and the only one in a block, with a single payout, it is valid";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:11 AM";"else invalid";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:11 AM";"I can put it somewhere else... but I want it to be fast... dont want to be going GetTransaction all over the place in block validation";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:11 AM";"blockvalidation already does GetTransaction all over the place";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:11 AM";"exactly ... need to uise whats already there";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:11 AM";"make context verify set number of notarizations, valid notarization, etc.";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:12 AM";"its already in RAM, iterating through again for a specific pattern match will be a few milliseconds";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:13 AM";"still makes little sense to call the entire code (code that I dnt really understand) twice... and who knows if it valid earlier than ConnectBlock....";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:14 AM";"What I got working earlier should work fine... just need the notarisation flagged somwhere.";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:15 AM";"ok, but dont use block version";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:16 AM";"We aready havbe code in the miner that sets a notarisation as max prioroty so it can easily skip any notarisations after it adds 1. Then it flags where this notarisation is (could even force it to be tx.1, which would solve many issues.)";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:17 AM";"then the consensus code can validate that the miner logic was used";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:17 AM";"yes";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:17 AM";"no need to search if it is constrained";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:17 AM";"similar to how CC works";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:17 AM";"this was the plan... as a back up if the noarisation is invalid then the block can be rejected.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:18 AM";"but not ""invalid"" as in out of order, as I dont see that really possible to enforce";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:18 AM";"as long as `notarized =1` and `matched =1`";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:19 AM";"the tricky part is chaging how ERA's activate to use something liek the sapling code... so that its accurate enough to determine coinabases.";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:19 AM";"as it all boils down to a single fuinction I dont see this being super difficult";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:26 AM";"why cant an increasing height order of notarization be enforced?";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:27 AM";"I guess it could... but it would need to be decoded in the miner and checked... and I am not sure how to do that";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:27 AM";"height > NOTARIZED_HEIGHT";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:27 AM";"getinfo displays the notarized height";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:27 AM";"🤔";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:28 AM";"so it has code that gets the current notarized height";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:28 AM";"I dont think getting the current height is the problem... its the notariation itself...";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:28 AM";"I would need to decode it";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:29 AM";"by dooing that also, it makes the code for MoMoM that scans 100 blocks for MoMoM hash no longer requiored";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:29 AM";"as all notarisation are now in order with max 1 every block";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:30 AM";"height is the first 4 bytes";"";"👍 (1)";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:30 AM";"just verify height is > NOTARIZED_HEIGHT";"";"";
"455741312273219595";"jl777c#5810";"29-Jan-19 06:30 AM";"then if anything else is wrong block validation will reject it";"";"";
"232679450301431808";"blackjok3r#3181";"29-Jan-19 06:48 AM";"that is also working,,, on validation side... 
The inly thing I am concerned with is, that if you make a notarisation invlaid in a block then a MoMoM hash will be missing... So I dont think enforcing the height is a great idea...";"";"";
