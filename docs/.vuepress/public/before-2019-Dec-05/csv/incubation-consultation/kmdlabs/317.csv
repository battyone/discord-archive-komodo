AuthorID;Author;Date;Content;Attachments;Reactions;
"405011811511828481";"Alright#0419";"01-Mar-19 01:14 PM";"or CEX stakes coins for users";"";"";
"405011811511828481";"Alright#0419";"01-Mar-19 01:14 PM";"and again takes a %";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:14 PM";"So its simply only there to provide a full daemon thats always online?";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:14 PM";"`with a staking pool ... what is the goal of it? `
100 people with 100 coins ....
10000 split 64 ways stakes better than 100 split 64";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:14 PM";"no other reason?";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:15 PM";"not exactly";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:15 PM";"more utxo always stakes better than less utxo";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:15 PM";"but a single wallet/staking loop can onyl handle so much on a give CPU core....";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:15 PM";"it gets to a point where it takes longer to process the utxos than ti does to buil;d a block, and you never find anything";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:16 PM";"`more utxo always stakes better than less utxo`
Well, that was me over simplifying, the idea is that the sum will carry larger weights over each UTXO";"";"";
"448777271701143562";"smk762 -  dracocanis ominator#7640";"01-Mar-19 01:16 PM";"still getting ` [CFEKDIMXY] ABORTING!!! failed to update please build manually using ~/komodo/zcutil/build.sh to see what problem is! Help Human! 
`
what am i doing wrong?";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:17 PM";"Really what we need is a way to have multiple wallets, then pass the miner loop a wallet to use... so you can stake with X cores using X walelts. Then a single node can have a million utxo providede it has enough cores avalible";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:17 PM";"not sure it worked for me 😂";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:17 PM";"can I get remote access to you node to try and debug it?";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:19 PM";"`Your account has a new invoice in the amount of $70.72.`
heh, 3 servers and 1/2 the cost of what I spend on 🚬 
remind me again why any of us owns more than 1  physical PC?";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:20 PM";"so that somone cant delete your account";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:21 PM";"sure, sure; be all realistic and burst my happy bubble ☹";"";"";
"405011811511828481";"Alright#0419";"01-Mar-19 01:22 PM";"this time last year you were all about ""I don't use hardware I don't own""";"";"";
"405011811511828481";"Alright#0419";"01-Mar-19 01:22 PM";"or I think you said you don't use computers you can't kick";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:22 PM";"that was before joker showed me a cheap DC and I was paying $1500 a year per dedicated";"";"";
"405011811511828481";"Alright#0419";"01-Mar-19 01:22 PM";"something like that";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:24 PM";"iirc, it was also before I started running a public pool that I don't want tied to my personal IP 😛";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:37 PM";"yeah I have 1 VPS with them for ZEX pool... has been solid as 😃";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:37 PM";"apart form that I prefer to just add VMs to my server...";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:41 PM";"with my bandwidth, I've decided my local server is pointless (I have 1/3 the ping time I had in the Sydney test and still have less notarizations than Sydney had); going back to remote in the next few days";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:42 PM";"yeah a fast connection is required";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:42 PM";"man im having a lot of trouble trying to figure out how to implemnt a fix for the MoMoM problem";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:42 PM";"call dad";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:43 PM";"im my brain ... I keep comming back to one thing";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:43 PM";"it should not be using notarization data that isnt notarized";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:44 PM";"seems a extremely large change to the code though...";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:45 PM";"I'm not sure I completely understand the problem, so I'm not much help";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:45 PM";"its actaully quite simple what it turned out to be";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:45 PM";"when you make an export transaction";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:46 PM";"it cannot proceed past the ""sign on KMD step"" until the needed MoM hashes are confirmed on KMD";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:46 PM";"but iguana doesnt wait";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:46 PM";"if the last notarization isnt conformed it just makes a notarization with NULL as the MoMoM hash";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:47 PM";"then the next notarization it just skips them, as ti onlg looks for 2 MoM's to create a MoMoM";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:48 PM";"wouldn't the ""simple"" fix be to wait if not confirmed?";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:49 PM";"the failed imports line up excatly with the nul MoMoM hashes on the target chain.";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:49 PM";"kind of...";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:49 PM";"if its confirmed it can still; be reorged";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:49 PM";"the proper fix is to use a notarization that has been notarized to create all MoMoM hashes";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:50 PM";"I think its only a KMD daemon change...";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:50 PM";"KMd is already very slow...";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:50 PM";"adding more limitations will slow it down even more";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:51 PM";"@jl777c Do you have a few minutes to discuss this ?";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:52 PM";"since iguana is making the tx, why would the change be in the daemon instead of iguana?";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:52 PM";"iguana will need a small change... but the easiest is to use the daemon to return iguana some kind of error to make it bail out";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:52 PM";"ahh";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:52 PM";"the daemon has all the required data avalible in RAM to make a decisision quite fast";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:53 PM";"where as iguana knows nothing";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:53 PM";"its  stupid lizard";"";"";
"474206298427097099";"ComputerGenie 👴🏼📢#7004";"01-Mar-19 01:53 PM";"lol";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 01:54 PM";"seems a good thing to add";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:54 PM";"its the only way to fix it that will properly fix it... but Im not sure how to do it";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 01:54 PM";"iguana depends on komodod for all the MoM* stuff";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 01:54 PM";"can you detect when it is likely to cause an error and then send back some message to skip a step?";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 01:55 PM";"right now the iguana asks komodod for the MoMoM data to notarize";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 01:55 PM";"alternatively maybe we can sidestep the issue by adding another notarization delay";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:55 PM";"I have seperated the entire MoM logic to the database... which is a good start. technically all it needs to do is ignore the first ntoarization returned in the database... but as its on KMD that isnt exactly correct, as it neds to be notarized by a KMD checkpoint not the assetchain";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:56 PM";"in the database it has a KMD height saved... so it should return an error unless the 2 MoM hashes it has chosen are notarized by the last KMD checkpoint";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:57 PM";"`uint256 MoMoM = CalculateProofRoot(symbol, ccid, kmdheight, moms, destNotarisationTxid);`";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 01:57 PM";"so it can return all 0 unless it is ready?";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:57 PM";"there is 2 place is calls that... they need to bothreturn the exact same data 100% of the time";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:57 PM";"it already returns 0 when tis not ready, but the first 2 notarizations on the chain need to be 0";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:58 PM";"an easy hack is to just enable MoMoM after some set height and make sure the chain is notarized before this height";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 01:58 PM";"oh, so it is just an initial conditions issue?";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:58 PM";"then cancel the notarization if 0 is returned";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:59 PM";"the first 2 notartizations need to be mull MoMoM or the iguana cannot reach consensus";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 01:59 PM";"komodo is counting the total notarizations per chain, so if ( total_notarization < 2 ) send null to MoMoM calc ?";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 01:59 PM";"I think that works yes.";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:00 PM";"we can set this bool to a static variable? so the first time it need to scan the DB then after that it just knows it has 2?";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 02:00 PM";"static across restarts?";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:00 PM";"after a restart it scan the DB";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:01 PM";"wait no... that doesnt really work.. as each chain would need its own staic variable 🤔";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 02:01 PM";"sure, why not, it shouldnt take that long to scan";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 02:01 PM";"in the sp-> struct";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 02:01 PM";"each chain has its own sp-> data structure for this sort of thing";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:01 PM";"this is on the KMD daemon not the AC";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:01 PM";"I may have disabled that path totally";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 02:02 PM";"oh...";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:02 PM";"wasnt being used";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:02 PM";"MoM only uses the DB";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:02 PM";"so I made it only use that";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:03 PM";"it appears to be able to scan a very laerge amount of DB entries in like a millisecond, so maybe its not so bad to check each time...";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 02:04 PM";"ok, how about this:
on the first and second notarizations for a chain, make a DB entry symbol.first <- notarization, symbol.second <- notarization
if both those exist, then 2+ have been done
and on new notarization if first and second are not there, make first. if first is there but second isnt, make second";"";"👍 (1)";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:05 PM";"That seems fine... implementation still needed but this is a good start";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:06 PM";"hmm I could add an extra entry in the notarisation DB structure that is just a bool flag.";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:06 PM";"once 2 happened... sets to true";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:07 PM";"only have to scan back 1 notarization and if true, then MoMoM is calulated";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:07 PM";"if not MoMoM is null... 
if MoMoM is null when true tell iguana to cancel round";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:09 PM";"what about the timing of MoMom can we delay it by 1 notarization without any illl effects?";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 02:10 PM";"i was always nervous about the aggresive timing for MoMoM, i think making it wait for another notarization at a critical time, should make it a lot more stable";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:10 PM";"it simply needs to do this";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:10 PM";"there is no possible way to have it work pefectly without the data its using to be 100% relaible... ie. it must be notarized";"";"";
"455741312273219595";"jl777c#5810";"01-Mar-19 02:11 PM";"yes, good.";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:11 PM";"I think its just a case of making sure both calls to `    uint256 MoMoM = CalculateProofRoot(symbol, ccid, kmdheight, moms, destNotarisationTxid);`";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:11 PM";"are checking for the same condition";"";"";
"232679450301431808";"blackjok3r#3181";"01-Mar-19 02:11 PM";"then in can never fail";"";"";
