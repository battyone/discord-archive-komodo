AuthorID;Author;Date;Content;Attachments;Reactions;
"507209916449292303";"dimxy#2587";"03-Jun-19 02:10 PM";"Yes, this is a very good point that in v2 we will have different guarantors amounts for a lock-in-loop account.
We need a solution for this, either keep a log or a vector of all endorsers value or markers or something like this. Working on this...";"";"üëç (1)";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 02:20 PM";"There are also avalists. Issuer and endorser may add blockage amount and especially avalists in community layer may add collaterals with avalpercentages. The 3x boosted staking will help a lot against nonredemption in trust based version. Collective fund of collateralization with certain shares of each person will work well also in Version 2.";"";"";
"507209916449292303";"dimxy#2587";"03-Jun-19 03:40 PM";"Yes I see that for v2 lock-in-loop funds needs to be managed more flexible.
And one more question:
Suppose we have an issuer and endorser who now owns the baton.
When this endorser passes the baton to a next holder we require that he could never refuse to lock his coins in credit loop, yes? 
(so if he does not have coins but he wants to sell goods for batons and buy goods for batons he could not do this without locking funds. And this is despite that the issuer already locked 100% collateral) 
And yet another: 
what about something like a change from a baton's amount (maybe it could be passed off-chain)?";"";"";
"507209916449292303";"dimxy#2587";"03-Jun-19 04:17 PM";"(sorry if I'm asking what was already decidedüòÄ )";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:01 PM";"Thanks for asking. It is not very clear in document. Let me clarify. The baton transfer process always starts with marmarareceive first. That is started always by endorsers. In the first case, the first endorser starts process by using marmarareceive. The issuer should lock into activated to make marmaraissue. The baton is only created after the marmaraissue is done. But the baton is not transferred yet to first endorser. When the first endorser makes marmarabatonapproval, the baton is actually transferred to the first endorser and the activated coins are transferred to boosted.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:01 PM";"But there is something herein.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:02 PM";"What happens if marmarabatonapproval is not invoked by the first endorser or later other endorsers?";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:03 PM";"Then the coins will stay locked in activated. The baton Remains in issuer but not transferred to the first endorser.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:04 PM";"And for later nodes, just replace the marmaraissue with marmaratransfer.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:07 PM";"Please remember. These operations happen after they were sitting and drinking tea and finally making handshaking for the deal.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:08 PM";"Unless baton is approved by endorser the baton is not transferred.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:09 PM";"Btw, marmarabatonapproval is not available in current codes";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:11 PM";"We have added it with Version 2 requirements since avalist percentages and escrow details were necessary to be confirmed further with an addional step before transfer happens.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:17 PM";"The coins remaining in activated is not a problem if baton is not transferred since the node can always use that later for issuing/endorsing new credits.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 07:30 PM";"@dimxy In the original design of Version 1 , 100% collateralization is possible at any stage. You can use Credit/(N-1) share for each one to pay for the settlement at the end. No need to go from top to bottom in Version 1. I had told that top-to-bottom for Version 1 after @jl777c said it would be problem with performance when there are too many nodes in credit loop. But since there is a common fund now in each credit loop, I assume there will not be a performance issue. The only thing to take care is to make sure each contributor gets earning/bonus relative to his/her share from power of 3x boosted staking. Earnings should be arranged with each holder coming into the credit loop.";"";"";
"507209916449292303";"dimxy#2587";"03-Jun-19 08:35 PM";"Thank you for the clarification, about marmarabatonapproval I also wanted to ask.
So in version 2 will we remove marmarareceive which now is called before marmaraissue 
and replace it with marmarabatonapproval which is called after marmaraissue?
Or am I mistaken?";"";"";
"507209916449292303";"dimxy#2587";"03-Jun-19 08:40 PM";"And also in v2 before marmarabatonapproval there might be several more transactions with some data about avalists or escrow (that is with info about collateral)";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 09:20 PM";"It will be same in both versions. It will be as follows for 3 nodes:-
Step 1: First endorser makes marmarareceive from issuer
Step 2: Issuer makes marmaraissue to first endorser (baton is created)
Step 3: first endorser makes marmarabatonapproval. Now baton is transferred to first endorser 
Step 4: holder makes marmarareceive from first endorser 
Step 5: first endorser makes marmaratransfer to holder
Step 6: holder makes marmarabatonapproval from first endorser. Now baton is transferred to holder.


Yes. In Version 2, there will be transactions before each marmarabatonapproval. At the initial step, the issuer might set escrow and also before every marmarabatonapproval between issuer/first endorser and endorser/holder there may be avalist transactions.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 10:06 PM";"There is chart for Version 2 in related requirements document. You can see that main differences are in escrow and avalist functions. There are also some additions for settlement and defaulting as well as Oracles functions.";"";"üëå (1)";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"03-Jun-19 10:42 PM";"The last one is always called holder. When he/she finds someone to transfer baton/credit, he/she becomes the last endorser just before the new holder.";"";"üëå (1)";
"507209916449292303";"dimxy#2587";"04-Jun-19 07:27 AM";"Some notes about this:
```Step 1: First endorser makes marmarareceive from issuer
Step 2: Issuer makes marmaraissue to first endorser (baton is created)```
Technically, at the Step 2 Issuer would create a transaction to self (as the baton not yet passed to the endorser)

```Step 3: first endorser makes marmarabatonapproval. Now baton is transferred to first endorser```
Baton belongs to that pubkey who owns the utxo with it
So at the beginning of this step 3 baton is still owned by the issuer.
And in order to transfer the baton to the endorser I believe we would need another rpc method which should be called by the issuer.
I'm afraid we could not transfer the baton with marmarabatonapproval as it is called by the first endorser who does not own the baton yet and therefore cannot transfer it to himself.";"";"";
"455741312273219595";"jl777c#5810";"04-Jun-19 07:34 AM";"i think the way v0 did it is that the marmaraissue sends the baton to the first endorser, the marmarareceive creates the baton to the issuer, so the issuer is able to spend it to the first endorser. who after the marmaraissue has the baton. not sure why it needs to be approved after it was all started with a marmarareceive";"";"";
"455741312273219595";"jl777c#5810";"04-Jun-19 07:34 AM";"maybe i remember some details wrong as it was a long time ago";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 10:45 AM";"I added marmarabatonapproval as additional step later. The idea is that when endorsers ask for baton with marmarareceive some parameters are not known yet. Those parameters are for functions related to escrow and avalist details. I thought If marmarabatonapproval is not added, the first endorser has to accept all parameters defined by issuer with marmaraissue. Similarly the other ensorsers and holder have to accept the baton with marmaratransfer. I tried to explain the reason for adding marmarabatonapproval in Version 2 document as well. I don't know if it is clear. I can explain in more detail if requested. If you suggest another alternative to make it technically easier, we can change. One alternative is to let enodersers/holder to define escrow and avalist parameters with marmarareceive and let the issuer/endorsers accept by means of marmaraissue and marmaratransfer. Then we need a complete rewrite for  requirements documents of both Version 1 and 2.";"";"";
"455741312273219595";"jl777c#5810";"04-Jun-19 10:48 AM";"ah, ok, so it is for additional parameters and not the baton. in this case the first endorser would have the baton already and just send it to himself";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:00 AM";"I just want to understand when and how the baton is created initially and transferred in the later steps. It starts with marmarareceive first by the first endorser. Then the issuer makes marmaraissue and later the first endorser makes marmarabatonapproval. In later steps, the marmaraissue is replaced by marmaratransfer.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:22 AM";"@jl777c If the baton is created with marmarareceive then it must be the first marmarareceive since other endorsers also use marmarareceive.";"";"";
"455741312273219595";"jl777c#5810";"04-Jun-19 11:24 AM";"each transaction can spend it and recreate the next baton";"";"";
"455741312273219595";"jl777c#5810";"04-Jun-19 11:24 AM";"input -> output";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:42 AM";"I think the additional marmarabatonapproval would not be a problem then. We can trace the credit loop.";"";"";
"507209916449292303";"dimxy#2587";"04-Jun-19 11:43 AM";"Actually in the current implementation baton is created in the first marmaraissue

'R':  this is marmarareceive
 vins normal
 vout0 approval to senderpk (issuer or owner of baton)
 
 'I'    marmaraissue
 vin0 approval from 'R'
 vins1+ normal
 vout0 *baton* to 1st receiverpk
 vout1 marker to Marmara so all issuances can be tracked (spent when loop is closed)
 
 'T'  marmaratransfer
 vin0 approval from 'R'
 vin1 baton from 'I'/'T'
 vins2+ normal
 vout0 *baton* to next receiverpk (following the unspent baton back to original is the credit loop)";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:45 AM";"We can change the function name, the marmarabatonapproval  if it is misleading. It is just to make a further check by the endorser/holder to see if escrow and avalists are acceptable to him.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:47 AM";"We can call it marmaracreditapproval if you want. @jl777c @dimxy";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:47 AM";"Or another name.";"";"";
"507209916449292303";"dimxy#2587";"04-Jun-19 11:49 AM";"I can see an issue that if we do not send the baton to the next receiver in marmaraissue or marmaratransfer then we would need one more rpc to make baton transfer";"";"";
"507209916449292303";"dimxy#2587";"04-Jun-19 11:51 AM";"because marmarabatonapproval is called by the receiver and he would not be able to transfer the baton from the current baton owner";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:51 AM";"Who will make it? The issuer?";"";"";
"507209916449292303";"dimxy#2587";"04-Jun-19 11:52 AM";"yes, the one who owns the baton";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:52 AM";"And of course, the endorsers/holder in later steps?";"";"";
"507209916449292303";"dimxy#2587";"04-Jun-19 11:52 AM";"yes";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:53 AM";"What about marmarabatontransfer?";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:53 AM";"By issuer first and later by endorsers/holder.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:55 AM";"So after every marmarabatonapproval, there will be marmarabatontransfer by the prior node to the one who makes marmarareceive initially and marmarabatonapproval later.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:57 AM";"It will be like parameter approval between two nodes.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 11:58 AM";"The parameters related to version 2.";"";"";
"507209916449292303";"dimxy#2587";"04-Jun-19 11:58 AM";"yes it could be it, 
I just wanted to say marmarabatonapproval cannot transfer the baton as it is called by the receiver
So yet another call from the baton owner is required";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:00 PM";"Ok then. I can modify documents. But you can go ahead with marmarabatontransfer.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:01 PM";"Actually marmarabatonapproval is needed in Version 2. That is for parameters required such as blockageamount, escrow and avalist functions.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:02 PM";"You can even check and ignore that function in version 1 if you want.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:03 PM";"In automated mode of Version 1, that is not needed.";"";"";
"507209916449292303";"dimxy#2587";"04-Jun-19 12:08 PM";"I read again your workflow description above. Maybe I missed the idea.
Probably the idea was like this:
in marmaraissue an issuer creates baton and transfers it to a receiver. So it actually is transferred but is on hold in this step
But the receiver does not use the baton until he approves it with marmarabatonappoval. In this case he would just send it to self";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:10 PM";"Exactly.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:12 PM";"And marmarabatontransfer by issuer or endorser validates the marmarabatonapproval. This is for additional parameters in Version 2.";"";"üëå (1)";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:14 PM";"And if we use automated mode in Version 1, both the marmarabatonapproval and marmarabatontransfer may be omitted since we don‚Äôt need to use those additional parameters in Version 2.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:19 PM";"Just to remind, to differentiate whether we are using Version 1 is autoinsurance is 1.";"";"üëå (1)";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:21 PM";"And autosettlement is always true in case of autoinsurance is on";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:23 PM";"If autoinsurance is 1 then both marmarabatonapproval and marmarabatontransfer are not needed.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"04-Jun-19 12:29 PM";"In document, there is place saying 
``` ... have 2 times more chance for staking than other activated coins. ```

It should be 3 times not 2 times for staking if coins are locked in credit loop. We changed it to 3x later.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"06-Jun-19 11:33 AM";"@dimxy How is everything? Any code yet?";"";"";
"507209916449292303";"dimxy#2587";"06-Jun-19 11:35 AM";"I'm working on the code
I hope I will have a version on the nearest weekend";"";"üíØ (1),üëå (1),üëç (1),üëè (1)";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"06-Jun-19 11:36 AM";"That is great news.";"";"";
"507209916449292303";"dimxy#2587";"06-Jun-19 11:44 AM";"sorry for the delay (had some outstanding work to do)";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"06-Jun-19 11:55 AM";"No problem.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"08-Jun-19 09:51 PM";"Komodo is doing really good crisis management during these difficult days thanks to the proactive/creative decision by Komodo community with the leadership of @jl777c. Remember! After the big theft in Ethereum World, the Ethereum community was separated into two groups. And unfortunately, not only the thief but the pragmatism had won the game. The most essential law of blockchain World, i.e. the immutability was ignored. Ethereum was forked and the original Ethereum community who was saying ‚Äúcode is law‚Äù became Ethereum Classic but the pragmatist ones stayed with the name Ethereum to surprise of people. Of course, those days were very difficult not only for them but also for blockchain World. 

I think the attack against the Komodo was more serious, involving many of accounts. But the decision of hacking the accounts into safe wallets for benefit of investors was very creative and saved many people‚Äôs investments and reassured the trust on Komodo. 

Agama is a nice tool, and I hope there will be betterment for the product, or better products will be developed.

I firmly believe that the choice of Komodo for Marmara Chain was the best choice and still best choice with the requirements of Marmara Credit Loops which cannot be fulfilled with any of existing tools yet except Komodo.";"";"üëç (4),Komodo (2)";
"507209916449292303";"dimxy#2587";"10-Jun-19 03:01 PM";"Hello,
I think I have a working version of marmara cc (close to v1.1. I believe)
What's new:
- activated coins now locked to max height
- added lock-in-loop account which is shared equally among the issuer and all endorsers
- in the settlement the lock-in-loop account is spent from the issuer and endorsers consequently and sent to the holder normal address. State of lock-in-loop fund is shown in marmarainfo
- added support for 2x stake for multiplier and 3x for lock-in-loop funds (I have not tested this yet as I need to start a new chain for this)
- no marmarabatonapproval yet

Sorry for the delay but I needed to add some infrastructure code like support of sharing the lock-in-loop fund and designating the ownership for each share and more
(Do I understand it right we agreed for the current version that the issuer and endorsers receive the equal part of lock-in-loop account and these amounts are spent in settlement?)
https://github.com/dimxy/komodo/tree/marmara-v1-1";"";"üëç (3)";
"405380797537976320";"Cryptoon#3362";"10-Jun-19 06:02 PM";"Nice!";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"10-Jun-19 07:12 PM";"@dimxy great. Congratulations. We aggreed that the settlement in the Version 1 mode is in equal between all except the holder. Shall we start the blockchain to start the tests? We need to define the parameters according to document.";"";"üëç (1)";
"507209916449292303";"dimxy#2587";"10-Jun-19 07:13 PM";"yes, except the holder.";"";"";
"507209916449292303";"dimxy#2587";"10-Jun-19 07:14 PM";"I suggest starting a staked chain.
I will also deploy my own chain with PoS";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"10-Jun-19 07:16 PM";"We need to use exactly same parameters according to specifications in requirements document.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"10-Jun-19 07:16 PM";"Btw, Version 1.1 means fiat support with gateways. Is it according to Version 1.0 or Version 1.1?";"";"";
"507209916449292303";"dimxy#2587";"10-Jun-19 07:18 PM";"ah, then it is actually v1.0 with the latest requirement updatesüòÄ";"";"";
"507209916449292303";"dimxy#2587";"10-Jun-19 07:18 PM";"no fiat yet";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"10-Jun-19 07:19 PM";"Ok. We would be very happy. üôÇ";"";"";
"507209916449292303";"dimxy#2587";"10-Jun-19 07:24 PM";"yes, let's improve this version and make it follow the requirements";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"10-Jun-19 07:28 PM";"Perhaps @jl777c may be helping in parameters. But unfortunately he must be busy with sorting out the recent problem. We may prepare komodod with parameters, maybe he can check them before starting chain.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"10-Jun-19 07:33 PM";"The name will be MCL0. The block reward is 30 MCL0 per block per minute. 25% mining, the remaining is staking with activated plus boosted where boosted has 3x more chance for staking.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"10-Jun-19 07:34 PM";"2 million will be premined.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"10-Jun-19 07:36 PM";"The blockchain fund is approximately 5% annualy.";"";"";
"507209916449292303";"dimxy#2587";"10-Jun-19 08:24 PM";"for me he suggested to build a chain `with -ac_marmara=1 -ac_staked=75,
probably -ac_perc and -ac_script to pay fixed percentages to several fixed pubkeys`
As I see it, the trick is to make it staked. 
There is an instruction for -ac_staked param
https://developers.komodoplatform.com/basic-docs/installations/asset-chain-parameters.html#ac-staked";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 12:32 AM";"Yes. The key is to make it staked. We used the following for the previous testchain 
```./komodod -ac_name=MTST3 -ac_staked=50 -ac_cc=27410 -ac_marmara=1 -ac_supply=100000 -ac_reward=300000000 -addnode=136.243.58.134 -reindex & ```";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 12:33 AM";"The staking was 50. Now it should be 75.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 12:40 AM";"For the new test chain, it can be as follows:-
```./komodod -ac_name=MCL0 -ac_staked=75 -ac_cc=??? -ac_marmara=1 -ac_perc=??? -ac_pubkey=??? -ac_supply=2000000 -ac_reward=3000000000 -addnode=? -reindex &```";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 12:46 AM";"I think -ac_pubkey should be the blockchain fund in the third layer. That will be used against nonredemption especially in Version 2 and for credit loop transfer fees required in Version 1. The -ac_perc should be something to poduce roughly 5% annually.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 12:50 AM";"@jl777c can tell how to arrange internal parameter to make the boosted staking for coins in locked-credit loop 3x more than activated  ones,";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 02:26 AM";"@dimxy Is this the most recent code? 
https://github.com/dimxy/komodo/blob/marmara-v1-1/src/cc/marmara.cpp";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 02:30 AM";"I quickly checked the functions. I think the reserved keywords related to Version 2 are ignored. There is not much parameter change when compared to the most recent code that we had tested. I also saw randomization to lock between 3 months to 2 years for the coins. We don't need it since all will be locked to maximum height. Maybe it is not the most recent code that you have produced. We can test them anyway.";"";"";
"507209916449292303";"dimxy#2587";"11-Jun-19 05:57 AM";"@B. G√ºltekin √áetiner  that link  above is the latest code,
the rpc signatures almost are not changed (except marmaralock for which the height param is ignored)
randomization for 3 month - 2 year is not used now and commented out.";"";"";
"507209916449292303";"dimxy#2587";"11-Jun-19 06:00 AM";"the 3rd level fund is not implemented yet";"";"";
"507209916449292303";"dimxy#2587";"11-Jun-19 06:05 AM";"chances for coins for staking are set in the code (we may make them as chain params, of course)
Now I set for activated 2x multiplier and for locked-in-loop 3x multiplier.
Seems this is incorrect and I should use for activated 1x and for locked-in-loop 2x values of multipliers, yes?";"";"";
"507209916449292303";"dimxy#2587";"11-Jun-19 06:33 AM";"about the chain params I think we might use:
ac_cc=2 (as long as we do not need to migrate coins in the chain's cluster)
ac_pubkey is probably not needed (it allows for this pubkey to create more coins)
addnode is the ip address of the first chain node.
It is good to create at least 3 nodes in the chain to have an issuer, endorser and holder";"";"";
"455741312273219595";"jl777c#5810";"11-Jun-19 06:45 AM";"if there will be a founders reward, -ac_perc=xxxx -ac_founders=1440 -ac_script=<multisig script> can be added";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 07:53 AM";"1. Would it be difficult to change the headers for parameters compatible with Version 2? When the parameter is invoked it would just give a warning as such ‚Äúnot implemented yet‚Äù.

2. Yes. The activated should be 1x for activated and 3x for locked-in-loop.

3. I am not sure for -ac_cc. In the future, there might be clusters due to high traffic. Suggestion by @jl777c is ok for us.

4. We are planning to use inflation fund to use against nonredemption. I think -ac_pubkey is needed in that case. My question is whether -ac_founders and _ac_pubkey are mutually exclusive which means when we choose one the other option cannot be chosen. If that is the case, we do not need -ac_founders at all.";"";"";
"455741312273219595";"jl777c#5810";"11-Jun-19 07:57 AM";"-ac_pubkey/-ac_script are similar. using -ac_script, it can go to any script address, including a CC vout, multisig. if we want it sent to just a single pubkey then -ac_pubkey should be used";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 08:33 AM";"I guess if we use -ac_script with ac_founders, we can have multiple accounts. And inside this script, we can have different percentages coming from -ac_perc. Suppose one address can be used as nonredemption fund Shown as in the third layer in requirements document and it can get 90% of -ac_perc while 10% can go to actual founders to have a flexibility against nonredemption. That 10 % will give a flexibility to founding team. In that case we need to write some script as well. Did I understand correctly?";"";"";
"455741312273219595";"jl777c#5810";"11-Jun-19 08:34 AM";"yes, you can create a payments CC that allocates to N different pubkeys a set percentage and then bootstrap the chain so the -ac_perc goes to this address,but this is a bit tricky and it is best that we do it next week as all the people who have experience for it are saturated with the new release";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 08:36 AM";"No problem. We have no hurry. Thanks.";"";"";
"455741312273219595";"jl777c#5810";"11-Jun-19 08:36 AM";"if you can specify the exact percentages and pubkeys, then that can be used to create the chain";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 08:37 AM";"Ok.";"";"";
"396753788150611968";"B. G√ºltekin √áetiner#0626";"11-Jun-19 08:38 AM";"I guess we can use barterdex to define pubkeys with any prlvkeys that we want";"";"";
