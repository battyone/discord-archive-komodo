AuthorID,Author,Date,Content,Attachments,Reactions
"403206506171990047","artik123#2884","24-Dec-19 12:10 AM","@Decker  @jl777c There is a need for an *account* abstraction layer that translates the UTXO-based model to an account-based interface for a VM (EVM or other).
Similar to what QTUM does. I really don't see potential for mass adoption without it.","",""
"403206506171990047","artik123#2884","24-Dec-19 12:27 AM","Maybe there is also no need for VM. but any case, account based contracts are already an industry standard. dapp devs don't need to know the deep internal stuff. It is better to shield it from them.
It is much more intuitive for devs, that, combined with the benefit of the underlying security of utxo.
Not to mention tapping into the ecosystem around account base smart contracts.(development of tools, migration etc.)","",""
"403206506171990047","artik123#2884","24-Dec-19 04:17 AM","Average dev is not going to learn linux in order to develop a smart contract on komodo nor to learn utxo internals.

We should have a measurable, bold audacious goal.
If an average dev, *for any reason*, can't have his chain with his own contract up and running over a weekend, then imo, we have failed to deliver.

imo all these things are needed for that: 
1. komodod development on windows in msvc (and possibly also other projects in komodo ecosystem)
2. account abstraction layer
3. sdk - we can have this account layer interface to interact with sdk for many programming languages (with working examples).
(Even a language like C# .Net that is compiled to byte code, can be compiled directly to assembly. There are tools for that).

This is the way for thousands of chains.

It is understood that we don't have the resources that others have. But at least we can control the priorities and get this gate open as wide as possible and inclusive for devs as possible and let the magic happen","",""
"371114647052615681","Mylo#8306","24-Dec-19 06:14 AM","hey thanks for invite to conversation over here @artik123 

it's easy to make suggestions, but it's very hard to implement them.  suggesting changes to developer workflows who are already working well is even a bigger task.

C++ is not the issue, bitcoin has been rewritten in rust by parity, c by jl777 - btc protocol is not a text based protocol - instead of http where it's text across a wire, it's a cryptographic puzzle.  on top of that, it's also low level bit-wise reconciliation/accounting for every satoshi.   it's a hard protocol.  finding info on bitcoin development setup of IDE / tutorials is not easy.  e.g. `https://blog.lopp.net/how-to-set-up-an-ide-for-developing-bitcoin-core-on-linux/` was not in my first 3 searches & clicks.  maybe youtube is better to search.  __without an understanding of bitcoin, learning komodo is __

i'm busy for the next 6-8 weeks but cclib is the easiest entry point to customizing your ""contract"".  i have a copy of a chat with jl777 that has been passed around to a few ppl.  i was due to publish it, but better docs were decidedly written by a full time dev & the tech team, so my version was scrapped due to time constraints on the rebrand.  maybe i can publish it in the future anyways?

Here is some the documentation for creating custom contracts.
`http://developers.komodoplatform.com/basic-docs/antara/antara-tutorials/advanced-series-2.html`
`http://developers.komodoplatform.com/basic-docs/antara/antara-tutorials/advanced-series-6.html`
`http://developers.komodoplatform.com/basic-docs/antara/antara-tutorials/advanced-series-3.html#a-conceptual-understanding-of-the-intended-product`","",""
"371114647052615681","Mylo#8306","24-Dec-19 06:14 AM","**sdk**: the team will build these for specific use cases.  they have a games one on the way if you look at the github
**account abstraction**: probably do-able as a CC.  the torus project creates a simple identity bridge between oauth & eth.  similarly, an access token & refresh token in oauth can probably be used with a privkey in a similar way. using tokens etc off this type of account, probably more suited than UTXO.


go-sdk, not sure how many ppl are using it.
substrate has a lot of help from the parity team to help new projects, the same happens in kmd already - just not so many well funded projects hitting kmd atm.  but this will change as the utility and value is realized.","",""
"403206506171990047","artik123#2884","24-Dec-19 12:44 PM","@Mylo  You welcome.
you even wrote more than I did. Hehe.

Do you see what you need to go through in order to develop a contract? 
It just gives more emphasize to what I'm saying.

All I see is how hard you try, and how difficult it is. 
What I'm getting from this, is that the way things are atm, this ""platform"" cannot tap into your resources and capabilities.

Bitcoin is hard, no one said it is easy üôÇ 
Do you know of Hofstadter's law? In blockchains it has double meaning.
but it shouldn't be this hard, there are ways to make it easy, and this is what I'm suggesting.

Devs from within this community need to start their own chains with their own contracts 
to give it a bootstrap (so others could join), but atm they cannot. They are left outside. 
Almost nobody here knows how to write these contracts.

In a few years every high school kid could have his own drag and drop/plug and play customable chain plus his own 300 lines of code.

I actually don't see devs coming in, I can see devs finding other alternatives and silently dropping out. 
They will see how easy it is to have their own chain and contract elsewhere 
(I'm not saying you're going to drop out but even you started to look around, 
and when you see how easy it is to have your own chain with your own contract on PolkaDot or Cosmos, 
you will eventually reach your own conclusions).

I'm not sure if it is a platform. This is not the meaning of an open or inclusive platform. 
Actually this is the *least* inclusive for devs.

The way I see it, it will be only used by an emotionally invested, die hard, people here. 
This is not mass adoption. And this is not compatible with the definition of open and experimental software.","",""
"371114647052615681","Mylo#8306","24-Dec-19 03:29 PM","Haha hofstadter law...

Devs are virtually unmonetizable.  The new chain tech (pegs, prices etc) is to create services within ecosystem.  There‚Äôs likely to be great support for btc in this new tech.  Btc is the most valuable. The race to create btc interop services is currently on.

The new services are super valuable to kmd because of the innovative way it is created.  Collateralized debt, margin trading - no other platform offers this out of the box & in a building-block independent way.  Projects like kava & synthetix now exist but are also in early days.

New fintech start ups will literally be able to tweak existing CCs in that ‚Äúweekend‚Äù, but to create even more innovative services will need to invest some resources...on the other hand, accessing the powerful building blocks is accessible by any programming language - via wrappers, but none are developed, endorsed or maintained by Komodo for security & other reasons unfortunately.

Timing...currently it is a bear market afaik.  Kmd marketing only really existed from 2019.  The eth ecosystem has a 3-4 year headstart in this where books and courses have been invested in with the eth foundation providing a lot of funding.  Cosmos had a valuable ico and seed funding.

I‚Äôd really like to get into c++ again, but it‚Äôs been 19 years & I have financial commitments that I need to continue to uphold.  I have my own ambition for helping out in the onboarding of new ventures - which I have finished mapping out this morning.  I have set myself to implement in 6 months.  Most of it exists, just not automated.

I think there‚Äôs plenty of opportunity, it is still being built out and the only real value currently is in btc.","",""
"403206506171990047","artik123#2884","24-Dec-19 05:07 PM","I don't wish to offend anyone but tweaking an existing cc is a joke.
One should have a contract that is only limited by his own creativity and imagination.

Marketing is not the issue. Eth success was due to real adoption. 
The ease of making a contract and it has a lot to do with their erc20 token (killer app). 

The only way I know to success is power multiplier and leverage. 
Leverage of other peoples' time and other peoples' money. There really is no other way.

atm all efforts are from sheer force of the people inside this community. 
But the true power multipliers comes from the outside. outside people building on top of the platform.
It's an orders of magnitude difference.
The job of this community in general is just to enable innovation by others.
Soon enough you will have kind of dapp store to download to your chain whatever you wish for, some licensed and others for free.

If devs cannot harness the power of a platform it will be soon out grown, out numbered and out compete.

Pegs, prices, collateralized debt and dex are a nice head start.

but soon this trajectory will fade out. And when you lose the trajectory it's an end of story.
Meaning that it won't be a multichain market leader and there is never going to be another chance.","",""
"659096304672047105","rebekic#4962","24-Dec-19 08:48 PM","hello
can i ask for help please
i am stuck on syncing 99.9% , i get error ERROR: AcceptToMemoryPool: tx inputs not found
any advice please","",""
"627955021236928522","erav3n#9290","24-Dec-19 09:34 PM","@rebekic which version of wallet you used?","",""
"659096304672047105","rebekic#4962","24-Dec-19 09:49 PM","2.5 something i just downloaded new ver but not sure how to reloaded it","",""
"659096304672047105","rebekic#4962","24-Dec-19 09:49 PM","one of the users is asking wallet.dat impersonating admin","",""
"659096304672047105","rebekic#4962","24-Dec-19 09:50 PM","it is working now all good thanks","",""
"627955021236928522","erav3n#9290","24-Dec-19 09:59 PM","you should use 3.0.0.x ... older versions are outdated.","",""
