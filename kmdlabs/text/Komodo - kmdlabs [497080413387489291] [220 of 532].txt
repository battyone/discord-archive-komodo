==============================================================
Guild: Komodo
Channel: kmdlabs
Topic: Please read pinned messages
Messages: 100
Range: 
==============================================================

[13-Jan-19 06:24 AM] blackjok3r#3181
this thing is like that but worse... Its fine for simple things, but as I started adding things to it... it seemed a bit silly to have so many functions all containg the exact same code over and over.

[13-Jan-19 06:27 AM] TonyL#3577
Yeah better to keep everything as simple as possible imo - abstract from everything besides of komodo software usage logic

[13-Jan-19 06:27 AM] TonyL#3577
So it'll make an entry level lower

{Reactions}
üíØ 

[13-Jan-19 06:27 AM] blackjok3r#3181
Going to add segid to listunspent... will make withdrawing much easier.

{Reactions}
üëå 

[13-Jan-19 06:28 AM] TonyL#3577
This rpc_connection object logic attracted me because I wrote 2 lines of code - and was able to communicate with daemon as I want and get a predictable same format data

[13-Jan-19 06:29 AM] TonyL#3577
No need to decode or encode something or anything else, lib cares about it for me üòÉ

{Reactions}
rum 

[13-Jan-19 06:32 AM] blackjok3r#3181
```put utxos into object sorted by segid .. like this:
    listunspent, sort by confirms.
    iterate down listunspent 
    put each utxo into list of segids utxos['segid'].append(utxo)
    should return object with each segid's utxos sorted by confirms.```

[13-Jan-19 06:33 AM] blackjok3r#3181
Will migrate staker repo to this RPC method first though...

[13-Jan-19 06:33 AM] TonyL#3577
Please let me know if you'll need any help with it

{Reactions}
üëå 

[13-Jan-19 07:22 AM] blackjok3r#3181
staker.py is migrated and fully error checked with proper exceptions.  Doing sendmany scripts next.

{Reactions}
üöÄ 

[13-Jan-19 08:27 AM] blackjok3r#3181
https://github.com/StakedChain/pos64staker/commit/90b8b296fe545a6a95c5b38907fd07f38475036a
Done. Fond a few bugs with scripts along the way and fixed those too.

{Embed}
https://github.com/StakedChain/pos64staker/commit/90b8b296fe545a6a95c5b38907fd07f38475036a
Convert to use rpc_connection object ¬∑ StakedChain/pos64staker@90...
https://avatars1.githubusercontent.com/u/30971146?s=200&v=4

[13-Jan-19 08:27 AM] blackjok3r#3181
Note, dont run sendmany script on node with -pubkey set mining to another wallet üòÇ

[13-Jan-19 08:29 AM] blackjok3r#3181
Had great idea for withdraw script too... simply lock all utxos you want to keep, use sendtoaddress / sendmany.. then unlock them again. üòÉ

[13-Jan-19 10:16 AM] TonyL#3577
Can advice to use rpc_connection as function argument - it will allow to re-use function with different connections with different names in different places of code or even different files

[13-Jan-19 10:17 AM] blackjok3r#3181
I tried to make the def_credentials inside a seperate file... but it dodnt work... If youc an get it to work that would be very nice.

[13-Jan-19 10:18 AM] blackjok3r#3181
copy the whole thing into the to pof every file si stupid... but I didnt want to waste time on it

[13-Jan-19 10:18 AM] TonyL#3577
https://github.com/StakedChain/pos64staker/blob/master/genaddresses.py#L51 let's say this function now will work only if you'll call variable name "rpc_connection"

{Embed}
https://github.com/StakedChain/pos64staker/blob/master/genaddresses.py
StakedChain/pos64staker
Automated staker for PoS assetchains. Contribute to StakedChain/pos64staker development by creating an account on GitHub.
https://avatars0.githubusercontent.com/u/42953759?s=400&v=4

[13-Jan-19 10:18 AM] TonyL#3577
It's just kinda `def genvaldump(rpc_connection):`
And then call it as genvaldump(someconnectionobjecthere)

[13-Jan-19 10:18 AM] TonyL#3577
Can make PR if needed sure

[13-Jan-19 10:19 AM] blackjok3r#3181
Thats fine.. all those scripts now work. What I want ideally is a file we can just import like
`import rpc_connection`
and then we can just do
` cfek_connection = def_credentials('CFEK') `

[13-Jan-19 10:20 AM] blackjok3r#3181
I wasnt able to get that to work

[13-Jan-19 10:20 AM] blackjok3r#3181
but when I copy pasted the def_credantials function and all its deps into the file it did work ü§∑

[13-Jan-19 10:20 AM] TonyL#3577
What do you want to do by `import rpc_connection`?

[13-Jan-19 10:21 AM] blackjok3r#3181
make it so that we dont need the entire def_credantials function in every singl file... if one change is made to it we need to edit every script

[13-Jan-19 10:22 AM] TonyL#3577
rpc_connection it's an object - not module
to import `def_credinails` function you have to write: `from pythonfile import def_credentials`

[13-Jan-19 10:22 AM] TonyL#3577
And all reusable stuff can separate to one file and use it as internal project lib (this pythonfile)

[13-Jan-19 10:25 AM] blackjok3r#3181
ahh cool. thanks. I will change that later... I was getting close to a listunspent filter ... thenm my computer froze. Give up for today. Come back to it tomorrow

{Reactions}
üëå 

[13-Jan-19 10:28 AM] TonyL#3577
Is it some important file? https://github.com/tonymorony/pos64staker/blob/master/importlist.py#L16

{Embed}
https://github.com/tonymorony/pos64staker/blob/master/importlist.py
tonymorony/pos64staker
Automated staker for PoS assetchains. Contribute to tonymorony/pos64staker development by creating an account on GitHub.
https://avatars1.githubusercontent.com/u/24797699?s=400&v=4

[13-Jan-19 10:29 AM] TonyL#3577
It will fail since there is no kmdrpc module anymore

[13-Jan-19 10:29 AM] blackjok3r#3181
ahh yeah... you dont actually need that, unless you move your staking address's to a new wallet/node

{Reactions}
üëå 

[13-Jan-19 10:29 AM] blackjok3r#3181
but it should be fixed yes

[13-Jan-19 10:42 AM] TonyL#3577
Opened PR üòÉ

{Reactions}
üëå 

[13-Jan-19 11:17 AM] TonyL#3577
Dont look on comments - Thai redbull is pure evil

[13-Jan-19 11:17 AM] TonyL#3577
üòÇ

[13-Jan-19 11:18 AM] blackjok3r#3181
I'll test it later on to make sure still works

[13-Jan-19 11:18 AM] blackjok3r#3181
Not home atm

[13-Jan-19 11:19 AM] TonyL#3577
Great üëç  
```./sendmany64.py
Please specify chain: CFEKX
Balance: 39446.87770396
Please specify the size of UTXOs: 1
Please specify the amount of UTXOs to send to each segid: 10
Total amount: 640.0
4264a40221a0650c3ca7312cb008e0ab28f2f3d0ba6bef78d3269cd520172759
812ffa2a320c5e8e8599e42eb4b0dc56ce82232ff2196999693796cef3e825aa
371c257a7cc22117adec66befe36238f96b72edba1a677dbc263a7e0e8147688
d54d057fea4ece32b6acf97f962dfc28d28341c2ccfb4f011e36a3a94c828ff9
72835f65aef13e5958721656400e9610f483117b7da616a96213371a8f52149d
6e35b8765b883edee7afb13ce7c67a84a11e7be0025e58870da78e0a1312b058
83062bf4a1c86f17fb581f23fc120a06733850d0ba2509ffc3a423cc649be808
5dd88b9f2d9f98b8fb7d6d95cd6a69cf1843a31072e39f8800c046634d9a85d9
71d492153f0c96ba9028a6372f84e87fcd242d0ddc66e1a008c11bb908c086ec
dc856a27096762c6896e6ceabe163aa9e6c50a688bcc9611813d36a7765b514f
Success!```
I've satisfied on this output - but don't know full logic

[13-Jan-19 11:20 AM] blackjok3r#3181
That's right... Sendmany64 is very simple... The random version took quite a while. And u won't be able to test the staker without coins, until I manage to work out the listunspent filter I don't want to send any coins as it could stall the chain.

{Reactions}
üëå 

[13-Jan-19 11:37 AM] Bar_F1sh_Rel#0834
@TonyL - just following through the logic in the v2 migrate script.
Is a third txt file required for the KMD signed dest-chain imports? - not sure if you can sign the same migration twice on KMD if the import to destination fails??

[13-Jan-19 11:43 AM] TonyL#3577
@Bar_F1sh_Rel Oh yeah I think it's needed to save `dest_tx_list` and `complete_tx_list` to re-execute this one https://github.com/StakedChain/PoS_scripts/blob/master/CC_scripts/migrations_python/migration_script_v2.py#L80
I just saved proposed by @Alright  parts - didn't look deep into it since never faced timeout on this part

{Embed}
https://github.com/StakedChain/PoS_scripts/blob/master/CC_scripts/migrations_python/migration_script_v2.py
StakedChain/PoS_scripts
various scripts we have developed on STAKED so far, none of these are perfect and some might not even work. use them as examples of what you can do. - StakedChain/PoS_scripts
https://avatars0.githubusercontent.com/u/42953759?s=400&v=4

[13-Jan-19 11:52 AM] blackjok3r#3181
It used to fail.on import but now it doesn't

[13-Jan-19 11:52 AM] blackjok3r#3181
The o ly way it fails is if the script or node crashes out

[13-Jan-19 11:53 AM] Bar_F1sh_Rel#0834
Lol - also writelines doesn't add any seperators - so it's all one long string

[13-Jan-19 11:53 AM] blackjok3r#3181
Just need export tx hex and payouts

[13-Jan-19 11:53 AM] blackjok3r#3181
And u can resume the processes

[13-Jan-19 11:55 AM] TonyL#3577
@Bar_F1sh_Rel Oh yes, it's better to separate lines üòÉ 
But can slice each 64 symbols on reading so file is compressed (without /n bytes haha) :trollface:

[13-Jan-19 11:57 AM] TonyL#3577
It would be great if you can make a PR for outputs storage improvement

[13-Jan-19 11:58 AM] Bar_F1sh_Rel#0834
Looking at that - also with comment above about the actual hex.

{Reactions}
üëç 

[13-Jan-19 12:35 PM] smk762 -  dracocanis ominator#7640
some minor changes to the bash version - https://github.com/StakedChain/PoS_scripts/pull/9

{Embed}
https://github.com/StakedChain/PoS_scripts/pull/9
added readouts and json for matching import/export by smk762 ¬∑ Pu...
https://avatars3.githubusercontent.com/u/35845239?s=400&v=4

{Reactions}
üí™ 

[13-Jan-19 12:36 PM] smk762 -  dracocanis ominator#7640
I'll be linking to theis in article being written for @benohanlon on Medium.

[13-Jan-19 12:36 PM] smk762 -  dracocanis ominator#7640
if you guys want me to mention the upcoming testing details let me know, might be a bit early until we know what the comp/bounty etc wil be

[13-Jan-19 12:37 PM] smk762 -  dracocanis ominator#7640
can probably hold off a few days until figured out

[13-Jan-19 01:05 PM] TonyL#3577
https://click.palletsprojects.com/en/7.x/ oh found  a cool package for cli tools

[13-Jan-19 01:35 PM] TonyL#3577
@blackjok3r btw maybe problem which you've faced when tried to re-use your code is  that you tried to import functions from file which you execute. Python renaming first executed module to `__main__` so you can't proper import from this module

[13-Jan-19 01:38 PM] smk762 -  dracocanis ominator#7640
@TonyL what's the most migrations you;ve done in the best time with your script? I'd like to give it a mention on the migrations article

[13-Jan-19 01:39 PM] blackjok3r#3181
There was a 1000 in 1000s that's cool as

[13-Jan-19 01:39 PM] smk762 -  dracocanis ominator#7640
I should get a discord screencap...

{Reactions}
üëå 

[13-Jan-19 01:39 PM] blackjok3r#3181
Got to bangkok

[13-Jan-19 01:40 PM] blackjok3r#3181
I think it was he said

[13-Jan-19 01:40 PM] smk762 -  dracocanis ominator#7640
`migration time` is getting me a few, might post a few overlaid

[13-Jan-19 01:40 PM] blackjok3r#3181
Yay, finally reached Bangkok  smiley 
Total migrations amount: 1000
1066.0806760787964 migration time (sec)

1 migration = ~1 second, these mempool things seems stable now

[13-Jan-19 01:46 PM] TonyL#3577
Fastest was like a 0.3 sec per migration:
```Total migrations amount: 5000
1610.750156402588 migration time (sec)```

[13-Jan-19 01:50 PM] TonyL#3577
When I've tried 10,000 per batch - time per migration was >

[13-Jan-19 01:55 PM] blackjok3r#3181
from reading the script... your waiting for each stage to complete for all steps and txns?

[13-Jan-19 02:07 PM] Bar_F1sh_Rel#0834
I suppose you could launch the script every 2 minutes to catch alternate blocks

[13-Jan-19 02:09 PM] blackjok3r#3181
yeah... if you do like 1000 at a time. the bash version is limited as, because its 1 script for each migrate... py version can do way more

[13-Jan-19 02:09 PM] blackjok3r#3181
I think its possible to nearly fill blocks wityh 3-4 nodes

[13-Jan-19 02:15 PM] TonyL#3577
I think it's possible to run few instances of python script in background

[13-Jan-19 02:15 PM] TonyL#3577
To try fill blocks from the same instance

[13-Jan-19 02:16 PM] blackjok3r#3181
CFEKPOS51 is moving again.. that was a bitch to start... Stupid VM's after a few days seems to become unstable.. I had no keyboard and mouse, but everything was still running... had to hard reset computer... lost all setup üò¶

[13-Jan-19 02:16 PM] TonyL#3577
And yep - I'm waiting for each previous step totally complete (for all txs) to proceed to other

{Reactions}
üëå 

[13-Jan-19 02:17 PM] blackjok3r#3181
If one single one has to wait for the next notarisation it will slow it down by about 5 mins

[13-Jan-19 02:17 PM] blackjok3r#3181
trick will be to make sure they all happen at once.

[13-Jan-19 02:18 PM] Bar_F1sh_Rel#0834
or be able to branch

[13-Jan-19 02:18 PM] Bar_F1sh_Rel#0834
as current block fill will not be known

[13-Jan-19 02:18 PM] TonyL#3577
It's possible to speedup script a lot I think if use intermediate data storage in process and broadcast each step separate permanently as a queues

[13-Jan-19 02:18 PM] blackjok3r#3181
you could check on the export tx stage fopr confirm,. they were all in the same block

[13-Jan-19 02:18 PM] blackjok3r#3181
then thread it

[13-Jan-19 02:19 PM] TonyL#3577
Oh just append successful things to the bottom of list and permanently check from next step this list

[13-Jan-19 02:19 PM] TonyL#3577
And next step pop top item from this list

[13-Jan-19 02:20 PM] blackjok3r#3181
the limit is how much you can poll the daemon... at some point it just stoips responding

[13-Jan-19 02:20 PM] blackjok3r#3181
one thing you can know... is what ever export tx was in a block will reach the same stage at the exact same time

[13-Jan-19 02:21 PM] TonyL#3577
You can set a delay between RPC calls like a 0.01 second if on some point daemon is hangs

[13-Jan-19 02:21 PM] TonyL#3577
But I've never got state of hanged daemon with this RPC lib even when did very scary While True things

[13-Jan-19 02:22 PM] blackjok3r#3181
yeah.. its mostly a limit on bash

[13-Jan-19 02:22 PM] blackjok3r#3181
py is much nicer way to do it

[13-Jan-19 02:24 PM] TonyL#3577
You have a tons of language packages for everything you want to do and if it's not enough you have tons of open sourced community packages

[13-Jan-19 02:24 PM] blackjok3r#3181
@Deleted User  was right... should have started using it a long time ago üòâ

[13-Jan-19 02:25 PM] blackjok3r#3181
still for me... the C++/C stuff is better.... it goes way faster.. If I can offload some heavy load to daemon its like 100x faster

[13-Jan-19 02:26 PM] blackjok3r#3181
listunspent call to add segid.. if use py to fetch each tx address then get segid... would take minutes or longer... from daemon no diffrence in time.

[13-Jan-19 02:28 PM] TonyL#3577
C and Python were designed for different things. C as I know mostly compilers/OSes/protocol stuff writing things. Even Python written on C hehe.
There is no better or worst imo - just kinda different things

[13-Jan-19 02:28 PM] blackjok3r#3181
agreed

[13-Jan-19 02:28 PM] TonyL#3577
Practicing some C in a free time now üòÉ

[13-Jan-19 02:28 PM] blackjok3r#3181
the stuff py does... is very hard in C... its about making them work together

[13-Jan-19 02:29 PM] blackjok3r#3181
C not so bad... C++ adds a lot... very hard to learn... I think the beginners book is 1200 pages

[13-Jan-19 02:30 PM] TonyL#3577
Yeah this book really scared me üòÉ So according to JL advice started from C book - it's just 250 pages üòÉ

[13-Jan-19 02:30 PM] blackjok3r#3181
still didnt read that book üòÇ

{Reactions}
ü§ì 

[13-Jan-19 02:31 PM] blackjok3r#3181
jl is better than any book.... as long as your question makes sense

{Reactions}
Komodo 

[13-Jan-19 02:34 PM] TonyL#3577
I think James will be not very happy if I'll start ask him questions which described in C for beginners book, so I want to some language fundamentals and style methods first

[13-Jan-19 02:36 PM] TonyL#3577
Comparison of human with book is provoke üòÇ

