==============================================================
Guild: Komodo
Channel: kmdlabs
Topic: Please read pinned messages
Messages: 100
Range: 
==============================================================

[19-Mar-19 03:23 AM] blackjok3r#3181
wait ... maybe im getting confused here... 
When you convert burn hex to import transaction on source

[19-Mar-19 03:23 AM] blackjok3r#3181
it will move the entire burn tx hex into the op_return

[19-Mar-19 03:23 AM] blackjok3r#3181
and add a bunch of stuff...

[19-Mar-19 03:24 AM] blackjok3r#3181
then on KMD complete stage, maybe it stays the same size, but adds the MoMoM hash to ti, or maybe it gets bigger

[19-Mar-19 03:24 AM] blackjok3r#3181
so its not the opret on the burntx you need, its the createimport tx

[19-Mar-19 03:25 AM] blackjok3r#3181
and complete tx

[19-Mar-19 03:25 AM] Alright#0419
I need to do burns myself right now

[19-Mar-19 03:25 AM] Alright#0419
with the latest code we'll be using

[19-Mar-19 03:25 AM] Alright#0419
can I do it on DIMXY3 or 4 without breaking everything

[19-Mar-19 03:25 AM] blackjok3r#3181
I think that might be safest, just checking nk with magic values them will merge rest of code

[19-Mar-19 03:25 AM] Alright#0419
just need burns, not imports

[19-Mar-19 03:26 AM] blackjok3r#3181
As long as you dont try and import I think its fine... but dimxy did say it should be backwards compatible

[19-Mar-19 03:26 AM] Alright#0419
did the burn OP_RETURN structure change recently?

[19-Mar-19 03:27 AM] blackjok3r#3181
I think it has yes... but maybe her reused the rawproof container to add the tokens, in which case it didnt

[19-Mar-19 03:27 AM] blackjok3r#3181
thats what it looks like, but the code changed a fair bit

[19-Mar-19 03:27 AM] Alright#0419
ok, let's get these chains up and I'll do my best to find an absolute limit

[19-Mar-19 03:28 AM] Alright#0419
if we can't find an absolute limit, do an arbitrary safe/sensible limit

[19-Mar-19 03:28 AM] blackjok3r#3181
yes. I think it should be fairly easy tow work out the maximum size create+compete import adds

[19-Mar-19 03:28 AM] Alright#0419
for example a chain called LABSTHISISAREALLYFUCKINGLONGTICKERNAME could mess things up

[19-Mar-19 03:29 AM] Alright#0419
so we may just have to limit things like thi

[19-Mar-19 03:29 AM] Alright#0419
same goes for cc id

[19-Mar-19 03:29 AM] blackjok3r#3181
um yes the name is limited to like 32 char or something, but actaul assetchain name si 64

[19-Mar-19 03:29 AM] blackjok3r#3181
so you use the maximum posible size

[19-Mar-19 03:29 AM] blackjok3r#3181
for each variable

[19-Mar-19 03:29 AM] Alright#0419
what is max?

[19-Mar-19 03:29 AM] blackjok3r#3181
I think its 32 hold on

[19-Mar-19 03:29 AM] Alright#0419
we'll make some stupidly long tickers right now ðŸ˜‚

[19-Mar-19 03:30 AM] blackjok3r#3181
you dont need to its capped

[19-Mar-19 03:30 AM] Alright#0419
CFEKDIMXYTHANKYOUJLANDDIMXYFORALLTHEHARDWORK

[19-Mar-19 03:30 AM] Alright#0419
how long is that

[19-Mar-19 03:30 AM] Alright#0419
ðŸ˜›

[19-Mar-19 03:31 AM] blackjok3r#3181
I just cant remeber where I saw it right now but the size of the assetchains ticker is limited to 65 chars.. but for the import/export stuff the limit is smaller

[19-Mar-19 03:32 AM] blackjok3r#3181
```    string targetSymbol = params[1].get_str();
    if (targetSymbol.size() == 0 || targetSymbol.size() > 32)
        throw runtime_error("targetSymbol length must be >0 and <=32");```

[19-Mar-19 03:32 AM] blackjok3r#3181
but we also added source.... I really dont think any of this is important

[19-Mar-19 03:32 AM] blackjok3r#3181
we only need to know how mauhc data is added later on...

[19-Mar-19 03:32 AM] blackjok3r#3181
when you create burn as long as the opret is smaller than the max plus that data

[19-Mar-19 03:33 AM] blackjok3r#3181
it fine... if it s over just say reduce size in some way, less vins, smaller token etc

[19-Mar-19 03:33 AM] blackjok3r#3181
all that matter is what is burnt can me imported...

[19-Mar-19 03:33 AM] blackjok3r#3181
Now the burn is a single RPC

[19-Mar-19 03:33 AM] blackjok3r#3181
it should be stupidly easy to limit it

[19-Mar-19 03:34 AM] blackjok3r#3181
take a burn tx and do crerate and compelte import on it and see how much bigger it gets

[19-Mar-19 03:34 AM] blackjok3r#3181
and do that over a few burns to amke sure its a cosntant size

[19-Mar-19 03:34 AM] Alright#0419
payouts and rawproof

[19-Mar-19 03:34 AM] blackjok3r#3181
those dont matter

[19-Mar-19 03:35 AM] Alright#0419
need to look at each of these

[19-Mar-19 03:35 AM] Alright#0419
they do

[19-Mar-19 03:35 AM] blackjok3r#3181
why

[19-Mar-19 03:35 AM] Alright#0419
they're in the OP_RETURN

[19-Mar-19 03:35 AM] Alright#0419
of burns

[19-Mar-19 03:35 AM] blackjok3r#3181
you make the burn till the very lst step

[19-Mar-19 03:35 AM] blackjok3r#3181
then check the size is under limit

[19-Mar-19 03:35 AM] blackjok3r#3181
ðŸ¤·

[19-Mar-19 03:35 AM] blackjok3r#3181
if it over dont release hex to user so they cant send it

[19-Mar-19 03:35 AM] Alright#0419
yes but I need to figure out max size of each

[19-Mar-19 03:35 AM] Alright#0419
of each variable in burn OP_RETURN

[19-Mar-19 03:35 AM] blackjok3r#3181
you only need the total size

[19-Mar-19 03:35 AM] blackjok3r#3181
look i can do this myself if tyou need lol

[19-Mar-19 03:36 AM] Alright#0419
how do you expect me to find out max total size without understanding the max size for each variable in it?

[19-Mar-19 03:36 AM] Alright#0419
maybe I'm misunderstanding what I'm meant to do here >.<

[19-Mar-19 03:36 AM] blackjok3r#3181
I think you are

[19-Mar-19 03:36 AM] blackjok3r#3181
`migrate_createimporttransaction`

[19-Mar-19 03:36 AM] blackjok3r#3181
turns a burntxc into a import

[19-Mar-19 03:36 AM] blackjok3r#3181
which puts the ENTIRE burn transaction

[19-Mar-19 03:36 AM] blackjok3r#3181
into the OP_RETURN

[19-Mar-19 03:37 AM] blackjok3r#3181
then `migrate_completeimporttransaction`

[19-Mar-19 03:37 AM] blackjok3r#3181
may ro may not make that a little bigger again, im not sure if its filling seroed out space, or adding more data

[19-Mar-19 03:37 AM] blackjok3r#3181
we need to know

[19-Mar-19 03:37 AM] blackjok3r#3181
exactly how much data those 2 steops add .. nothing else

[19-Mar-19 03:37 AM] Alright#0419
is payouts and proof always the same exact size?

[19-Mar-19 03:38 AM] Alright#0419
if so, you're right

[19-Mar-19 03:38 AM] blackjok3r#3181
rawproof can be any size but that doesnt matter

[19-Mar-19 03:38 AM] blackjok3r#3181
becasue the burn tx iself can eb whatever

[19-Mar-19 03:38 AM] Alright#0419
Ok, I understand

[19-Mar-19 03:38 AM] Alright#0419
we can always check burn before broadcasting

[19-Mar-19 03:38 AM] blackjok3r#3181
yes

[19-Mar-19 03:38 AM] Alright#0419
we just need to understand how much more is added in the import

[19-Mar-19 03:39 AM] blackjok3r#3181
yes

[19-Mar-19 03:39 AM] Alright#0419
let me look for that in the code

[19-Mar-19 03:39 AM] blackjok3r#3181
you can send a burn that will not be a valid import

[19-Mar-19 03:39 AM] blackjok3r#3181
we need to prevent that

[19-Mar-19 03:39 AM] blackjok3r#3181
consensus rules have limits but the RPCs are ingnoreing those limits

[19-Mar-19 03:40 AM] Alright#0419
completeimporttransaction is still the very last step, yes?

[19-Mar-19 03:40 AM] Alright#0419
this is what produces tx for target

[19-Mar-19 03:40 AM] Alright#0419
?

[19-Mar-19 03:40 AM] blackjok3r#3181
yes. it creates a tx that you send on target/

[19-Mar-19 03:41 AM] blackjok3r#3181
its a sign on KMD with the MoMoM hash

[19-Mar-19 03:41 AM] blackjok3r#3181
which is always the same size

[19-Mar-19 03:41 AM] blackjok3r#3181
if convert to import isnt always adding the same amount of data, then we need to figure out the maximum possible size it can add

[19-Mar-19 03:42 AM] blackjok3r#3181
burn tx is irrelavent in this case as long as its TOTAL size isnt too large

[19-Mar-19 03:46 AM] Alright#0419
@dimxy does the full OP_RETURN of the tokencreate on source chain need to be included in completemigrate transaction?

[19-Mar-19 03:46 AM] Alright#0419
seems this way at least, just trying to understand the flow of things here

[19-Mar-19 03:47 AM] Alright#0419
@blackjok3r https://github.com/KMDLabs/komodo/blob/72a065a9a030dcaeeb0f002e137cb1e119dfe2fb/src/importcoin.cpp#L65

{Embed}
https://github.com/KMDLabs/komodo/blob/72a065a9a030dcaeeb0f002e137cb1e119dfe2fb/src/importcoin.cpp
KMDLabs/komodo
Komodo. Contribute to KMDLabs/komodo development by creating an account on GitHub.

[19-Mar-19 03:49 AM] blackjok3r#3181
seems thats adding it on the creation of burn

[19-Mar-19 03:49 AM] blackjok3r#3181
surley it cant add token imformation to already burnt token ?

[19-Mar-19 03:51 AM] Alright#0419
@dimxy the validation on token imports uses tokens eval code, is this by design? Didn't look at the token 'c' validation, but it seems to bypass validation for IMPORT eval

{Reactions}
ðŸ¤¦ 

[19-Mar-19 03:52 AM] blackjok3r#3181
he added another one, I think so it has 2 eval codes

[19-Mar-19 04:03 AM] Alright#0419
validation for 'c' funcid in EVAL_TOKENS is "return true" ? ðŸ˜•

[19-Mar-19 04:12 AM] blackjok3r#3181
I dont think it should be used for anything

[19-Mar-19 04:12 AM] blackjok3r#3181
but if it is i'll change it to false ðŸ˜‰

[19-Mar-19 04:14 AM] blackjok3r#3181
`bool Eval::ImportCoin(const std::vector<uint8_t> params, const CTransaction &importTx, unsigned int nIn)`

